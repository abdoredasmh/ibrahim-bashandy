import{aA as u,q as f,z as i,E as m,a0 as g,aB as w,l as h}from"./CaF1xe-H.js";const P=u(async(s,d)=>{let a,l;if(console.log(`[Admin Middleware] Running for route: ${s.path} (from: ${d.path})`),!f().value)return console.log("[Admin Middleware] No user logged in, redirecting to login."),i("/login",{replace:!0});const o=m(),{profile:e,isFetchingProfile:n}=g(o);if(e.value&&e.value.role==="admin"){console.log("[Admin Middleware] Existing profile is admin. Access granted immediately.");return}if(!e.value&&n.value){console.log("[Admin Middleware] Profile missing or fetch in progress, waiting...");try{[a,l]=w(()=>new Promise((r,A)=>{const t=h(n,c=>{c||(console.log("[Admin Middleware] Profile fetch finished during wait."),t(),r())}),M=setTimeout(()=>{console.warn("[Admin Middleware] Waiting for profile timed out."),t(),r()},15e3)})),await a,l()}catch(r){return console.error("[Admin Middleware] Unexpected error while waiting for profile:",r.message),i("/",{replace:!0})}}if(!e.value)return console.error("[Admin Middleware] Final check: Profile data still unavailable."),o.fetchProfileError&&console.error("[Admin Middleware] Profile fetch error was:",o.fetchProfileError),i("/",{replace:!0});if(e.value.role!=="admin")return console.warn(`[Admin Middleware] Final check: User role is '${e.value.role}', access denied.`),i("/",{replace:!0});console.log("[Admin Middleware] Final check: Admin access granted.")});export{P as default};
