{"file":"admin.mjs","mappings":";;;;;;AAME,MAAqD,QAAA,0BAAA,OAAA,IAAA;AAAO,MAAW,QAAA;AACvE,uDAA6B,GAAA,IAAA,WAAA,KAAA,IAAA,GAAA;AAGzB,eAAa,gBAAA;AACf,MAAA,CAAA,KAAQ,OAAiE;AACzE,YAAkB,IAAA,6DAA2B;AAC/C,WAAA,WAAA,UAAA,EAAA,SAAA,KAAA,CAAA;AAAA,EAEA;AACA,QAAM,YAA6B,aAAA;AAInC,QAAY,EAAA,SAAA,kCAAyC,SAAA;AACnD,MAAA,iBAAuF,QAAA,MAAA,SAAA,SAAA;AACvF,YAAA,IAAA,2EAAA;AACF;AAAA,EAMA;AACE,MAAA,CAAA,iBAAiF,kBAAA,OAAA;AAC7E,YAAA,IAAA,qEAAA;AACA,QAAA;AACI;AAAA,MAAA,CAAA,QAAgB,SAAA,IAAAA,aAAyB,MAAA,IAAc,QAAA,CAAA,SAAA,WAAA;AACnD,cAAI,UAAW,MAAA,mBAAA,CAAA,aAAA;AACX,cAAA,CAAA,UAAoE;AAC5D,oBAAA,IAAA,wDAAA;AACA,oBAAA;AACZ,oBAAA;AAAA,UAAA;AAAA,QAGJ,CAAM;AACF,cAAA,YAAgE,WAAA,MAAA;AACxD,kBAAA,KAAA,mDAAA;AAIC,kBAAA;kBAGL;AAAA,QACX,GAAA,IAAA;AAAA,iBACoB,QAAA;AAAA;AAAA,IAEb,SAAA,WAAwE;AAChF,cAAkB,MAAA,kEAAsB,UAAA,OAAA;AAC5C,aAAA,WAAA,KAAA,EAAA,SAAA,KAAA,CAAA;AAAA,IAAA;AAAA,EAKF;AACE,MAAA,CAAA,eAA+E;AAC9E,kBAAc,iEAAmB;AACtB,QAAA,UAAA,mBAAqD;AAChE,cAAA,MAAA,+CAAA,UAAA,iBAAA;AAAA,IACD;AACF,WAAA,WAAA,KAAA,EAAA,SAAA,KAAA,CAAA;AAAA,EAGA;AACE,MAAA,QAAa,MAAA,SAAA,SAAA;AACb,YAAkB,KAAA,iDAAsB,QAAA,MAAA,IAAA,mBAAA;AAC1C,WAAA,WAAA,KAAA,EAAA,SAAA,KAAA,CAAA;AAAA,EAGA;AAEF,UAAC,IAAA,uDAAA;;","names":["__executeAsync"],"sources":["../../../../middleware/admin.ts"],"sourcesContent":["// middleware/admin.ts\r\nimport { useUserStore } from '~/stores/user';\r\nimport { storeToRefs } from 'pinia';\r\nimport { watch } from 'vue';\r\n\r\nexport default defineNuxtRouteMiddleware(async (to, from) => {\r\n  console.log(`[Admin Middleware] Running for route: ${to.path} (from: ${from.path})`);\r\n  const user = useSupabaseUser();\r\n\r\n  // 1. التحقق الفوري من تسجيل الدخول\r\n  if (!user.value) {\r\n    console.log('[Admin Middleware] No user logged in, redirecting to login.');\r\n    return navigateTo('/login', { replace: true });\r\n  }\r\n\r\n  const userStore = useUserStore();\r\n  const { profile, isFetchingProfile } = storeToRefs(userStore);\r\n\r\n  // --- <<< التحسين الرئيسي: تحقق من الحالة الحالية أولاً >>> ---\r\n  // إذا كان البروفايل موجوداً بالفعل وكان المستخدم admin، اسمح بالمرور فوراً\r\n  if (profile.value && profile.value.role === 'admin') {\r\n    console.log('[Admin Middleware] Existing profile is admin. Access granted immediately.');\r\n    return; // <-- السماح بالمرور\r\n  }\r\n  // --- <<< نهاية التحسين >>> ---\r\n\r\n\r\n  // 2. التحقق من تحميل البروفايل والانتظار فقط إذا لزم الأمر\r\n  // (إذا لم يكن البروفايل موجوداً أو لم يكن admin، وكان الجلب جارياً)\r\n  if (!profile.value && isFetchingProfile.value) {\r\n    console.log('[Admin Middleware] Profile missing or fetch in progress, waiting...');\r\n    try {\r\n        await new Promise<void>((resolve, reject) => { // ابقِ reject هنا لمعالجة الخطأ\r\n            const unwatch = watch(isFetchingProfile, (newValue) => {\r\n                if (!newValue) {\r\n                    console.log('[Admin Middleware] Profile fetch finished during wait.');\r\n                    unwatch();\r\n                    resolve(); // أكمل عندما ينتهي الجلب\r\n                }\r\n            });\r\n\r\n            const timeoutId = setTimeout(() => {\r\n                console.warn('[Admin Middleware] Waiting for profile timed out.');\r\n                unwatch();\r\n                 // --- <<< تعديل معالجة Timeout >>> ---\r\n                 // بدلاً من reject، سنقوم بـ resolve للسماح بالوصول إلى التحققات التالية\r\n                 // الـ reject كان يسبب إعادة التوجيه الفورية في الـ catch\r\n                 resolve();\r\n                 // reject(new Error('Profile fetch timed out')); // <-- لا نستخدم reject هنا\r\n                 // --- <<< نهاية التعديل >>> ---\r\n            }, 15000); // 5 ثوانٍ مهلة\r\n        });\r\n    } catch (waitError: any) {\r\n        // هذا الـ catch سيتم استدعاؤه فقط إذا حدث خطأ آخر غير Timeout\r\n        console.error('[Admin Middleware] Unexpected error while waiting for profile:', waitError.message);\r\n        return navigateTo('/', { replace: true }); // توجيه آمن في حالة الخطأ\r\n    }\r\n  }\r\n\r\n  // 3. إعادة التحقق النهائي بعد الانتظار المحتمل (أو إذا لم ندخل مرحلة الانتظار)\r\n  // تحقق مرة أخرى لأن الحالة قد تكون تغيرت أثناء الانتظار\r\n  if (!profile.value) {\r\n    console.error('[Admin Middleware] Final check: Profile data still unavailable.');\r\n     if (userStore.fetchProfileError) {\r\n        console.error('[Admin Middleware] Profile fetch error was:', userStore.fetchProfileError);\r\n     }\r\n    return navigateTo('/', { replace: true });\r\n  }\r\n\r\n  // 4. التحقق النهائي من دور المستخدم\r\n  if (profile.value.role !== 'admin') {\r\n    console.warn(`[Admin Middleware] Final check: User role is '${profile.value.role}', access denied.`);\r\n    return navigateTo('/', { replace: true });\r\n  }\r\n\r\n  // 5. السماح بالمرور للمشرف\r\n  console.log('[Admin Middleware] Final check: Admin access granted.');\r\n  // لا حاجة لـ return\r\n});"],"version":3}