{"version":3,"file":"_id_.vue2.mjs","sources":["../../../../../pages/quizzes/[id].vue"],"sourcesContent":["<template>\r\n  <div class=\"container mx-auto px-4 py-8\">\r\n\r\n    <!-- 1. Loading State -->\r\n    <div v-if=\"pending && !initialDataLoaded\" class=\"text-center py-20\">\r\n      <LoadingSpinner />\r\n      <p class=\"mt-4 text-gray-600 dark:text-gray-400\">جارٍ تحميل بيانات الاختبار...</p>\r\n    </div>\r\n\r\n    <!-- 2. Error / Authorization Failed State -->\r\n    <div v-else-if=\"loadError\" class=\"error-display\">\r\n       <div class=\"flex justify-center items-center text-red-500 dark:text-red-400 mb-4\">\r\n           <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-7 h-7\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 1 1-16 0 8 8 0 0 1 16 0Zm-8-5a.75.75 0 0 1 .75.75v4.5a.75.75 0 0 1-1.5 0v-4.5A.75.75 0 0 1 10 5Zm0 10a1 1 0 1 0 0-2 1 1 0 0 0 0 2Z\" clip-rule=\"evenodd\" /></svg>\r\n           <h2 class=\"text-2xl font-semibold ms-2\">\r\n            {{ loadError.message || 'لا يمكن الوصول للاختبار' }}\r\n           </h2>\r\n       </div>\r\n      <p class=\"text-sm text-red-700 dark:text-red-300 mb-6\">\r\n        {{ loadError.details || 'تعذر تحميل الاختبار المطلوب أو أنك لا تملك الصلاحية اللازمة لبدئه/عرضه.' }}\r\n      </p>\r\n       <NuxtLink\r\n         :to=\"getBackLink()\"\r\n         class=\"button-secondary error-button\"\r\n       >\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-5 h-5 ms-2\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 1 0 0-16 8 8 0 0 0 0 16Zm3.25-7.25a.75.75 0 0 0 0-1.5H8.66l2.1-1.95a.75.75 0 1 0-1.02-1.1l-3.5 3.25a.75.75 0 0 0 0 1.1l3.5 3.25a.75.75 0 0 0 1.02-1.1l-2.1-1.95h4.59Z\" clip-rule=\"evenodd\" /></svg>\r\n        <span>العودة</span>\r\n      </NuxtLink>\r\n    </div>\r\n\r\n    <!-- 3. Quiz Interface -->\r\n    <div v-else-if=\"quizData.quiz\" class=\"quiz-interface max-w-4xl mx-auto\">\r\n        <!-- Header -->\r\n        <div class=\"mb-6 pb-4 border-b border-cream-gray dark:border-gray-700\">\r\n            <div v-if=\"quizData.relatedLink\" class=\"text-sm text-center sm:text-right mb-2\">\r\n                <NuxtLink :to=\"quizData.relatedLink.to\" class=\"text-gray-500 dark:text-gray-400 hover:text-primary transition-colors\">\r\n                    ← العودة إلى: {{ quizData.relatedLink.text }}\r\n                </NuxtLink>\r\n            </div>\r\n            <h1 class=\"text-3xl font-bold text-brown-dark dark:text-beige-light mb-2 text-center sm:text-right\">\r\n                {{ quizData.quiz.title }}\r\n            </h1>\r\n            <p v-if=\"quizData.quiz.description\" class=\"text-gray-600 dark:text-gray-400 text-center sm:text-right\">\r\n                {{ quizData.quiz.description }}\r\n            </p>\r\n        </div>\r\n\r\n        <!-- Timer (Conditional) -->\r\n         <div v-if=\"isTimerActive\" class=\"timer-display\">\r\n             الوقت المتبقي: <span class=\"font-semibold tabular-nums\">{{ formattedTimeRemaining }}</span>\r\n         </div>\r\n\r\n        <!-- Display Overall Results (Viewing Mode) -->\r\n        <div v-if=\"isViewingAttempt && latestAttempt && latestAttempt.grading_status !== 'pending'\"\r\n            class=\"results-summary\">\r\n           <h3 class=\"results-title\">نتيجة المحاولة</h3>\r\n           <p v-if=\"latestAttempt.total_score !== null\" class=\"results-score\">\r\n               {{ latestAttempt.total_score }} / {{ totalPossiblePoints }}\r\n               <span class=\"text-sm font-normal\">({{ calculatePercentage(latestAttempt.total_score, totalPossiblePoints) }}%)</span>\r\n           </p>\r\n           <p v-else class=\"results-score-pending\">النتيجة النهائية قيد المراجعة أو غير متاحة بعد.</p>\r\n           <!-- Pass/Fail Badges -->\r\n           <span v-if=\"latestAttempt.passed === true\" class=\"badge-success\">\r\n               <svg class=\"badge-icon\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\" clip-rule=\"evenodd\" /></svg>\r\n               ناجح\r\n           </span>\r\n           <span v-else-if=\"latestAttempt.passed === false\" class=\"badge-danger\">\r\n                <svg class=\"badge-icon\" fill=\"currentColor\" viewBox=\"0 0 20 20\"><path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.28 7.22a.75.75 0 00-1.06 1.06L8.94 10l-1.72 1.72a.75.75 0 101.06 1.06L10 11.06l1.72 1.72a.75.75 0 101.06-1.06L11.06 10l1.72-1.72a.75.75 0 00-1.06-1.06L10 8.94 8.28 7.22z\" clip-rule=\"evenodd\" /></svg>\r\n               لم يتم الاجتياز\r\n           </span>\r\n           <p class=\"results-status\">حالة التصحيح: {{ getGradingStatusText(latestAttempt.grading_status) }}</p>\r\n           <p v-if=\"latestAttempt.submitted_at\" class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\r\n                تاريخ الإرسال: {{ new Date(latestAttempt.submitted_at).toLocaleString('ar-EG') }}\r\n           </p>\r\n       </div>\r\n\r\n      <!-- Quiz Form -->\r\n      <form @submit.prevent=\"() => handleSubmitAttempt(false)\" class=\"space-y-8\">\r\n        <div v-for=\"(question, index) in quizData.questions\" :key=\"question.id\" class=\"question-block\">\r\n          <p class=\"question-number\">\r\n            السؤال {{ index + 1 }}\r\n            <span class=\"text-xs\">({{ question.points ?? 1 }} نقطة)</span>\r\n          </p>\r\n          <p class=\"question-text\">{{ question.question_text }}</p>\r\n\r\n          <!-- Answer Area -->\r\n          <div class=\"answer-area\">\r\n            <!-- MCQ -->\r\n            <!-- NOTE: Reading question.question_options assumes RLS allows it or you use RPC/View -->\r\n            <fieldset v-if=\"question.type === 'mcq'\" class=\"space-y-3\">\r\n              <legend class=\"sr-only\">خيارات السؤال {{ index + 1 }}</legend>\r\n              <div v-for=\"option in question.question_options\" :key=\"option.id\"\r\n                   :class=\"['option-wrapper', getOptionClassesMcqTf(question, option)]\">\r\n                 <div class=\"radio-input-wrapper\">\r\n                  <input\r\n                    :id=\"`option-${option.id}`\" :name=\"`question-${question.id}`\" type=\"radio\"\r\n                    :value=\"option.id\" v-model=\"userAnswers[question.id]\"\r\n                    :disabled=\"isViewingAttempt || isSubmitting\" required class=\"radio-input\" />\r\n                 </div>\r\n                 <div class=\"option-label-wrapper\">\r\n                   <label :for=\"`option-${option.id}`\" :class=\"['option-label', (!isViewingAttempt && !isSubmitting) && 'cursor-pointer']\">\r\n                     {{ option.option_text }}\r\n                   </label>\r\n                 </div>\r\n                 <span v-if=\"isViewingAttempt && option.is_correct\" class=\"correct-indicator\" title=\"الإجابة الصحيحة\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-5 h-5\"><path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\" clip-rule=\"evenodd\" /></svg>\r\n                 </span>\r\n              </div>\r\n            </fieldset>\r\n\r\n            <!-- True/False -->\r\n            <fieldset v-else-if=\"question.type === 'true_false' || question.type === 'tf'\" class=\"space-y-3\">\r\n               <legend class=\"sr-only\">اختر صح أو خطأ للسؤال {{ index + 1 }}</legend>\r\n               <!-- NOTE: Reading question.question_options assumes RLS allows it or you use RPC/View -->\r\n               <div :class=\"['option-wrapper', getOptionClassesMcqTf(question, { id: -1, is_correct: true, option_text: 'صح' }, 'true')]\">\r\n                 <div class=\"radio-input-wrapper\">\r\n                   <input :id=\"`tf-${question.id}-true`\" :name=\"`question-${question.id}`\" type=\"radio\" value=\"true\" v-model=\"userAnswers[question.id]\" :disabled=\"isViewingAttempt || isSubmitting\" required class=\"radio-input\"/>\r\n                 </div>\r\n                 <div class=\"option-label-wrapper\">\r\n                   <label :for=\"`tf-${question.id}-true`\" :class=\"['option-label', (!isViewingAttempt && !isSubmitting) && 'cursor-pointer']\">صح</label>\r\n                 </div>\r\n                 <span v-if=\"isViewingAttempt && getCorrectAnswerTf(question.question_options) === true\" class=\"correct-indicator\" title=\"الإجابة الصحيحة\">\r\n                     <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-5 h-5\"><path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\" clip-rule=\"evenodd\" /></svg>\r\n                 </span>\r\n               </div>\r\n               <div :class=\"['option-wrapper', getOptionClassesMcqTf(question, { id: -2, is_correct: false, option_text: 'خطأ' }, 'false')]\">\r\n                 <div class=\"radio-input-wrapper\">\r\n                   <input :id=\"`tf-${question.id}-false`\" :name=\"`question-${question.id}`\" type=\"radio\" value=\"false\" v-model=\"userAnswers[question.id]\" :disabled=\"isViewingAttempt || isSubmitting\" required class=\"radio-input\"/>\r\n                 </div>\r\n                 <div class=\"option-label-wrapper\">\r\n                   <label :for=\"`tf-${question.id}-false`\" :class=\"['option-label', (!isViewingAttempt && !isSubmitting) && 'cursor-pointer']\">خطأ</label>\r\n                 </div>\r\n                 <span v-if=\"isViewingAttempt && getCorrectAnswerTf(question.question_options) === false\" class=\"correct-indicator\" title=\"الإجابة الصحيحة\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-5 h-5\"><path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\" clip-rule=\"evenodd\" /></svg>\r\n                 </span>\r\n               </div>\r\n            </fieldset>\r\n\r\n            <!-- Written -->\r\n            <div v-else-if=\"question.type === 'written'\">\r\n               <label :for=\"`written-${question.id}`\" class=\"sr-only\">إجابة السؤال {{ index + 1 }}</label>\r\n              <textarea\r\n                :id=\"`written-${question.id}`\"\r\n                rows=\"4\"\r\n                v-model=\"userAnswers[question.id]\"\r\n                :disabled=\"isViewingAttempt || isSubmitting\"\r\n                :required=\"!isViewingAttempt\"\r\n                class=\"textarea-input\"\r\n                :placeholder=\"isViewingAttempt ? 'لا توجد إجابة مكتوبة' : 'اكتب إجابتك هنا...'\"\r\n              ></textarea>\r\n              <!-- Display Manual Score/Feedback (from answers JSONB) -->\r\n              <div v-if=\"isViewingAttempt && latestAttempt?.answers_parsed?.manual_score_map?.[question.id] !== undefined\"\r\n                   class=\"manual-feedback-box\">\r\n                  <p class=\"manual-score\">\r\n                      الدرجة الممنوحة: {{ latestAttempt.answers_parsed.manual_score_map[question.id] }} / {{ question.points ?? 1 }}\r\n                  </p>\r\n                  <p v-if=\"latestAttempt.answers_parsed?.feedback_map?.[question.id]\" class=\"manual-feedback-text\">\r\n                      ملاحظات المصحح: {{ latestAttempt.answers_parsed.feedback_map[question.id] }}\r\n                  </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Submission Area (Taking Mode) -->\r\n        <div v-if=\"!isViewingAttempt\" class=\"submit-section\">\r\n           <p v-if=\"submitError\" class=\"submit-error\">{{ submitError }}</p>\r\n          <button type=\"submit\" :disabled=\"isSubmitting || !allQuestionsAnswered\" class=\"button-submit\">\r\n            <LoadingSpinner v-if=\"isSubmitting\" class=\"w-5 h-5 me-2 animate-spin\" />\r\n            <span>{{ isSubmitting ? 'جارٍ الإرسال...' : 'إرسال الإجابات' }}</span>\r\n          </button>\r\n           <p v-if=\"!allQuestionsAnswered && !isSubmitting\" class=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\r\n               يرجى الإجابة على جميع الأسئلة لتتمكن من الإرسال.\r\n           </p>\r\n        </div>\r\n\r\n         <!-- Back Button (Viewing Mode) -->\r\n         <div v-else class=\"back-section\">\r\n             <button type=\"button\" @click=\"router.back()\" class=\"button-back\">\r\n                 <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-5 h-5 me-2\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.793 2.232a.75.75 0 0 1-.025 1.06L3.622 7.25h10.878a.75.75 0 0 1 0 1.5H3.622l4.146 3.957a.75.75 0 0 1-1.036 1.086l-5.5-5.25a.75.75 0 0 1 0-1.086l5.5-5.25a.75.75 0 0 1 1.06.025Z\" clip-rule=\"evenodd\" /></svg>\r\n                 العودة\r\n             </button>\r\n         </div>\r\n\r\n      </form>\r\n    </div>\r\n    <!-- Fallback -->\r\n     <div v-else-if=\"!pending && !loadError\" class=\"text-center py-10 text-gray-500 dark:text-gray-400\">\r\n         لا توجد بيانات لعرضها أو أن الاختبار غير متاح.\r\n     </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n// --- Imports ---\r\nimport { ref, computed, watch, shallowRef, nextTick, onUnmounted } from 'vue';\r\nimport { useRoute, useSupabaseClient, useAsyncData, showError, navigateTo, createError, useRouter, useHead } from '#imports';\r\nimport type { Database, Tables, Enums, Json } from '~/types/database.types';\r\nimport { useUserStore } from '~/stores/user';\r\nimport { storeToRefs } from 'pinia';\r\nimport LoadingSpinner from '~/components/LoadingSpinner.vue';\r\n\r\n// --- Composables & Store ---\r\nconst route = useRoute();\r\nconst supabase = useSupabaseClient<Database>();\r\nconst userStore = useUserStore();\r\nconst { profile, isLoggedIn } = storeToRefs(userStore);\r\nconst router = useRouter();\r\n\r\nconsole.log(`--- QUIZ PAGE [${route.params.id}] SETUP STARTED ---`);\r\n\r\n// --- Types ---\r\ntype Option = Tables<'question_options'>;\r\ntype QuestionWithOptions = Tables<'quiz_questions'> & {\r\n  question_options: Option[]; // Ensure options are fetched\r\n};\r\ntype QuizAttempt = Tables<'quiz_attempts'> & {\r\n  answers_parsed?: Record<number | string, any>;\r\n};\r\ntype RelatedLink = { to: string; text: string } | null;\r\ntype QuizData = {\r\n  quiz: Tables<'quizzes'> & { course?: Pick<Tables<'study_courses'>, 'id' | 'title'>, lesson?: Pick<Tables<'lessons'>, 'id' | 'title' | 'course_id'> };\r\n  questions: QuestionWithOptions[];\r\n  isEnrolled: boolean;\r\n  previousAttemptsCount: number;\r\n  latestAttempt: QuizAttempt | null;\r\n  relatedLink: RelatedLink;\r\n  canTakeNewAttempt: boolean; // Authorization result\r\n};\r\ntype LoadError = { message: string; details?: string; statusCode?: number };\r\n\r\n// --- Route Param Validation ---\r\nconst quizIdParam = computed<number | null>(() => { /* ... (same as before) ... */\r\n    const rawParam = route.params.id as string;\r\n     if (!rawParam) {\r\n        // Cannot use showError here as it might run before hydration\r\n        console.error(\"Quiz Page Setup: Quiz ID parameter is missing.\");\r\n        return null;\r\n    }\r\n    const id = parseInt(rawParam, 10);\r\n    if (isNaN(id) || id <= 0) {\r\n        console.error(`Quiz Page Setup: Invalid Quiz ID parameter: \"${rawParam}\"`);\r\n        return null;\r\n    }\r\n    return id;\r\n});\r\n\r\n// --- State ---\r\nconst quizData = shallowRef<Partial<QuizData>>({}); // Start with partial empty object\r\nconst latestAttempt = shallowRef<QuizAttempt | null>(null);\r\nconst userAnswers = ref<Record<string | number, string | number | boolean | null>>({});\r\nconst isSubmitting = ref(false);\r\nconst submitError = ref<string | null>(null);\r\nconst loadError = ref<LoadError | null>(null);\r\nconst isViewingAttempt = ref(false);\r\nconst initialDataLoaded = ref(false); // Track if first load finished\r\n\r\n// --- Timer State ---\r\nconst timerInterval = ref<NodeJS.Timeout | null>(null);\r\nconst timeRemainingSeconds = ref(0);\r\nconst isTimerActive = ref(false);\r\n\r\n// --- Initial Auth Check ---\r\nif (process.client && !isLoggedIn.value) {\r\n    const redirectPath = route.fullPath;\r\n    console.warn(\"User not logged in, redirecting to login.\");\r\n    navigateTo(`/login?redirect=${encodeURIComponent(redirectPath)}`, { replace: true });\r\n}\r\nif (quizIdParam.value === null && process.client) {\r\n    showError({ statusCode: 400, statusMessage: 'معرف اختبار غير صالح.', fatal: true });\r\n}\r\n\r\n// --- Data Fetching & Authorization ---\r\nconst { data, pending, error: asyncDataError, refresh } = await useAsyncData<QuizData>(\r\n    `quizViewData-${quizIdParam.value}-${profile.value?.id ?? 'guest'}`, // Unique key\r\n    async () => {\r\n        initialDataLoaded.value = false; // Reset loading flag\r\n        loadError.value = null; // Reset errors on each fetch\r\n\r\n        const currentQuizId = quizIdParam.value;\r\n        const currentUser = profile.value;\r\n\r\n        // --- Pre-fetch Checks ---\r\n        if (!currentUser?.id) throw createError({ statusCode: 401, statusMessage: 'لم يتم التعرف على المستخدم.', fatal: true });\r\n        if (currentQuizId === null) throw createError({ statusCode: 400, statusMessage: 'معرف الاختبار غير صالح.', fatal: true });\r\n\r\n        console.log(`--- Fetching data for Quiz ${currentQuizId}, User ${currentUser.id} ---`);\r\n\r\n        try {\r\n            // 1. Fetch Quiz Details (includes potential course/lesson)\r\n            const { data: fetchedQuiz, error: quizFetchError } = await supabase\r\n                .from('quizzes')\r\n                .select(`*, course:study_courses!course_id ( id, title ), lesson:lessons!lesson_id ( id, title, course_id )`)\r\n                .eq('id', currentQuizId)\r\n                .single(); // Use single, expect one result\r\n\r\n            if (quizFetchError || !fetchedQuiz) {\r\n                throw createError({ statusCode: quizFetchError?.code === 'PGRST116' ? 404 : 500, statusMessage: 'الاختبار غير موجود أو حدث خطأ.', fatal: true });\r\n            }\r\n\r\n            let relatedLink: RelatedLink = null; /* ... (same as before) ... */\r\n             if (fetchedQuiz.lesson?.id && fetchedQuiz.lesson.course_id) {\r\n                 relatedLink = { to: `/study/courses/${fetchedQuiz.lesson.course_id}/lessons/${fetchedQuiz.lesson.id}`, text: `درس: ${fetchedQuiz.lesson.title}` };\r\n             } else if (fetchedQuiz.course?.id) {\r\n                 relatedLink = { to: `/study/courses/${fetchedQuiz.course.id}`, text: `دورة: ${fetchedQuiz.course.title}` };\r\n             }\r\n\r\n\r\n            // 2. Fetch Questions and Options (CRITICAL: RLS/RPC/View needed for student options)\r\n            // For now, assuming direct fetch works (requires permissive RLS or testing as admin)\r\n            const { data: fetchedQuestionsData, error: questionsFetchError } = await supabase\r\n                .from('quiz_questions')\r\n                .select(`*, question_options (*)`) // Select options nested\r\n                .eq('quiz_id', currentQuizId)\r\n                .order('question_order', { ascending: true, nullsLast: true })\r\n                .order('option_order', { referencedTable: 'question_options', ascending: true, nullsLast: true }); // Order options too\r\n\r\n            if (questionsFetchError) throw questionsFetchError;\r\n            const fetchedQuestions = (fetchedQuestionsData || []) as QuestionWithOptions[];\r\n\r\n            // 3. Fetch User's Attempts\r\n            const { data: fetchedAttempts, error: attemptsError } = await supabase\r\n                 .from('quiz_attempts')\r\n                 .select('*')\r\n                 .eq('quiz_id', currentQuizId)\r\n                 .eq('user_id', currentUser.id)\r\n                 .order('submitted_at', { ascending: false });\r\n\r\n            if (attemptsError) throw createError({ statusCode: 500, statusMessage: 'فشل جلب المحاولات السابقة.' });\r\n            const attemptsDone = fetchedAttempts?.length ?? 0;\r\n            let latestAttemptData = (fetchedAttempts && fetchedAttempts.length > 0 ? fetchedAttempts[0] : null) as QuizAttempt | null;\r\n\r\n            if (latestAttemptData?.answers && typeof latestAttemptData.answers === 'object') {\r\n                latestAttemptData.answers_parsed = { ...(latestAttemptData.answers as Record<string, any>) };\r\n            } else {\r\n                 if(latestAttemptData) latestAttemptData.answers_parsed = {}; // Ensure it exists even if empty\r\n            }\r\n\r\n            // 4. Check Enrollment\r\n            let isEnrolled = true; /* ... (same as before, improved error handling) ... */\r\n             if (fetchedQuiz.course_id) {\r\n                 const { count: enrollmentCount, error: enrollmentError } = await supabase\r\n                     .from('course_enrollments')\r\n                     .select('course_id', { count: 'exact', head: true })\r\n                     .eq('user_id', currentUser.id)\r\n                     .eq('course_id', fetchedQuiz.course_id);\r\n                 isEnrolled = (enrollmentCount ?? 0) > 0;\r\n                 if (enrollmentError) console.error(`Enrollment check failed: ${enrollmentError.message}`); // Log error but don't block\r\n             }\r\n\r\n            // 5. Authorization Logic: Determine if a new attempt can be taken\r\n            let canTakeNewAttempt = true;\r\n            let authFailReason = '';\r\n            if (!fetchedQuiz.is_active) { authFailReason = 'هذا الاختبار غير نشط حالياً.'; canTakeNewAttempt = false; }\r\n            else if (fetchedQuiz.course_id && !isEnrolled) { authFailReason = 'يجب أن تكون منتسبًا للدورة المرتبطة بهذا الاختبار أولاً.'; canTakeNewAttempt = false; }\r\n            else if (fetchedQuiz.max_attempts !== null && attemptsDone >= fetchedQuiz.max_attempts) { authFailReason = `لقد استنفدت جميع المحاولات المسموحة (${fetchedQuiz.max_attempts}).`; canTakeNewAttempt = false; }\r\n            // TODO: Add due date check if needed:\r\n            // else if (fetchedQuiz.due_date && new Date() > new Date(fetchedQuiz.due_date)) { ... }\r\n\r\n             // If cannot take and no previous attempt -> Forbidden\r\n            if (!canTakeNewAttempt && !latestAttemptData) {\r\n                throw createError({ statusCode: 403, statusMessage: authFailReason || 'لا يمكنك الوصول لهذا الاختبار.', fatal: true });\r\n            }\r\n\r\n            console.log(`--- Quiz data fetch successful. Can take new attempt: ${canTakeNewAttempt} ---`);\r\n\r\n            return {\r\n                quiz: fetchedQuiz,\r\n                questions: fetchedQuestions,\r\n                isEnrolled: isEnrolled,\r\n                previousAttemptsCount: attemptsDone,\r\n                latestAttempt: latestAttemptData,\r\n                relatedLink: relatedLink,\r\n                canTakeNewAttempt: canTakeNewAttempt\r\n            };\r\n\r\n        } catch (err: any) {\r\n             console.error('!!! ERROR in useAsyncData quiz fetch !!!:', err);\r\n             const message = err.data?.message || err.message || 'خطأ غير معروف';\r\n             const details = err.data?.details || undefined;\r\n             const statusCode = err.statusCode || 500;\r\n             // Set the loadError ref instead of throwing immediately if not fatal\r\n             loadError.value = { message, details, statusCode };\r\n             return {} as QuizData; // Return empty object on error to avoid breaking structure\r\n        } finally {\r\n             initialDataLoaded.value = true; // Mark that initial load attempt finished\r\n        }\r\n    }, {\r\n        watch: [quizIdParam, () => profile.value?.id] // Re-fetch if quiz or user changes\r\n    }\r\n);\r\n\r\n// --- Update Local State & Start Timer ---\r\nwatch(data, (newData) => {\r\n    stopTimer(); // Stop any previous timer when data changes\r\n    if (newData && newData.quiz && !loadError.value) {\r\n        quizData.value = newData;\r\n        latestAttempt.value = newData.latestAttempt;\r\n        userAnswers.value = {}; // Always reset answers first\r\n\r\n        if (newData.canTakeNewAttempt) {\r\n            isViewingAttempt.value = false;\r\n            // Initialize answers structure\r\n            newData.questions.forEach(q => { userAnswers.value[q.id] = null; });\r\n            console.log(\"[Watch] Mode: Taking New Attempt\");\r\n            // Check if timer should start\r\n            // ----> Adjust quiz type check as needed <----\r\n             if (newData.quiz.time_limit_minutes && (newData.quiz.type === 'course_final' || newData.quiz.type === 'module_final')) { // Example type check\r\n                startTimer(newData.quiz.time_limit_minutes);\r\n             }\r\n        } else if (newData.latestAttempt) {\r\n            isViewingAttempt.value = true;\r\n            userAnswers.value = newData.latestAttempt.answers_parsed ?? {};\r\n            // Ensure all questions have an entry in answers for reactivity\r\n             newData.questions.forEach(q => { if (!(q.id in userAnswers.value)) { userAnswers.value[q.id] = null; } });\r\n            console.log(\"[Watch] Mode: Viewing Last Attempt\");\r\n        } else {\r\n             // This case implies !canTakeNewAttempt && !latestAttempt which should have thrown 403\r\n             console.error(\"[Watch] Invalid state: Cannot take attempt and no previous attempt found.\");\r\n             isViewingAttempt.value = false; // Default state\r\n        }\r\n    } else {\r\n        // Handle case where data becomes null or error occurred after initial load\r\n        quizData.value = {};\r\n        latestAttempt.value = null;\r\n        userAnswers.value = {};\r\n        isViewingAttempt.value = false;\r\n        if (!pending.value && !loadError.value && initialDataLoaded.value) {\r\n             console.warn(\"[Watch] Data is null/invalid after load without specific error. Displaying fallback.\");\r\n             // Optionally set a generic load error if needed\r\n             loadError.value = loadError.value ?? { message: 'فشل تحميل بيانات الاختبار.', details: 'يرجى المحاولة مرة أخرى.' };\r\n        }\r\n    }\r\n}, { immediate: true });\r\n\r\n// --- Computed Properties ---\r\nconst totalPossiblePoints = computed(() => { /* ... (same as before) ... */\r\n    return quizData.value?.questions?.reduce((sum, q) => sum + (q.points ?? 1), 0) ?? 0; // Default points to 1\r\n});\r\n\r\nconst allQuestionsAnswered = computed(() => {\r\n    if (!quizData.value?.questions) return false;\r\n    return quizData.value.questions.every(q =>\r\n        userAnswers.value[q.id] !== null && userAnswers.value[q.id] !== undefined && userAnswers.value[q.id] !== ''\r\n    );\r\n});\r\n\r\nconst formattedTimeRemaining = computed(() => {\r\n    const minutes = Math.floor(timeRemainingSeconds.value / 60);\r\n    const seconds = timeRemainingSeconds.value % 60;\r\n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\r\n});\r\n\r\n// --- Helper Functions ---\r\nfunction getOptionClassesMcqTf( /* ... (same as before - requires fetched options) ... */\r\n    question: QuestionWithOptions,\r\n    option: Option | { id: number | string, is_correct: boolean, option_text: string },\r\n    tfValue?: 'true' | 'false'\r\n): string {\r\n    const baseClasses = 'relative flex items-start p-3 rounded-md border transition-colors duration-150';\r\n    if (!isViewingAttempt.value || !latestAttempt.value?.answers_parsed) {\r\n        return `${baseClasses} border-gray-200 dark:border-gray-600 hover:bg-cream-gray/40 dark:hover:bg-gray-700/40`;\r\n    }\r\n    const submittedAnswer = latestAttempt.value.answers_parsed[question.id];\r\n    // --- IMPORTANT: Assumes option.is_correct is available. NEEDS RLS/RPC/View FIX for students ---\r\n    const isCorrectOption = tfValue !== undefined\r\n        ? getCorrectAnswerTf(question.question_options)?.toString() === tfValue\r\n        : !!option.is_correct; // Use !! to ensure boolean\r\n    const isSelected = tfValue !== undefined\r\n        ? String(submittedAnswer) === tfValue\r\n        : submittedAnswer === option.id;\r\n\r\n    if (isCorrectOption) {\r\n        return `${baseClasses} border-golden-calm dark:border-golden-calm bg-golden-calm/10 dark:bg-golden-calm/20 ring-1 ring-golden-calm`;\r\n    } else if (isSelected && !isCorrectOption) {\r\n        return `${baseClasses} border-red-400 dark:border-red-600 bg-red-50 dark:bg-red-900/30 ring-1 ring-red-400`;\r\n    } else {\r\n        return `${baseClasses} border-gray-200 dark:border-gray-700 bg-gray-50 dark:bg-gray-700/30 opacity-70`;\r\n    }\r\n}\r\n\r\nfunction getCorrectAnswerTf(options: Option[]): boolean | null { /* ... (same as before - requires fetched options) ... */\r\n    const correctOption = options?.find(opt => opt.is_correct);\r\n    if (!correctOption) return null;\r\n    return /^(true|1|صح|نعم)$/i.test(correctOption.option_text);\r\n}\r\n\r\nfunction getGradingStatusText(status: string | null | undefined): string { /* ... (same as before) ... */\r\n     switch (status) {\r\n        case 'pending': return 'قيد المراجعة';\r\n        case 'auto_graded': return 'تم التصحيح آليًا';\r\n        case 'pending_manual': return 'يحتاج تصحيحًا يدويًا';\r\n        case 'graded': return 'تم التصحيح بالكامل';\r\n        default: return 'غير معروف';\r\n     }\r\n}\r\n\r\nconst getBackLink = (): string => { /* ... (same as before) ... */\r\n    if (quizData.value?.relatedLink) return quizData.value.relatedLink.to;\r\n    if (quizData.value?.quiz?.course_id) return `/study/courses/${quizData.value.quiz.course_id}`;\r\n    return '/study';\r\n};\r\n\r\nfunction calculatePercentage(score: number | null | undefined, total: number): number {\r\n    if (score === null || score === undefined || total <= 0) return 0;\r\n    return Math.round((score / total) * 100);\r\n}\r\n\r\n\r\n// --- Timer Actions ---\r\nfunction startTimer(minutes: number) {\r\n    stopTimer(); // Ensure no duplicates\r\n    timeRemainingSeconds.value = minutes * 60;\r\n    isTimerActive.value = true;\r\n    console.log(`[Timer] Starting timer for ${minutes} minutes (${timeRemainingSeconds.value}s).`);\r\n    timerInterval.value = setInterval(tickTimer, 1000);\r\n}\r\n\r\nfunction stopTimer() {\r\n    if (timerInterval.value) {\r\n        clearInterval(timerInterval.value);\r\n        timerInterval.value = null;\r\n        isTimerActive.value = false;\r\n        console.log(\"[Timer] Stopped.\");\r\n    }\r\n}\r\n\r\nfunction tickTimer() {\r\n    if (timeRemainingSeconds.value > 0) {\r\n        timeRemainingSeconds.value--;\r\n    } else {\r\n        console.log(\"[Timer] Time is up! Auto-submitting.\");\r\n        stopTimer();\r\n        handleSubmitAttempt(true); // Pass flag indicating auto-submit due to timeout\r\n    }\r\n}\r\n\r\n// --- Submission Action ---\r\nasync function handleSubmitAttempt(autoSubmitted: boolean = false) {\r\n    if (!quizData.value?.quiz || !profile.value?.id || isViewingAttempt.value || isSubmitting.value) return;\r\n\r\n    // Stop the timer if it was running\r\n    stopTimer();\r\n\r\n    // Validation (only if not auto-submitted, maybe allow auto-submit with unanswered?)\r\n    if (!autoSubmitted && !allQuestionsAnswered.value) {\r\n        submitError.value = `يرجى الإجابة على جميع الأسئلة.`;\r\n        // Scroll to first unanswered\r\n        const firstUnanswered = quizData.value.questions?.find(q => userAnswers.value[q.id] === null || userAnswers.value[q.id] === undefined || userAnswers.value[q.id] === '');\r\n        if (firstUnanswered) {\r\n             const element = document.querySelector(`[id^=\"option-${firstUnanswered.id}\"], [id^=\"tf-${firstUnanswered.id}\"], #written-${firstUnanswered.id}`);\r\n             element?.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n             (element as HTMLElement)?.focus();\r\n        }\r\n        return;\r\n    }\r\n\r\n    isSubmitting.value = true;\r\n    submitError.value = null;\r\n    const currentQuiz = quizData.value.quiz;\r\n    const currentUserId = profile.value.id;\r\n    const attemptNumber = (quizData.value.previousAttemptsCount ?? 0) + 1;\r\n\r\n    const attemptData: Omit<Tables<'quiz_attempts'>, 'id' | 'created_at' | 'started_at'> = {\r\n        user_id: currentUserId,\r\n        quiz_id: currentQuiz.id,\r\n        submitted_at: new Date().toISOString(),\r\n        answers: userAnswers.value as unknown as Json, // Store answers\r\n        attempt_number: attemptNumber,\r\n        // Determine initial grading status based on question types\r\n        grading_status: quizData.value.questions?.some(q => q.type === 'written') ? 'pending_manual' : 'pending',\r\n        score: null, manual_score: null, total_score: null, passed: null,\r\n    };\r\n\r\n    console.log(\"Submitting quiz attempt:\", attemptData);\r\n\r\n    try {\r\n        const { error: insertError } = await supabase.from('quiz_attempts').insert(attemptData).select().single(); // Select to get the new row ID if needed\r\n\r\n        if (insertError) throw insertError;\r\n\r\n        console.log(\"Quiz attempt submitted successfully!\");\r\n        // TODO: Replace with toast notification\r\n        if (autoSubmitted) {\r\n            alert('انتهى الوقت! تم إرسال إجاباتك تلقائيًا.');\r\n        } else {\r\n            alert('تم إرسال إجاباتك بنجاح!');\r\n        }\r\n\r\n        console.log(\"Refreshing data to view submitted attempt...\");\r\n        isSubmitting.value = false;\r\n        await refresh(); // Refresh data\r\n        await nextTick();\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n\r\n    } catch (err: any) {\r\n        console.error(\"Error submitting quiz attempt:\", err);\r\n        submitError.value = `فشل إرسال الإجابات: ${err.message || 'حدث خطأ غير متوقع.'}`;\r\n        isSubmitting.value = false;\r\n    }\r\n}\r\n\r\n// --- Cleanup ---\r\nonUnmounted(() => {\r\n    stopTimer(); // Important to clear interval on navigation\r\n});\r\n\r\n// --- SEO Meta Tags ---\r\nwatch([quizData, pending, loadError], ([newQuizData, loadingState, errorState]) => {\r\n    let pageTitle = 'الاختبار'; let description = 'قم بحل أسئلة الاختبار.';\r\n    if (loadingState && !initialDataLoaded.value) { pageTitle = 'جارٍ تحميل الاختبار...'; }\r\n    else if (errorState || !newQuizData?.quiz) { pageTitle = 'خطأ في الاختبار'; description = errorState?.message || 'تعذر الوصول للاختبار.'; }\r\n    else { pageTitle = newQuizData.quiz.title || 'اختبار'; description = newQuizData.quiz.description?.substring(0, 160) || `اختبار بعنوان \"${pageTitle}\"`; }\r\n    useHead({ title: pageTitle, meta: [ { name: 'description', content: description } ] });\r\n }, { immediate: true });\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n\r\n.quiz-interface { @apply space-y-6 md:space-y-8; }\r\n.error-display { @apply text-center py-10 px-6 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-700/50 rounded-lg max-w-lg mx-auto shadow-md; }\r\n\r\n/* Header & Results */\r\n.results-summary {\r\n    @apply p-4 mb-6 rounded-lg shadow text-center space-y-2\r\n           bg-yellow-50 dark:bg-yellow-900/30\r\n           border border-yellow-200 dark:border-yellow-700/50;\r\n}\r\n.results-title { @apply text-lg font-semibold text-brown-dark dark:text-beige-light; }\r\n.results-score { @apply text-2xl font-bold text-primary dark:text-golden-calm; }\r\n.results-score-pending { @apply text-gray-600 dark:text-gray-400 italic; }\r\n.results-status { @apply text-xs text-gray-500 dark:text-gray-400; }\r\n.badge-base { @apply inline-flex items-center px-3 py-0.5 rounded-full text-sm font-medium; }\r\n.badge-success { @apply badge-base bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200; }\r\n.badge-danger { @apply badge-base bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200; }\r\n.badge-icon { @apply -ml-1 mr-1.5 h-4 w-4; }\r\n\r\n/* Question Block */\r\n.question-block { @apply p-5 bg-beige-light dark:bg-gray-800 rounded-lg shadow border border-cream-gray dark:border-gray-700 transition-shadow duration-200; }\r\n.question-block:focus-within { @apply ring-2 ring-primary ring-offset-2 dark:ring-offset-gray-800; }\r\n.question-number { @apply text-sm font-semibold text-gray-500 dark:text-gray-400 mb-1; }\r\n.question-text { @apply text-lg font-medium text-brown-dark dark:text-beige-light mb-4 whitespace-pre-wrap; }\r\n.answer-area { @apply mt-4; }\r\n\r\n/* Options (MCQ/TF) */\r\n.option-wrapper { @apply relative flex items-start p-3 rounded-md border transition-colors duration-150; }\r\n.radio-input-wrapper { @apply flex items-center h-5; }\r\n.radio-input { @apply focus:ring-primary h-4 w-4 text-primary border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-primary dark:focus:ring-primary dark:focus:ring-offset-gray-800 disabled:opacity-70 disabled:cursor-not-allowed; }\r\n.option-label-wrapper { @apply ms-3 text-sm flex-grow; }\r\n.option-label { @apply font-medium text-gray-700 dark:text-gray-300; }\r\n.correct-indicator { @apply ms-auto text-golden-calm flex-shrink-0; }\r\n\r\n/* Written Answer */\r\n.textarea-input {\r\n    @apply shadow-sm focus:ring-primary focus:border-primary block w-full sm:text-sm border-cream-gray dark:border-gray-600 rounded-md dark:bg-gray-900 dark:text-beige-light dark:placeholder-gray-500\r\n           disabled:opacity-70\r\n           disabled:bg-gray-100\r\n           dark:disabled:bg-gray-700\r\n           disabled:cursor-not-allowed\r\n           min-h-[8rem];\r\n}\r\n.manual-feedback-box {\r\n    @apply mt-2 p-2 rounded\r\n           bg-blue-50 dark:bg-blue-900/30\r\n           border border-blue-200 dark:border-blue-700/50;\r\n}\r\n.manual-score { @apply text-sm font-medium text-blue-700 dark:text-blue-300; }\r\n.manual-feedback-text { @apply text-sm text-gray-600 dark:text-gray-400 mt-1 whitespace-pre-wrap; }\r\n\r\n/* Buttons & Submission */\r\n.submit-section { @apply pt-6 border-t border-cream-gray dark:border-gray-700 text-center; }\r\n.submit-error { @apply text-red-600 dark:text-red-400 text-sm mb-4; }\r\n.button-submit { @apply inline-flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md shadow-sm text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 disabled:opacity-60 dark:focus:ring-offset-gray-900; }\r\n.back-section { @apply pt-6 border-t border-cream-gray dark:border-gray-700 text-center; }\r\n.button-back {\r\n    @apply inline-flex items-center justify-center px-6 py-2 border border-cream-gray dark:border-gray-600 text-sm font-medium rounded-md text-brown-dark dark:text-beige-light bg-white dark:bg-gray-700\r\n           hover:bg-gray-50\r\n           dark:hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary dark:focus:ring-offset-gray-900;\r\n}\r\n.error-button { @apply border-red-300 dark:border-red-600 text-red-700 dark:text-red-200 bg-red-100 dark:bg-red-800/60 hover:bg-red-200 dark:hover:bg-red-700/70 focus:ring-red-500; }\r\n\r\n/* Base button styles */\r\n.button-base { @apply inline-flex items-center justify-center px-4 py-2 border text-sm font-medium rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-offset-2 dark:focus:ring-offset-gray-800 disabled:opacity-60 disabled:cursor-not-allowed transition-colors duration-150; }\r\n.button-secondary { @apply button-base border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-200 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600 focus:ring-blue-muted; }\r\n\r\n/* Ensure focus states are clearly visible */\r\nbutton:focus-visible, a:focus-visible, input:focus-visible, textarea:focus-visible {\r\n  outline: 2px solid var(--color-primary);\r\n  outline-offset: 2px;\r\n}\r\n</style>"],"names":["_withAsyncContext","_a"],"mappings":"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"}