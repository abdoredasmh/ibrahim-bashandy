{"version":3,"file":"index.vue2.mjs","sources":["../../../../../pages/lessons/index.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mx-auto px-10 \">\r\n\r\n    <!-- Filter Bar -->\r\n    <div class=\"mb-8\">\r\n      <div class=\"flex flex-wrap items-center gap-2 border-b border-gray-200 dark:border-gray-700 pb-4\">\r\n        <span class=\"text-sm font-medium text-gray-700 dark:text-gray-300 ms-2\">تصفية حسب السلسلة:</span>\r\n        <!-- All Button -->\r\n        <button\r\n          @click=\"selectCategory(null)\"\r\n          :class=\"[\r\n            'px-4 py-1.5 rounded-full text-sm font-medium transition-colors duration-150 ease-in-out focus:outline-none focus:ring-2 focus:ring-offset-2 dark:focus:ring-offset-gray-900 focus:ring-olive-green',\r\n            selectedCategoryId === null\r\n              ? 'bg-olive-green text-white shadow'\r\n              : 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600'\r\n          ]\"\r\n        >\r\n          الكل\r\n        </button>\r\n        <!-- Category Buttons -->\r\n        <button\r\n          v-for=\"filterCat in filterCategories\"\r\n          :key=\"filterCat.id\"\r\n          @click=\"selectCategory(filterCat.id)\"\r\n          :class=\"[\r\n            'px-4 py-1.5 rounded-full text-sm font-medium transition-colors duration-150 ease-in-out focus:outline-none focus:ring-2 focus:ring-offset-2 dark:focus:ring-offset-gray-900 focus:ring-olive-green',\r\n            selectedCategoryId === filterCat.id\r\n              ? 'bg-olive-green text-white shadow'\r\n              : 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600'\r\n          ]\"\r\n        >\r\n          {{ filterCat.name }}\r\n        </button>\r\n         <!-- Loading/Error for Filters -->\r\n          <div v-if=\"loadingFilters\" class=\"text-sm text-gray-500\">جار تحميل الفلاتر...</div>\r\n          <div v-if=\"filterError\" class=\"text-sm text-red-500\">خطأ تحميل الفلاتر.</div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Loading State (Initial or Filter Change) -->\r\n     <div v-if=\"pending\" class=\"text-center py-10\"> \r\n        <div class=\"inline-block animate-spin rounded-full h-12 w-12 border-b-2 border-olive-green\"></div>\r\n        <p class=\"mt-4 text-gray-600 dark:text-gray-400\">\r\n           {{ selectedCategoryId ? 'جارٍ تحميل دروس السلسلة المختارة...' : 'جارٍ تحميل السلاسل والدروس...' }}\r\n        </p>\r\n    </div>\r\n\r\n    <!-- Error State (Initial or Filter Change) -->\r\n     <div v-else-if=\"error\" class=\"text-center py-10 px-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg max-w-2xl mx-auto\">\r\n       <p class=\"text-red-600 dark:text-red-400 font-semibold mb-2 text-lg\">\r\n         <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-6 h-6 inline-block align-middle me-1\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 1 1-16 0 8 8 0 0 1 16 0Zm-8-5a.75.75 0 0 1 .75.75v4.5a.75.75 0 0 1-1.5 0v-4.5A.75.75 0 0 1 10 5Zm0 10a1 1 0 1 0 0-2 1 1 0 0 0 0 2Z\" clip-rule=\"evenodd\" /></svg>\r\n          {{ selectedCategoryId ? 'عذرًا، حدث خطأ أثناء تحميل دروس السلسلة.' : 'عذرًا، حدث خطأ أثناء التحميل الأولي.' }}\r\n       </p>\r\n       <pre v-if=\"error.message\" class=\"mt-1 text-xs text-left bg-red-100 dark:bg-red-800/30 p-2 rounded border border-red-200 dark:border-red-700 text-red-700 dark:text-red-300 whitespace-pre-wrap\">{{ error.message }}</pre>\r\n       <button @click=\"refreshInitialData\" class=\"mt-6 px-5 py-2 bg-olive-green text-white rounded hover:bg-opacity-80 transition-colors text-sm font-medium\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-4 h-4 inline-block align-middle me-1\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0 3.181 3.183a8.25 8.25 0 0 0 13.803-3.7M4.031 9.865a8.25 8.25 0 0 1 13.803-3.7l3.181 3.182m0-4.991v4.99\" /></svg>\r\n          {{ selectedCategoryId ? 'إعادة تحميل السلسلة' : 'إعادة المحاولة' }}\r\n       </button>\r\n     </div>\r\n\r\n    <!-- Display Categories and Lessons -->\r\n    <div v-else-if=\"allCategoriesWithLessons && allCategoriesWithLessons.length > 0\" class=\"space-y-12\">\r\n      <div v-for=\"category in allCategoriesWithLessons\" :key=\"category.id\" class=\"category-section\">\r\n        <h2 class=\"text-2xl font-semibold mb-4 text-brown-dark dark:text-beige-light border-b border-gray-300 dark:border-gray-700 pb-2\">\r\n          {{ category.name }}\r\n          <span class=\"text-sm font-normal text-gray-500 dark:text-gray-400 ms-2\">({{ category.totalLessonsCount }} درس)</span>\r\n        </h2>\r\n\r\n        <!-- Display lessons for this category -->\r\n        <div v-if=\"category.lessons && category.lessons.length > 0\" class=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-x-4 gap-y-6\">\r\n          <LessonCard\r\n            v-for=\"lesson in category.lessons\"\r\n            :key=\"lesson.id\"\r\n            :lesson=\"lesson\"\r\n          />\r\n        </div>\r\n         <p v-else class=\"text-gray-500 dark:text-gray-400 mt-4\">لا توجد دروس متاحة حاليًا في هذه السلسلة.</p>\r\n\r\n         <!-- Load More Lessons Button for the current category -->\r\n         <div v-if=\"category.loadedLessonsCount < category.totalLessonsCount\" class=\"mt-6 text-center\">\r\n             <button\r\n                @click=\"loadMoreLessonsForCategory(category.id)\"\r\n                :disabled=\"category.isLoadingMoreLessons\"\r\n                class=\"text-olive-green hover:underline font-medium text-sm disabled:opacity-50 disabled:cursor-not-allowed\"\r\n             >\r\n                <span v-if=\"!category.isLoadingMoreLessons\">\r\n                    تحميل المزيد من الدروس\r\n                     <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" class=\"w-4 h-4 inline-block align-middle ms-1\">\r\n                       <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"m19.5 8.25-7.5 7.5-7.5-7.5\" />\r\n                     </svg>\r\n                </span>\r\n                <span v-else>\r\n                     <div class=\"inline-block animate-spin rounded-full h-4 w-4 border-b-2 border-olive-green me-1 align-middle\"></div>\r\n                     جارٍ التحميل...\r\n                </span>\r\n             </button>\r\n         </div>\r\n          <p v-if=\"category.errorLoadingMore\" class=\"mt-2 text-center text-sm text-red-600 dark:text-red-400\">\r\n             حدث خطأ أثناء تحميل المزيد من الدروس.\r\n          </p>\r\n\r\n      </div>\r\n\r\n       <!-- Infinite Scroll Trigger for Categories (Only active when NO filter is selected) -->\r\n        <div ref=\"infiniteScrollTriggerElement\" v-show=\"selectedCategoryId === null\" class=\"h-10 flex justify-center items-center\">\r\n           <div v-if=\"loadingMoreCategories && !noMoreCategories\" class=\"text-center py-6\">\r\n               <div class=\"inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-olive-green\"></div>\r\n               <p class=\"text-sm text-gray-500 dark:text-gray-400 mt-2\">جارٍ تحميل المزيد من السلاسل...</p>\r\n           </div>\r\n        </div>\r\n\r\n       <!-- Message when all categories are loaded (Only shown when NO filter is selected) -->\r\n       <div v-if=\"noMoreCategories && selectedCategoryId === null && !pending && !loadingMoreCategories\" class=\"text-center py-6 text-gray-500 dark:text-gray-400\">\r\n           ~ نهاية قائمة السلاسل ~\r\n       </div>\r\n       <!-- Error message when loading more categories (Only shown when NO filter is selected) -->\r\n        <div v-if=\"error && currentPage > 1 && selectedCategoryId === null\" class=\"text-center py-6 text-red-600 dark:text-red-400\">\r\n          حدث خطأ أثناء تحميل المزيد من السلاسل. حاول التمرير للأسفل مرة أخرى.\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <!-- No categories/lessons found state -->\r\n    <div v-else-if=\"!pending && (!allCategoriesWithLessons || allCategoriesWithLessons.length === 0)\" class=\"text-center py-16 text-gray-500 dark:text-gray-400\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"w-12 h-12 mb-4 mx-auto text-gray-400 dark:text-gray-500\" aria-hidden=\"true\"><path d=\"M3.41 1.86L2 3.27l4.22 4.22c-.15.19-.22.44-.22.71v10c0 .55.45 1 1 1h12c.34 0 .65-.17.83-.42L20.73 21l1.41-1.41L3.41 1.86M7 18V9.54l8.46 8.46H7m5-8l-2-2H7V8l3.18 3.18L12 10m5 0v-.73L15.27 7.54C15.61 7.2 16.09 7 16.63 7H17v-.5a.5.5 0 0 1 .5-.5h.5a.5.5 0 0 1 .5.5V7h.5a.5.5 0 0 1 .5.5V12h-2v-2z\"/></svg>\r\n      <p class=\"text-lg\">\r\n         {{ selectedCategoryId ? 'لا توجد دروس متاحة حاليًا في هذه السلسلة.' : 'لا توجد سلاسل دروس متاحة حاليًا.' }}\r\n      </p>\r\n      <button v-if=\"selectedCategoryId\" @click=\"selectCategory(null)\" class=\"mt-4 text-sm text-olive-green hover:underline\">\r\n         عرض كل السلاسل\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted, onUnmounted, watch } from 'vue'; // Added watch\r\nimport { useSupabaseClient, useHead } from '#imports';\r\nimport LessonCard from '~/components/LessonCard.vue';\r\nimport type { Database, Tables } from '~/types/database.types';\r\n\r\n// Define Types\r\ntype Lesson = Pick<Tables<'lessons'>, 'id' | 'title' | 'description' | 'youtube_url' | 'created_at'>;\r\ntype Category = Pick<Tables<'categories'>, 'id' | 'name'>;\r\n\r\ninterface CategoryWithLessons extends Category {\r\n  lessons: Lesson[];\r\n  totalLessonsCount: number;\r\n  loadedLessonsCount: number;\r\n  isLoadingMoreLessons: boolean;\r\n  errorLoadingMore: boolean;\r\n}\r\n\r\n// Constants\r\nconst INITIAL_LESSONS_TO_SHOW = 8;\r\nconst LESSONS_PER_PAGE = 12;\r\nconst CATEGORIES_PER_PAGE = 5;\r\n\r\n// Supabase client\r\nconst client = useSupabaseClient<Database>();\r\n\r\n// Reactive State\r\nconst filterCategories = ref<Category[]>([]); // Categories for the filter bar\r\nconst loadingFilters = ref(false);\r\nconst filterError = ref<any>(null);\r\nconst selectedCategoryId = ref<number | null>(null); // null means 'All'\r\n\r\nconst allCategoriesWithLessons = ref<CategoryWithLessons[]>([]);\r\nconst pending = ref(true); // Main loading state (initial or after filter change)\r\nconst error = ref<any>(null); // Main error state\r\nconst currentPage = ref(1); // Category pagination page (used when 'All' is selected)\r\nconst loadingMoreCategories = ref(false);\r\nconst noMoreCategories = ref(false);\r\n\r\n// --- Filter Categories Fetch ---\r\nconst fetchFilterCategories = async () => {\r\n    loadingFilters.value = true;\r\n    filterError.value = null;\r\n    try {\r\n        const { data, error } = await client\r\n            .from('categories')\r\n            .select('id, name')\r\n            // TODO: Add .eq('type', 'lesson') if you have types distinguishing lesson categories\r\n            .order('name', { ascending: true }); // Order alphabetically for filter bar\r\n\r\n        if (error) throw error;\r\n        filterCategories.value = data || [];\r\n        console.log(\"Filter categories loaded:\", filterCategories.value);\r\n    } catch (err) {\r\n        console.error(\"Error fetching filter categories:\", err);\r\n        filterError.value = err;\r\n    } finally {\r\n        loadingFilters.value = false;\r\n    }\r\n};\r\n\r\n// --- Main Data Fetching Logic ---\r\nconst fetchCategoriesAndLessons = async (page: number = 1, categoryId: number | null = null): Promise<CategoryWithLessons[]> => {\r\n  console.log(`Fetching data. Page: ${page}, Selected Category ID: ${categoryId}`);\r\n  const from = (page - 1) * CATEGORIES_PER_PAGE;\r\n  const to = from + CATEGORIES_PER_PAGE - 1;\r\n\r\n  // 1. Build Category Query based on filter\r\n  let categoryQuery = client.from('categories').select('id, name');\r\n\r\n  if (categoryId !== null) {\r\n    // If a specific category is selected, fetch only that one\r\n    categoryQuery = categoryQuery.eq('id', categoryId);\r\n    console.log(`Fetching specific category: ${categoryId}`);\r\n  } else {\r\n    // If 'All' is selected, fetch categories paginated\r\n    categoryQuery = categoryQuery\r\n      // .eq('type', 'lesson') // Optional: If you need to filter category types\r\n      .order('created_at', { ascending: false })\r\n      .range(from, to);\r\n      console.log(`Fetching category page ${page} (range ${from}-${to})`);\r\n  }\r\n\r\n  const { data: categoriesData, error: categoriesError } = await categoryQuery;\r\n\r\n  if (categoriesError) throw categoriesError;\r\n\r\n  // Handle case where filtered category doesn't exist or no more categories for 'All'\r\n  if (!categoriesData || categoriesData.length === 0) {\r\n      if (categoryId !== null) {\r\n          console.warn(`Filtered category ${categoryId} not found.`);\r\n          // Optionally, clear the selection or show a specific message\r\n          // selectedCategoryId.value = null; // Example: revert to 'All'\r\n          // throw new Error(`السلسلة المختارة غير موجودة.`);\r\n          return []; // Return empty to show \"No lessons found\" message\r\n      } else {\r\n          console.log(\"No more categories found for pagination.\");\r\n          noMoreCategories.value = true; // Set flag for 'All' view\r\n          return [];\r\n      }\r\n  }\r\n\r\n  console.log(`Fetched ${categoriesData.length} categories. Fetching lessons and counts...`);\r\n\r\n  // 2. Fetch initial lessons and total count for each fetched category\r\n  const categoriesWithLessonsPromises = categoriesData.map(async (category) => {\r\n    // This part remains the same as before\r\n    try {\r\n      const { data: lessonsData, error: lessonsError, count } = await client\r\n        .from('lessons')\r\n        .select('id, title, description, youtube_url, created_at', { count: 'exact' })\r\n        .eq('category_id', category.id)\r\n        .is('course_id', null)\r\n        .order('created_at', { ascending: false })\r\n        .limit(INITIAL_LESSONS_TO_SHOW);\r\n\r\n      if (lessonsError) {\r\n        console.error(`Error fetching initial lessons for category ${category.id}:`, lessonsError);\r\n        return { ...category, lessons: [], totalLessonsCount: 0, loadedLessonsCount: 0, isLoadingMoreLessons: false, errorLoadingMore: true };\r\n      }\r\n      const totalCount = count ?? 0;\r\n      const initialLessons = lessonsData || [];\r\n      return { ...category, lessons: initialLessons, totalLessonsCount: totalCount, loadedLessonsCount: initialLessons.length, isLoadingMoreLessons: false, errorLoadingMore: false };\r\n    } catch (err) {\r\n        console.error(`Failed processing category ${category.id}:`, err);\r\n        return { ...category, lessons: [], totalLessonsCount: 0, loadedLessonsCount: 0, isLoadingMoreLessons: false, errorLoadingMore: true };\r\n    }\r\n  });\r\n\r\n  return await Promise.all(categoriesWithLessonsPromises);\r\n};\r\n\r\n// --- Load More Lessons (Remains the same) ---\r\nconst loadMoreLessonsForCategory = async (categoryId: number) => {\r\n    const category = allCategoriesWithLessons.value.find(c => c.id === categoryId);\r\n    if (!category || category.isLoadingMoreLessons || category.loadedLessonsCount >= category.totalLessonsCount) return;\r\n\r\n    console.log(`Loading more lessons for category ${categoryId}...`);\r\n    category.isLoadingMoreLessons = true;\r\n    category.errorLoadingMore = false;\r\n\r\n    try {\r\n        const from = category.loadedLessonsCount;\r\n        const to = from + LESSONS_PER_PAGE - 1;\r\n        const { data: newLessons, error: lessonsError } = await client\r\n            .from('lessons')\r\n            .select('id, title, description, youtube_url, created_at')\r\n            .eq('category_id', category.id)\r\n            .is('course_id', null)\r\n            .order('created_at', { ascending: false })\r\n            .range(from, to);\r\n\r\n        if (lessonsError) throw lessonsError;\r\n        if (newLessons && newLessons.length > 0) {\r\n            category.lessons.push(...newLessons);\r\n            category.loadedLessonsCount += newLessons.length;\r\n        }\r\n    } catch (err: any) {\r\n        console.error(`Error loading more lessons for category ${categoryId}:`, err);\r\n        category.errorLoadingMore = true;\r\n    } finally {\r\n        category.isLoadingMoreLessons = false;\r\n    }\r\n};\r\n\r\n// --- Infinite Scrolling for Categories (Only when 'All' is selected) ---\r\nconst infiniteScrollTriggerElement = ref<HTMLElement | null>(null);\r\nlet observer: IntersectionObserver | null = null;\r\n\r\nconst loadMoreCategories = async () => {\r\n    // *** Add check for selectedCategoryId ***\r\n    if (loadingMoreCategories.value || noMoreCategories.value || error.value || selectedCategoryId.value !== null) {\r\n         console.log(\"Skipping load more categories (loading, no more, error, or filter active).\");\r\n         return;\r\n    }\r\n\r\n    loadingMoreCategories.value = true;\r\n    error.value = null;\r\n    console.log(\"Loading more categories...\");\r\n    try {\r\n        currentPage.value++;\r\n        // *** Pass null for categoryId to fetch paginated categories ***\r\n        const newCategories = await fetchCategoriesAndLessons(currentPage.value, null);\r\n        if (newCategories.length > 0) {\r\n             allCategoriesWithLessons.value.push(...newCategories);\r\n        }\r\n        // noMoreCategories flag handled inside fetchCategoriesAndLessons\r\n    } catch (err: any) {\r\n        console.error(\"Error loading more categories:\", err);\r\n        error.value = err;\r\n        currentPage.value--;\r\n    } finally {\r\n        loadingMoreCategories.value = false;\r\n    }\r\n};\r\n\r\n// --- Initial Data Load and Refresh ---\r\nconst refreshInitialData = async () => {\r\n    console.log(\"Refreshing data with selected category:\", selectedCategoryId.value);\r\n    pending.value = true; // Set main loading state\r\n    error.value = null;\r\n    noMoreCategories.value = false; // Reset no more flag\r\n    currentPage.value = 1; // Reset page count\r\n    allCategoriesWithLessons.value = []; // Clear existing data\r\n\r\n     try {\r\n      // *** Pass the currently selected category ID (or null) ***\r\n      const initialData = await fetchCategoriesAndLessons(1, selectedCategoryId.value);\r\n      allCategoriesWithLessons.value = initialData;\r\n       // Check if no more applies (only relevant if 'All' was selected)\r\n       if (selectedCategoryId.value === null && initialData.length < CATEGORIES_PER_PAGE) {\r\n          noMoreCategories.value = true;\r\n       }\r\n    } catch (err: any) {\r\n      console.error(\"Error during data refresh:\", err)\r\n      error.value = err;\r\n    } finally {\r\n      pending.value = false; // End loading state\r\n    }\r\n};\r\n\r\n// --- Filter Selection ---\r\nconst selectCategory = (categoryId: number | null) => {\r\n  if (selectedCategoryId.value === categoryId) return; // Do nothing if already selected\r\n\r\n  console.log(`Selecting category: ${categoryId === null ? 'All' : categoryId}`);\r\n  selectedCategoryId.value = categoryId;\r\n  // Re-fetch data based on the new selection\r\n  refreshInitialData();\r\n};\r\n\r\n\r\n// --- Lifecycle Hooks ---\r\nonMounted(async () => {\r\n  await fetchFilterCategories(); // Fetch filter buttons first\r\n  await refreshInitialData(); // Then load initial data ('All' by default)\r\n\r\n  // Setup Intersection Observer\r\n  if (infiniteScrollTriggerElement.value) {\r\n    observer = new IntersectionObserver(\r\n      (entries) => {\r\n        // *** Trigger only if 'All' is selected and trigger is visible ***\r\n        if (entries[0].isIntersecting && !pending.value && selectedCategoryId.value === null) {\r\n          console.log(\"Infinite scroll trigger intersected (All view)!\");\r\n          loadMoreCategories();\r\n        }\r\n      },\r\n      { threshold: 0.1 }\r\n    );\r\n    observer.observe(infiniteScrollTriggerElement.value);\r\n    console.log(\"Infinite scroll observer attached.\");\r\n  } else {\r\n      console.warn(\"Infinite scroll trigger element not found on mount.\");\r\n  }\r\n});\r\n\r\nonUnmounted(() => {\r\n  if (observer && infiniteScrollTriggerElement.value) {\r\n    observer.unobserve(infiniteScrollTriggerElement.value);\r\n    console.log(\"Infinite scroll observer disconnected.\");\r\n  }\r\n  observer = null;\r\n});\r\n\r\n// --- SEO ---\r\nuseHead({\r\n  title: 'سلاسل الدروس - موقع الشيخ إبراهيم بشندي',\r\n  meta: [\r\n    { name: 'description', content: 'تصفح واستمع إلى سلاسل الدروس والمحاضرات العامة للشيخ إبراهيم بشندي في مختلف العلوم الشرعية.' }\r\n  ]\r\n})\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.category-section:not(:last-child) {\r\n  border-bottom: 1px solid theme('colors.gray.200');\r\n  @apply dark:border-gray-700;\r\n  padding-bottom: theme('spacing.12'); /* pb-12 */\r\n}\r\n</style>"],"names":[],"mappings":";;;;;;;;;AA+Je,sBAA4B;AAGrC,UAAA,mBAAmB,IAAgB,EAAE;AACrC,UAAA,iBAAiB,IAAI,KAAK;AAC1B,UAAA,cAAc,IAAS,IAAI;AAC3B,UAAA,qBAAqB,IAAmB,IAAI;AAE5C,UAAA,2BAA2B,IAA2B,EAAE;AACxD,UAAA,UAAU,IAAI,IAAI;AAClB,UAAA,QAAQ,IAAS,IAAI;AACrB,UAAA,cAAc,IAAI,CAAC;AACnB,UAAA,wBAAwB,IAAI,KAAK;AACjC,UAAA,mBAAmB,IAAI,KAAK;AAiIG,QAAwB,IAAI;AAmGzD,YAAA;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,QACJ,EAAE,MAAM,eAAe,SAAS,8FAA8F;AAAA,MAAA;AAAA,IAChI,CACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}