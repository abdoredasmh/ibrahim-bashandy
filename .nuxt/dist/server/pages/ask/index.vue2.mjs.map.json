{"file":"index.vue2.mjs","mappings":"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","names":[],"sources":["../../../../../pages/ask/index.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mx-auto px-4 py-8\">\r\n    <h1 class=\"text-3xl font-bold text-brown-dark dark:text-brown-dark mb-8 border-b-2 border-olive-green pb-2\">\r\n      اسأل الشيخ\r\n    </h1>\r\n\r\n    <!-- قسم إرسال السؤال (للمستخدم المسجل) -->\r\n    <section v-if=\"user\" class=\"mb-10 p-6 bg-beige-light dark:bg-cream-gray rounded-lg shadow-md border border-cream-gray dark:border-gray-700\">\r\n      <h2 class=\"text-xl font-semibold text-brown-dark dark:text-brown-dark mb-4\">\r\n        أرسل سؤالك للشيخ\r\n      </h2>\r\n      <form @submit.prevent=\"submitQuestion\">\r\n        <div>\r\n          <textarea\r\n            v-model=\"questionText\"\r\n            rows=\"4\"\r\n            class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm dark:bg-gray-800 dark:border-gray-600 dark:text-white placeholder-gray-400 dark:placeholder-gray-500 disabled:opacity-70\"\r\n            placeholder=\"اكتب سؤالك هنا...\"\r\n            required\r\n            :aria-describedby=\"questionError ? 'question-error-message' : 'question-help-text'\"\r\n            :class=\"{ 'border-red-500 dark:border-red-600': questionError }\"\r\n            :disabled=\"isSubmitting\"\r\n            @input=\"validateQuestionLength\"\r\n          ></textarea>\r\n          <p id=\"question-help-text\" class=\"mt-1 text-xs text-gray-500 dark:text-gray-400\">\r\n            يجب أن يكون السؤال {{ MIN_QUESTION_LENGTH }} حروف على الأقل. (الحالي: {{ questionText.trim().length }} حرف)\r\n          </p>\r\n          <p v-if=\"questionError\" id=\"question-error-message\" class=\"mt-1 text-xs text-red-600 dark:text-red-400\">\r\n            {{ questionError }}\r\n          </p>\r\n        </div>\r\n\r\n        <div class=\"mt-4 flex items-center justify-end gap-4 flex-wrap\">\r\n          <!-- رسالة النجاح -->\r\n          <transition name=\"fade\">\r\n            <p v-if=\"submitSuccess\" class=\"text-sm text-green-600 dark:text-green-400 order-1 sm:order-none\">\r\n              تم إرسال سؤالك بنجاح!\r\n            </p>\r\n          </transition>\r\n           <!-- رسالة الخطأ العام للإرسال -->\r\n          <p v-if=\"submitError\" class=\"text-sm text-red-600 dark:text-red-400 order-1 sm:order-none\">\r\n            {{ submitError }}\r\n          </p>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            :disabled=\"isSubmitting || isQuestionInvalid\"\r\n            class=\"inline-flex items-center justify-center px-5 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50 dark:focus:ring-offset-gray-900 order-2 sm:order-none\"\r\n            :style=\"{ backgroundColor: 'var(--color-olive-green)' }\"\r\n            >\r\n            <svg v-if=\"isSubmitting\" class=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n              <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n              <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n            </svg>\r\n            <span v-if=\"isSubmitting\">جاري الإرسال...</span>\r\n            <span v-else>إرسال السؤال</span>\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </section>\r\n\r\n    <!-- رسالة لغير المسجلين -->\r\n    <section v-else class=\"mb-10 p-6 text-center bg-gray-100 dark:bg-gray-800 rounded-md\">\r\n       <p class=\"text-gray-700 dark:text-gray-300\">\r\n         <NuxtLink to=\"/login\" class=\"text-primary-600 hover:underline dark:text-primary-400 font-medium\">سجّل الدخول</NuxtLink>\r\n         أو <NuxtLink to=\"/signup\" class=\"text-primary-600 hover:underline dark:text-primary-400 font-medium\">أنشئ حسابًا جديدًا</NuxtLink> لتتمكن من إرسال سؤالك.\r\n       </p>\r\n     </section>\r\n\r\n    <!-- قسم الأسئلة العامة المجابة -->\r\n    <section>\r\n      <h2 class=\"text-2xl font-semibold text-brown-dark dark:text-brown-dark mb-6 border-b border-cream-gray dark:border-gray-700 pb-2\">\r\n        أسئلة شائعة ومجابة\r\n      </h2>\r\n\r\n      <!-- حالات التحميل والخطأ للأسئلة العامة -->\r\n      <div v-if=\"isLoadingPublic && publicQuestions.length === 0\" class=\"text-center py-10\">\r\n        <LoadingSpinner />\r\n        <p class=\"mt-4 text-gray-600 dark:text-gray-400\">جارٍ تحميل الأسئلة...</p>\r\n      </div>\r\n      <div v-else-if=\"fetchErrorPublic\" class=\"text-center py-10 text-red-600 dark:text-red-400\">\r\n        حدث خطأ أثناء تحميل الأسئلة: {{ fetchErrorPublic }}\r\n        <button @click=\"refreshPublicData\" class=\"mt-2 block mx-auto text-sm text-primary-600 hover:underline\">إعادة المحاولة</button>\r\n      </div>\r\n\r\n      <!-- عرض الفلاتر والأسئلة -->\r\n      <div v-else>\r\n        <!-- فلاتر التصنيف -->\r\n        <div class=\"flex flex-wrap gap-2 mb-8 items-center\">\r\n          <button\r\n            @click=\"selectedCategory = null\"\r\n            :disabled=\"isLoadingPublic\"\r\n            :class=\"[\r\n              'px-4 py-1.5 text-sm font-medium rounded-full transition-colors duration-150',\r\n              selectedCategory === null\r\n                ? 'bg-olive-green text-white shadow'\r\n                : 'bg-gray-200 text-gray-700 hover:bg-gray-300 dark:bg-gray-700 dark:text-gray-200 dark:hover:bg-gray-600',\r\n              isLoadingPublic ? 'opacity-70 cursor-not-allowed' : ''\r\n            ]\"\r\n          >\r\n            الكل\r\n          </button>\r\n          <button\r\n            v-for=\"category in categories\"\r\n            :key=\"category.id\"\r\n            @click=\"selectedCategory = category.id\"\r\n            :disabled=\"isLoadingPublic\"\r\n            :class=\"[\r\n              'px-4 py-1.5 text-sm font-medium rounded-full transition-colors duration-150',\r\n              selectedCategory === category.id\r\n                ? 'bg-olive-green text-white shadow'\r\n                : 'bg-gray-200 text-gray-700 hover:bg-gray-300 dark:bg-gray-700 dark:text-gray-200 dark:hover:bg-gray-600',\r\n              isLoadingPublic ? 'opacity-70 cursor-not-allowed' : ''\r\n            ]\"\r\n          >\r\n            {{ category.name }}\r\n          </button>\r\n           <span v-if=\"isLoadingCategories && !categories.length\" class=\"text-sm text-gray-500 italic\">جارٍ تحميل التصنيفات...</span>\r\n           <!-- مؤشر تحميل صغير عند تغيير الفلتر أو الصفحة -->\r\n            <LoadingSpinner v-if=\"isLoadingPublic\" class=\"w-4 h-4 text-gray-500 inline-block ms-2\" />\r\n        </div>\r\n\r\n        <!-- قائمة الأسئلة -->\r\n        <div v-if=\"publicQuestions.length > 0\" class=\"space-y-6\">\r\n          <div\r\n            v-for=\"qa in publicQuestions\"\r\n            :key=\"qa.id\"\r\n            class=\"bg-white dark:bg-gray-800 rounded-lg shadow border border-gray-200 dark:border-gray-700 overflow-hidden transition-shadow duration-200 hover:shadow-md\"\r\n          >\r\n            <div class=\"p-5\">\r\n              <span v-if=\"qa.question_categories?.name\" class=\"inline-block bg-blue-100 text-blue-800 text-xs font-medium mb-2 px-2.5 py-0.5 rounded-full dark:bg-blue-900 dark:text-blue-300\">\r\n                {{ qa.question_categories.name }}\r\n              </span>\r\n              <h3 class=\"font-semibold text-lg text-gray-800 dark:text-gray-100 mb-2\">\r\n                <span class=\"text-gray-500 dark:text-gray-400\">س:</span>\r\n                {{ qa.question_text }}\r\n              </h3>\r\n            </div>\r\n            <div v-if=\"qa.answer_text\" class=\"bg-gray-50 dark:bg-gray-700/50 p-5 border-t border-gray-200 dark:border-gray-600\">\r\n              <h4 class=\"font-semibold text-md text-olive-green dark:text-yellow-400 mb-2 flex items-center\">\r\n                 <span class=\"bg-olive-green dark:bg-yellow-400 text-white dark:text-gray-900 rounded-full w-5 h-5 flex items-center justify-center text-xs me-2\">ج</span>\r\n                <span>جواب الشيخ:</span>\r\n              </h4>\r\n               <div class=\"prose prose-sm dark:prose-invert max-w-none text-gray-700 dark:text-gray-200\">\r\n                 <p class=\"whitespace-pre-wrap\">{{ qa.answer_text }}</p>\r\n               </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- حالة عدم وجود أسئلة (بعد الفلترة أو بشكل عام لهذه الصفحة) -->\r\n        <div v-else-if=\"!isLoadingPublic && publicQuestions.length === 0\" class=\"text-center py-10 text-gray-500 dark:text-gray-400\">\r\n          <p v-if=\"selectedCategory === null\">لا توجد أسئلة مجابة متاحة حاليًا.</p>\r\n          <p v-else>لا توجد أسئلة مجابة تطابق هذا التصنيف حاليًا.</p>\r\n        </div>\r\n\r\n         <!-- عناصر التحكم في الصفحات -->\r\n       <div v-if=\"totalPages > 1\" class=\"mt-8 flex justify-center items-center space-x-2 rtl:space-x-reverse\">\r\n          <button\r\n            @click=\"changePage(currentPage - 1)\"\r\n            :disabled=\"currentPage === 1 || isLoadingPublic\"\r\n            class=\"px-3 py-1 text-sm rounded border bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n           >\r\n            السابق\r\n          </button>\r\n          <span class=\"text-sm text-gray-700 dark:text-gray-300\">\r\n            صفحة {{ currentPage }} من {{ totalPages }}\r\n          </span>\r\n          <button\r\n            @click=\"changePage(currentPage + 1)\"\r\n            :disabled=\"currentPage === totalPages || isLoadingPublic\"\r\n            class=\"px-3 py-1 text-sm rounded border bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n           >\r\n            التالي\r\n          </button>\r\n       </div>\r\n      </div>\r\n    </section>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, computed, watch } from 'vue';\r\nimport type { Database, Tables } from '~/types/database.types';\r\nimport LoadingSpinner from '~/components/LoadingSpinner.vue';\r\n\r\n// --- تعريف الأنواع ---\r\ntype QuestionCategory = Tables<'question_categories'>;\r\ntype PublicQuestion = Omit<Tables<'questions_to_sheikh'>, 'user_id'> & {\r\n  question_categories: Pick<QuestionCategory, 'name'> | null;\r\n};\r\n\r\n// --- الثوابت ---\r\nconst MIN_QUESTION_LENGTH = 10;\r\n\r\n// --- استخدام المكونات والخدمات ---\r\nconst supabase = useSupabaseClient<Database>();\r\nconst user = useSupabaseUser();\r\n\r\n// --- حالة نموذج الإرسال ---\r\nconst questionText = ref('');\r\nconst isSubmitting = ref(false);\r\nconst submitSuccess = ref(false);\r\nconst submitError = ref<string | null>(null);\r\nconst questionError = ref<string | null>(null);\r\n\r\n// --- حالة عرض الأسئلة العامة ---\r\nconst publicQuestions = ref<PublicQuestion[]>([]); // ستحتوي فقط على أسئلة الصفحة الحالية\r\nconst categories = ref<QuestionCategory[]>([]);\r\nconst selectedCategory = ref<number | null>(null);\r\nconst isLoadingPublic = ref(true); // للتحميل العام (أسئلة أو تغيير فلتر/صفحة)\r\nconst fetchErrorPublic = ref<string | null>(null);\r\nconst isLoadingCategories = ref(true); // حالة تحميل منفصلة للتصنيفات (تحدث مرة واحدة)\r\n\r\n// --- حالة التقسيم ---\r\nconst currentPage = ref(1);\r\nconst pageSize = ref(15); // عدد الأسئلة في كل صفحة\r\nconst totalQuestions = ref(0); // العدد الإجمالي للأسئلة (للتحكم بالصفحات)\r\n\r\n// --- التحقق من صحة السؤال (Computed Property) ---\r\nconst isQuestionInvalid = computed(() => {\r\n  return questionText.value.trim().length < MIN_QUESTION_LENGTH;\r\n});\r\n\r\n// --- حساب عدد الصفحات الإجمالي ---\r\nconst totalPages = computed(() => {\r\n  if (totalQuestions.value === 0) return 1; // على الأقل صفحة واحدة\r\n  return Math.ceil(totalQuestions.value / pageSize.value);\r\n});\r\n\r\n// --- دالة للتحقق من الطول أثناء الكتابة ---\r\nfunction validateQuestionLength() {\r\n  if (questionText.value.trim() && questionText.value.trim().length < MIN_QUESTION_LENGTH) {\r\n    questionError.value = `يجب أن يكون السؤال ${MIN_QUESTION_LENGTH} حروف على الأقل.`;\r\n  } else {\r\n    questionError.value = null;\r\n  }\r\n}\r\n\r\n// --- دالة إرسال السؤال (مع التحقق المسبق) ---\r\nasync function submitQuestion() {\r\n  validateQuestionLength();\r\n  if (!user.value || isQuestionInvalid.value || questionError.value) return;\r\n\r\n  isSubmitting.value = true;\r\n  submitSuccess.value = false;\r\n  submitError.value = null;\r\n\r\n  try {\r\n    const { error } = await supabase.from('questions_to_sheikh').insert({\r\n      user_id: user.value.id,\r\n      question_text: questionText.value.trim(),\r\n      // القيم الافتراضية لـ is_public, is_answered, category_id إلخ يتم تعيينها عادة في قاعدة البيانات\r\n    });\r\n\r\n    if (error) {\r\n         if (error.code === '23514' && error.message.includes('_check')) {\r\n            console.warn(\"Check constraint violation:\", error.message);\r\n            questionError.value = `فشل الإرسال. تأكد أن السؤال لا يقل عن ${MIN_QUESTION_LENGTH} حروف.`;\r\n         } else {\r\n            throw error;\r\n         }\r\n    } else {\r\n        questionText.value = '';\r\n        submitSuccess.value = true;\r\n        questionError.value = null;\r\n        setTimeout(() => { submitSuccess.value = false; }, 3000);\r\n    }\r\n\r\n  } catch (err: any) {\r\n    console.error('Error submitting question:', err);\r\n     if (!questionError.value) {\r\n        submitError.value = 'حدث خطأ أثناء إرسال السؤال. يرجى المحاولة مرة أخرى.';\r\n     }\r\n  } finally {\r\n    isSubmitting.value = false;\r\n  }\r\n}\r\n\r\n// --- جلب البيانات العامة (معدلة للتقسيم والفلترة من الخادم) ---\r\nasync function fetchPublicData(page = 1, categoryId: number | null = selectedCategory.value) {\r\n  // استخدام selectedCategory.value كقيمة افتراضية لـ categoryId\r\n  isLoadingPublic.value = true;\r\n  fetchErrorPublic.value = null;\r\n\r\n  const rangeFrom = (page - 1) * pageSize.value;\r\n  const rangeTo = rangeFrom + pageSize.value - 1;\r\n\r\n  try {\r\n    // --- جلب التصنيفات (مرة واحدة فقط في البداية) ---\r\n    if (categories.value.length === 0 && isLoadingCategories.value) {\r\n       const { data: catData, error: catError } = await supabase\r\n         .from('question_categories')\r\n         .select('id, name')\r\n         .order('id');\r\n       if (catError) {\r\n         console.error(\"Error fetching categories:\", catError);\r\n         // يمكن عرض خطأ بسيط أو تجاهله إذا لم تكن التصنيفات حرجة\r\n       } else {\r\n         categories.value = catData || [];\r\n       }\r\n       isLoadingCategories.value = false; // تم محاولة تحميل التصنيفات\r\n    }\r\n\r\n    // --- بناء استعلام الأسئلة ---\r\n    let query = supabase\r\n      .from('questions_to_sheikh')\r\n      .select(`\r\n        id, question_text, submitted_at, answer_text, answered_at,\r\n        is_public, is_answered, category_id,\r\n        question_categories ( name )\r\n      `, { count: 'exact' }) // طلب العدد الإجمالي مع البيانات\r\n      .eq('is_public', true)\r\n      .eq('is_answered', true)\r\n      .order('answered_at', { ascending: false })\r\n      .range(rangeFrom, rangeTo);\r\n\r\n    // تطبيق فلتر التصنيف إذا تم تحديده\r\n    if (categoryId !== null) {\r\n      query = query.eq('category_id', categoryId);\r\n    }\r\n\r\n    // --- تنفيذ استعلام الأسئلة ---\r\n    const { data, error, count } = await query;\r\n\r\n    if (error) throw error;\r\n\r\n    publicQuestions.value = data || [];\r\n    totalQuestions.value = count ?? 0;\r\n    // تأكد من أن الصفحة الحالية لا تتجاوز العدد الإجمالي للصفحات بعد الجلب\r\n    if(page > totalPages.value && totalPages.value > 0) {\r\n        currentPage.value = totalPages.value; // اذهب إلى آخر صفحة متاحة\r\n        // قد تحتاج إلى إعادة الجلب إذا غيرت الصفحة هنا، لكن الـ watch سيهتم بذلك\r\n    }\r\n\r\n\r\n  } catch (err: any) {\r\n    console.error(\"Error fetching public questions:\", err);\r\n    fetchErrorPublic.value = err.message || 'فشل تحميل البيانات.';\r\n    publicQuestions.value = [];\r\n    totalQuestions.value = 0; // إعادة تعيين العدد عند الخطأ\r\n  } finally {\r\n    isLoadingPublic.value = false;\r\n  }\r\n}\r\n\r\n// --- دالة لتغيير الصفحة ---\r\nfunction changePage(newPage: number) {\r\n  if (newPage >= 1 && newPage <= totalPages.value && newPage !== currentPage.value && !isLoadingPublic.value) {\r\n    currentPage.value = newPage;\r\n    // الـ watch سيكتشف التغيير ويستدعي fetchPublicData\r\n  }\r\n}\r\n\r\n// --- مراقبة تغيير الفلتر أو الصفحة لإعادة الجلب ---\r\nwatch([currentPage, selectedCategory], ([newPage, newCategory], [oldPage, oldCategory]) => {\r\n    // تحقق مما إذا كان الفلتر قد تغير بالفعل\r\n    if (newCategory !== oldCategory) {\r\n         // إذا تغير الفلتر، يجب أن ننتقل إلى الصفحة الأولى\r\n         if(currentPage.value !== 1) {\r\n             // تغيير currentPage سيُشغل الـ watch مرة أخرى،\r\n             // لذا لا نستدعي fetchPublicData هنا مباشرة\r\n             currentPage.value = 1;\r\n         } else {\r\n             // إذا كنا بالفعل في الصفحة 1، فقم بالجلب مباشرة بالفلتر الجديد\r\n             fetchPublicData(1, newCategory);\r\n         }\r\n    } else {\r\n        // إذا لم يتغير الفلتر، فهذا يعني أن الصفحة هي التي تغيرت\r\n        // قم بالجلب للصفحة الجديدة بنفس الفلتر\r\n        fetchPublicData(newPage, newCategory);\r\n    }\r\n}, { immediate: true }); // immediate: true لجلب البيانات عند تحميل المكون أول مرة\r\n\r\n\r\n// --- دالة إعادة المحاولة ---\r\nasync function refreshPublicData() {\r\n    // أعد جلب الصفحة الحالية بنفس الفلتر\r\n    await fetchPublicData(currentPage.value, selectedCategory.value);\r\n}\r\n\r\n// --- SEO ---\r\nuseHead({\r\n  title: 'اسأل الشيخ - موقع الشيخ إبراهيم بشندي',\r\n  meta: [\r\n    { name: 'description', content: 'اطرح سؤالك مباشرة على الشيخ إبراهيم بشندي وتصفح الأسئلة المجابة في مختلف الفئات الشرعية مع إمكانية الفلترة والتصفح.' }\r\n  ]\r\n});\r\n\r\n</script>\r\n\r\n<style scoped>\r\n/* Transitions for success message */\r\n.fade-enter-active,\r\n.fade-leave-active {\r\n  transition: opacity 0.5s ease;\r\n}\r\n.fade-enter-from,\r\n.fade-leave-to {\r\n  opacity: 0;\r\n}\r\n\r\n/* Ensure prose styles apply correctly */\r\n.prose p {\r\n    margin-top: 0.5em;\r\n    margin-bottom: 0.5em;\r\n}\r\n</style>"],"version":3}