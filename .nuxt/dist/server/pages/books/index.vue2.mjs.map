{"version":3,"file":"index.vue2.mjs","sources":["../../../../../pages/books/index.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mx-auto px-4 \">\r\n    <h1 class=\"text-3xl font-bold text-brown-dark dark:text-brown-dark mb-6 border-b-2 border-olive-green pb-2\">\r\n      المكتبة الرقمية\r\n    </h1>\r\n\r\n    <!-- Search and Filter Bar -->\r\n    <div class=\"mb-8 space-y-4\">\r\n      <!-- Search Input -->\r\n      <div>\r\n        <label for=\"library-search\" class=\"sr-only\">ابحث في المكتبة</label>\r\n        <div class=\"relative\">\r\n          <div class=\"absolute inset-y-0 start-0 flex items-center ps-3 pointer-events-none text-gray-500 dark:text-gray-400\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-5 h-5\">\r\n              <path fill-rule=\"evenodd\" d=\"M9 3.5a5.5 5.5 0 1 0 0 11 5.5 5.5 0 0 0 0-11ZM2 9a7 7 0 1 1 12.452 4.391l3.328 3.329a.75.75 0 1 1-1.06 1.06l-3.329-3.328A7 7 0 0 1 2 9Z\" clip-rule=\"evenodd\" />\r\n            </svg>\r\n          </div>\r\n          <input\r\n            type=\"search\"\r\n            id=\"library-search\"\r\n            :value=\"searchQuery\"\r\n            @input=\"handleSearchInput\"\r\n            class=\"block w-full p-3 ps-10 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-olive-green focus:border-olive-green dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-olive-green/70 dark:focus:border-olive-green/70\"\r\n            placeholder=\"ابحث في الكتب والأبحاث والتفريغات...\"\r\n            aria-label=\"بحث في المكتبة\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <!-- Filter Buttons -->\r\n      <div class=\"flex flex-wrap items-center gap-2 pt-2\">\r\n        <span class=\"text-sm font-medium text-gray-700 dark:text-gray-300 ms-2 hidden sm:inline\">تصفية حسب الفئة:</span>\r\n        <!-- All Button -->\r\n        <button\r\n          @click=\"selectCategory(null)\"\r\n          :disabled=\"pending || loadingMore\"\r\n          :class=\"[\r\n            'px-4 py-1.5 rounded-full text-sm font-medium transition-colors duration-150 ease-in-out focus:outline-none focus:ring-2 focus:ring-offset-2 dark:focus:ring-offset-gray-900 focus:ring-olive-green disabled:opacity-50 disabled:cursor-not-allowed',\r\n            selectedCategoryId === null\r\n              ? 'bg-olive-green text-white shadow'\r\n              : 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600'\r\n          ]\"\r\n        >\r\n          كل الفئات\r\n        </button>\r\n        <!-- Category Buttons -->\r\n        <button\r\n          v-for=\"filterCat in filterCategories\"\r\n          :key=\"filterCat.id\"\r\n          @click=\"selectCategory(filterCat.id)\"\r\n          :disabled=\"pending || loadingMore\"\r\n          :class=\"[\r\n            'px-4 py-1.5 rounded-full text-sm font-medium transition-colors duration-150 ease-in-out focus:outline-none focus:ring-2 focus:ring-offset-2 dark:focus:ring-offset-gray-900 focus:ring-olive-green disabled:opacity-50 disabled:cursor-not-allowed',\r\n            selectedCategoryId === filterCat.id\r\n              ? 'bg-olive-green text-white shadow'\r\n              : 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600'\r\n          ]\"\r\n        >\r\n          {{ filterCat.name }}\r\n        </button>\r\n         <!-- Loading/Error for Filters -->\r\n          <div v-if=\"loadingFilters\" class=\"text-xs text-gray-500\">جار تحميل الفئات...</div>\r\n          <div v-if=\"filterError\" class=\"text-xs text-red-500\">خطأ تحميل الفئات.</div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Loading State (Initial) -->\r\n    <div v-if=\"pending\" class=\"text-center py-20\">\r\n      <div class=\"inline-block animate-spin rounded-full h-12 w-12 border-b-2 border-olive-green\"></div>\r\n      <p class=\"mt-4 text-gray-600 dark:text-gray-400\">جارٍ تحميل الكتب...</p>\r\n    </div>\r\n\r\n    <!-- Error State -->\r\n    <div v-else-if=\"error && books.length === 0\" class=\"text-center py-10 px-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg max-w-2xl mx-auto\">\r\n        <p class=\"text-red-600 dark:text-red-400 font-semibold mb-2 text-lg\">\r\n         <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-6 h-6 inline-block align-middle me-1\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 1 1-16 0 8 8 0 0 1 16 0Zm-8-5a.75.75 0 0 1 .75.75v4.5a.75.75 0 0 1-1.5 0v-4.5A.75.75 0 0 1 10 5Zm0 10a1 1 0 1 0 0-2 1 1 0 0 0 0 2Z\" clip-rule=\"evenodd\" /></svg>\r\n         حدث خطأ أثناء تحميل المكتبة.\r\n       </p>\r\n       <pre v-if=\"error.message\" class=\"mt-1 text-xs text-left bg-red-100 dark:bg-red-800/30 p-2 rounded border border-red-200 dark:border-red-700 text-red-700 dark:text-red-300 whitespace-pre-wrap\">{{ error.message }}</pre>\r\n       <button @click=\"retryFetch\" class=\"mt-6 px-5 py-2 bg-olive-green text-white rounded hover:bg-opacity-80 transition-colors text-sm font-medium\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-4 h-4 inline-block align-middle me-1\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0 3.181 3.183a8.25 8.25 0 0 0 13.803-3.7M4.031 9.865a8.25 8.25 0 0 1 13.803-3.7l3.181 3.182m0-4.991v4.99\" /></svg>\r\n         إعادة المحاولة\r\n       </button>\r\n     </div>\r\n\r\n    <!-- No Books Found State -->\r\n    <div v-else-if=\"!pending && books.length === 0\" class=\"text-center py-16 text-gray-500 dark:text-gray-400\">\r\n      <div v-if=\"searchQuery || selectedCategoryId !== null\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-12 h-12 mb-4 mx-auto text-gray-400 dark:text-gray-500\">\r\n             <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z\" />\r\n           </svg>\r\n           <p class=\"text-lg\">لم يتم العثور على نتائج تطابق بحثك أو الفلتر المطبق.</p>\r\n           <p v-if=\"searchQuery\" class=\"text-sm mt-1\">حاول تبسيط كلمات البحث أو تغيير الفئة.</p>\r\n           <button v-if=\"selectedCategoryId !== null || searchQuery\" @click=\"resetFiltersAndSearch\" class=\"mt-4 text-sm text-olive-green hover:underline\">\r\n               عرض كل الكتب\r\n           </button>\r\n      </div>\r\n      <div v-else>\r\n         <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"w-12 h-12 mb-4 mx-auto text-gray-400 dark:text-gray-500\" aria-hidden=\"true\">\r\n            <path d=\"M11.25 4.533A9.707 9.707 0 0 0 6 3a9.735 9.735 0 0 0-3.25.555.75.75 0 0 0-.5.707v14.25a.75.75 0 0 0 .5.707A9.735 9.735 0 0 0 6 21a9.707 9.707 0 0 0 5.25-1.533v-1.27a.75.75 0 0 0-.624-.744A8.25 8.25 0 0 1 6 18.75a8.25 8.25 0 0 1-5.25-2.268v-2.156a.75.75 0 0 0 .51-.698A8.217 8.217 0 0 1 6 13.5a8.182 8.182 0 0 1 5.25 1.406v-1.406a8.182 8.182 0 0 1-5.25 1.406 8.217 8.217 0 0 1-4.74-.954.75.75 0 0 0-.51-.698V9.732a8.25 8.25 0 0 1 5.25-2.268 8.25 8.25 0 0 1 5.25 2.268V9.376a.75.75 0 0 0 .624.744v1.27ZM12.75 4.533A9.707 9.707 0 0 1 18 3a9.735 9.735 0 0 1 3.25.555.75.75 0 0 1 .5.707v14.25a.75.75 0 0 1-.5.707A9.735 9.735 0 0 1 18 21a9.707 9.707 0 0 1-5.25-1.533v-1.27a.75.75 0 0 1 .624-.744A8.25 8.25 0 0 0 18 18.75a8.25 8.25 0 0 0 5.25-2.268v-2.156a.75.75 0 0 1-.51-.698A8.217 8.217 0 0 0 18 13.5a8.182 8.182 0 0 0-5.25 1.406v-1.406a8.182 8.182 0 0 0 5.25 1.406 8.217 8.217 0 0 0 4.74-.954.75.75 0 0 1 .51-.698V9.732a8.25 8.25 0 0 0-5.25-2.268 8.25 8.25 0 0 0-5.25 2.268V9.376a.75.75 0 0 1-.624.744v1.27Z\" />\r\n         </svg>\r\n         <p class=\"text-lg\">المكتبة فارغة حاليًا.</p>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Books Grid -->\r\n    <div v-else class=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n      <BookCard\r\n        v-for=\"book in books\"\r\n        :key=\"book.id\"\r\n        :book=\"book\"\r\n        @open-pdf=\"openPdfModal\"\r\n      />\r\n    </div>\r\n\r\n    <!-- Infinite Scroll Trigger & Loading Indicator -->\r\n    <div ref=\"infiniteScrollTrigger\" class=\"h-10 flex justify-center items-center mt-10\">\r\n       <div v-if=\"loadingMore\" class=\"flex items-center space-x-2 space-x-reverse text-gray-600 dark:text-gray-400\">\r\n           <svg class=\"animate-spin h-5 w-5 text-olive-green\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n             <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n             <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n           </svg>\r\n           <span>جارٍ تحميل المزيد...</span>\r\n       </div>\r\n       <div v-else-if=\"!pending && books.length > 0 && noMoreBooks\" class=\"text-sm text-gray-500 dark:text-gray-400\">\r\n          ~ نهاية القائمة ~\r\n       </div>\r\n        <div v-else-if=\"error && books.length > 0\" class=\"text-sm text-red-600 dark:text-red-400\">\r\n            حدث خطأ أثناء تحميل المزيد.\r\n        </div>\r\n    </div>\r\n\r\n    <!-- PDF Viewer Modal -->\r\n    <LazyPdfViewerModal\r\n      :show=\"showPdfModal\"\r\n      :storage-path=\"selectedPdfPath\"\r\n      :book-title=\"selectedBookTitle\"\r\n      @close=\"closePdfModal\"\r\n    />\r\n\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, computed, watch, onMounted, onUnmounted } from 'vue';\r\nimport { useHead, useSupabaseClient } from '#imports';\r\nimport BookCard from '~/components/BookCard.vue';\r\nimport LazyPdfViewerModal from '~/components/PdfViewerModal.vue'; // Ensure this component exists\r\nimport type { Database, Tables } from '~/types/database.types';\r\n\r\n// Define Types\r\ntype Book = Tables<'books'>;\r\ntype Category = Pick<Tables<'categories'>, 'id' | 'name'>;\r\n\r\n// --- Configuration ---\r\nconst BOOKS_PER_PAGE = 16; // How many books to load per batch\r\nconst DEBOUNCE_WAIT = 400; // Milliseconds for search debounce\r\n\r\n// --- Supabase & State ---\r\nconst client = useSupabaseClient<Database>();\r\n\r\nconst books = ref<Book[]>([]);                   // Array to hold all currently loaded books\r\nconst filterCategories = ref<Category[]>([]);      // Categories for the filter bar\r\nconst selectedCategoryId = ref<number | null>(null); // null means 'All Categories'\r\n\r\nconst searchQuery = ref('');                  // Input value for search\r\nconst debouncedSearchQuery = ref('');         // Debounced value used for fetching\r\nconst searchTimeout = ref<ReturnType<typeof setTimeout> | null>(null); // Debounce timer ID\r\n\r\nconst currentPage = ref(1);                     // Current page/batch number for infinite scroll\r\nconst totalBooksCount = ref(0);                 // Total books matching current filters in DB\r\nconst noMoreBooks = ref(false);                 // Flag if all matching books have been loaded\r\n\r\nconst pending = ref(true);                    // Main loading state (initial load or after filter/search change)\r\nconst loadingMore = ref(false);                 // Loading state for infinite scroll batch fetching\r\nconst error = ref<any>(null);                 // Stores any fetch error\r\nconst loadingFilters = ref(false);              // Loading state for filter categories\r\nconst filterError = ref<any>(null);              // Error state for filter categories\r\n\r\n// PDF Modal State\r\nconst showPdfModal = ref(false);\r\nconst selectedPdfPath = ref<string | null>(null);\r\nconst selectedBookTitle = ref<string | null>(null);\r\n\r\n// --- Debounce Function ---\r\nfunction debounce(func: (...args: any[]) => void, wait: number) {\r\n  let timeout: ReturnType<typeof setTimeout> | null;\r\n  return function executedFunction(...args: any[]) {\r\n    const later = () => {\r\n      timeout = null;\r\n      func(...args);\r\n    };\r\n    if (timeout) {\r\n      clearTimeout(timeout);\r\n    }\r\n    timeout = setTimeout(later, wait);\r\n  };\r\n}\r\n\r\n// --- Data Fetching ---\r\n\r\n/**\r\n * Fetches a batch of books based on current filters, search, and page.\r\n * @param page - The page number (batch) to fetch.\r\n */\r\nconst fetchBooksBatch = async (page: number) => {\r\n  console.log(`Fetching books batch ${page} with search: \"${debouncedSearchQuery.value}\" and category: ${selectedCategoryId.value}`);\r\n  const limit = BOOKS_PER_PAGE;\r\n  const rangeFrom = (page - 1) * limit;\r\n  const rangeTo = rangeFrom + limit - 1;\r\n\r\n  let query = client\r\n    .from('books')\r\n    .select('id, title, description, cover_image_url, is_research, is_transcript, created_at, storage_path, category_id', { count: 'exact' }); // Select category_id if filtering by it\r\n\r\n  // Apply Category Filter\r\n  if (selectedCategoryId.value !== null) {\r\n    query = query.eq('category_id', selectedCategoryId.value);\r\n  }\r\n\r\n  // Apply Search Filter (using OR for title and description)\r\n  const searchTerm = debouncedSearchQuery.value;\r\n  if (searchTerm) {\r\n    const searchPattern = `%${searchTerm}%`;\r\n    query = query.or(`title.ilike.${searchPattern},description.ilike.${searchPattern}`);\r\n    // Consider Full-Text Search for performance with very large datasets\r\n    // query = query.textSearch('fts_column', `'${searchTerm}'`);\r\n  }\r\n\r\n  // Apply Ordering and Pagination\r\n  query = query.order('created_at', { ascending: false }).range(rangeFrom, rangeTo);\r\n\r\n  const { data, error, count } = await query;\r\n\r\n  if (error) {\r\n    console.error('Error fetching books batch:', error);\r\n    throw error;\r\n  }\r\n\r\n  console.log(`Fetched batch ${page}: ${data?.length ?? 0} books. Total count: ${count}`);\r\n  return { data: data || [], count: count ?? 0 };\r\n};\r\n\r\n/**\r\n * Loads the initial set of data (first batch of books and total count).\r\n * Resets state before fetching.\r\n */\r\nconst loadInitialBooks = async () => {\r\n  console.log(\"Loading initial books...\");\r\n  pending.value = true;\r\n  error.value = null;\r\n  currentPage.value = 1;\r\n  books.value = []; // Clear existing books\r\n  noMoreBooks.value = false;\r\n  totalBooksCount.value = 0;\r\n\r\n  try {\r\n    const { data, count } = await fetchBooksBatch(1);\r\n    books.value = data;\r\n    totalBooksCount.value = count;\r\n    // Check if all books were loaded in the first batch\r\n    if (data.length >= count) {\r\n      noMoreBooks.value = true;\r\n    }\r\n  } catch (err: any) {\r\n    error.value = err;\r\n  } finally {\r\n    pending.value = false;\r\n  }\r\n};\r\n\r\n/**\r\n * Fetches and appends the next batch of books for infinite scroll.\r\n */\r\nconst loadMoreBooks = async () => {\r\n  if (loadingMore.value || noMoreBooks.value || pending.value) {\r\n      // console.log(\"Skipping loadMoreBooks (already loading, no more books, or initial load pending).\");\r\n      return;\r\n  }\r\n\r\n  loadingMore.value = true;\r\n  error.value = null; // Clear previous 'load more' errors specifically\r\n  const nextPage = currentPage.value + 1;\r\n\r\n  try {\r\n    const { data, count } = await fetchBooksBatch(nextPage);\r\n    if (data.length > 0) {\r\n      books.value.push(...data);\r\n      currentPage.value = nextPage; // Only increment page if data was successfully loaded\r\n      // Update total count if it changed (though ideally it shouldn't change often mid-session)\r\n       if (totalBooksCount.value !== count) {\r\n           console.warn(\"Total book count changed during load more:\", count);\r\n           totalBooksCount.value = count;\r\n       }\r\n    }\r\n    // Check if we've loaded all books\r\n    if (books.value.length >= totalBooksCount.value) {\r\n      noMoreBooks.value = true;\r\n      console.log(\"All books loaded.\");\r\n    }\r\n  } catch (err: any) {\r\n    error.value = err; // Set general error, maybe show a toast or specific indicator?\r\n    console.error(\"Error in loadMoreBooks:\", err);\r\n  } finally {\r\n    loadingMore.value = false;\r\n  }\r\n};\r\n\r\n/**\r\n * Fetches the categories to display in the filter bar.\r\n */\r\nconst fetchFilterCategories = async () => {\r\n    loadingFilters.value = true;\r\n    filterError.value = null;\r\n    try {\r\n        // Fetch categories that actually have books associated with them\r\n        // This requires a more complex query or fetching all and filtering later\r\n        // Simple approach: Fetch all potential categories for now\r\n        const { data, error } = await client\r\n            .from('categories')\r\n            .select('id, name')\r\n             // .eq('type', 'book_category') // Filter if you have types\r\n            .order('name', { ascending: true });\r\n\r\n        if (error) throw error;\r\n        filterCategories.value = data || [];\r\n        console.log(\"Filter categories loaded:\", filterCategories.value);\r\n    } catch (err) {\r\n        console.error(\"Error fetching filter categories:\", err);\r\n        filterError.value = err;\r\n    } finally {\r\n        loadingFilters.value = false;\r\n    }\r\n};\r\n\r\n// --- Event Handlers & Triggers ---\r\n\r\n// Called when search input changes\r\nconst handleSearchInput = (event: Event) => {\r\n  searchQuery.value = (event.target as HTMLInputElement).value;\r\n  // Debounce the actual state update and data fetch trigger\r\n  if (searchTimeout.value) clearTimeout(searchTimeout.value);\r\n  searchTimeout.value = setTimeout(() => {\r\n    if (debouncedSearchQuery.value !== searchQuery.value.trim()) {\r\n      console.log('Search query changed, debounced:', searchQuery.value.trim());\r\n      debouncedSearchQuery.value = searchQuery.value.trim();\r\n      loadInitialBooks(); // Trigger full refresh\r\n    }\r\n  }, DEBOUNCE_WAIT);\r\n};\r\n\r\n// Called when a filter category button is clicked\r\nconst selectCategory = (categoryId: number | null) => {\r\n  if (selectedCategoryId.value === categoryId) return; // No change\r\n\r\n  console.log(`Category filter changed to: ${categoryId}`);\r\n  selectedCategoryId.value = categoryId;\r\n  loadInitialBooks(); // Trigger full refresh with new filter\r\n};\r\n\r\n// Retry fetching initial data on error\r\nconst retryFetch = () => {\r\n  loadInitialBooks();\r\n};\r\n\r\n// Reset search and filters\r\nconst resetFiltersAndSearch = () => {\r\n    searchQuery.value = '';\r\n    debouncedSearchQuery.value = '';\r\n    selectedCategoryId.value = null;\r\n    loadInitialBooks(); // Trigger full refresh\r\n};\r\n\r\n\r\n// --- Infinite Scroll Setup ---\r\nconst infiniteScrollTrigger = ref<HTMLElement | null>(null);\r\nlet observer: IntersectionObserver | null = null;\r\n\r\nonMounted(() => {\r\n  // Fetch initial data and filters\r\n  fetchFilterCategories();\r\n  loadInitialBooks();\r\n\r\n  // Setup Intersection Observer\r\n  observer = new IntersectionObserver(\r\n    (entries) => {\r\n      if (entries[0].isIntersecting) {\r\n        console.log(\"Infinite scroll trigger intersected!\");\r\n        loadMoreBooks(); // Load next batch when trigger is visible\r\n      }\r\n    },\r\n    { threshold: 0.1 } // Adjust threshold as needed\r\n  );\r\n\r\n  if (infiniteScrollTrigger.value) {\r\n    observer.observe(infiniteScrollTrigger.value);\r\n    console.log(\"Infinite scroll observer attached.\");\r\n  } else {\r\n     console.warn(\"Infinite scroll trigger element not found on mount.\");\r\n     // Attempt to attach later if needed, or ensure it renders reliably\r\n     watch(infiniteScrollTrigger, (newEl) => {\r\n         if (newEl && observer) {\r\n             observer.observe(newEl);\r\n              console.log(\"Infinite scroll observer attached after element render.\");\r\n         }\r\n     });\r\n  }\r\n});\r\n\r\nonUnmounted(() => {\r\n  // Clean up observer\r\n  if (observer && infiniteScrollTrigger.value) {\r\n    observer.unobserve(infiniteScrollTrigger.value);\r\n     console.log(\"Infinite scroll observer disconnected.\");\r\n  }\r\n   observer = null;\r\n  // Clear debounce timer\r\n  if (searchTimeout.value) {\r\n      clearTimeout(searchTimeout.value);\r\n  }\r\n});\r\n\r\n// --- Computed Properties for Template ---\r\nconst totalBooksFound = computed(() => totalBooksCount.value); // Simplified\r\n\r\n// --- Modal Methods ---\r\nfunction openPdfModal(book: Book) {\r\n  if (book.storage_path) {\r\n    selectedPdfPath.value = book.storage_path;\r\n    selectedBookTitle.value = book.title ?? 'مستند PDF';\r\n    showPdfModal.value = true;\r\n  } else {\r\n    console.warn(`Book \"${book.title}\" does not have a storage path.`);\r\n    alert(`عذرًا، لا يوجد ملف مرتبط بهذا الكتاب (${book.title}).`);\r\n  }\r\n}\r\n\r\nfunction closePdfModal() {\r\n  showPdfModal.value = false;\r\n}\r\n\r\n// --- SEO ---\r\nuseHead({\r\n  title: 'المكتبة الرقمية - موقع الشيخ إبراهيم بشندي',\r\n  meta: [\r\n    { name: 'description', content: 'تصفح وحمل كتب وأبحاث وتفريغات محاضرات ودروس الشيخ إبراهيم بشندي في مختلف العلوم الشرعية.' },\r\n  ],\r\n});\r\n\r\n</script>\r\n\r\n<style scoped>\r\ninput[type=\"search\"]:focus {\r\n  box-shadow: 0 0 0 2px theme('colors.olive-green' / 50%);\r\n}\r\nbutton:disabled {\r\n  cursor: not-allowed;\r\n  opacity: 0.6;\r\n}\r\n</style>"],"names":[],"mappings":";;;;;;;;;;AA8Je,sBAA4B;AAErC,UAAA,QAAQ,IAAY,EAAE;AACtB,UAAA,mBAAmB,IAAgB,EAAE;AACrC,UAAA,qBAAqB,IAAmB,IAAI;AAE5C,UAAA,cAAc,IAAI,EAAE;AACG,QAAI,EAAE;AACb,QAA0C,IAAI;AAEhD,QAAI,CAAC;AACnB,UAAA,kBAAkB,IAAI,CAAC;AACvB,UAAA,cAAc,IAAI,KAAK;AAEvB,UAAA,UAAU,IAAI,IAAI;AAClB,UAAA,cAAc,IAAI,KAAK;AACvB,UAAA,QAAQ,IAAS,IAAI;AACrB,UAAA,iBAAiB,IAAI,KAAK;AAC1B,UAAA,cAAc,IAAS,IAAI;AAG3B,UAAA,eAAe,IAAI,KAAK;AACxB,UAAA,kBAAkB,IAAmB,IAAI;AACzC,UAAA,oBAAoB,IAAmB,IAAI;AAiMnB,QAAwB,IAAI;AAgDlC,aAAS,MAAM,gBAAgB,KAAK;AAG5D,aAAS,aAAa,MAAY;AAChC,UAAI,KAAK,cAAc;AACrB,wBAAgB,QAAQ,KAAK;AACX,0BAAA,QAAQ,KAAK,SAAS;AACxC,qBAAa,QAAQ;AAAA,MAAA,OAChB;AACL,gBAAQ,KAAK,SAAS,KAAK,KAAK,iCAAiC;AAC3D,cAAA,yCAAyC,KAAK,KAAK,IAAI;AAAA,MAAA;AAAA,IAC/D;AAGF,aAAS,gBAAgB;AACvB,mBAAa,QAAQ;AAAA,IAAA;AAIf,YAAA;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,QACJ,EAAE,MAAM,eAAe,SAAS,2FAA2F;AAAA,MAAA;AAAA,IAC7H,CACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}