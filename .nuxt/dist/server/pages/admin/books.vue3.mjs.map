{"version":3,"file":"books.vue3.mjs","sources":["../../../../../pages/admin/books.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- Header and Add Button -->\r\n    <div class=\"flex justify-between items-center mb-6\">\r\n      <h1 class=\"text-2xl font-semibold\">إدارة الكتب والأبحاث</h1>\r\n      <button\r\n        @click=\"openAddModal\"\r\n        class=\"button-primary\"\r\n        :disabled=\"loadingRelated\"\r\n      >\r\n        <span v-if=\"loadingRelated\">تحميل البيانات...</span>\r\n        <span v-else>إضافة كتاب/بحث جديد</span>\r\n      </button>\r\n    </div>\r\n\r\n    <!-- Loading Indicator -->\r\n    <div v-if=\"loadingList\" class=\"text-center py-10\">\r\n      <LoadingSpinner />\r\n      <p class=\"mt-2 text-sm text-gray-500 dark:text-gray-400\">جارٍ تحميل قائمة الكتب...</p>\r\n    </div>\r\n\r\n    <!-- Empty State -->\r\n    <div v-else-if=\"books.length === 0\" class=\"text-center py-10 text-gray-500 dark:text-gray-400\">\r\n      لا توجد كتب أو أبحاث مضافة حتى الآن.\r\n    </div>\r\n\r\n    <!-- Books Table -->\r\n    <div v-else class=\"overflow-x-auto shadow ring-1 ring-black ring-opacity-5 dark:ring-gray-700 rounded-lg\">\r\n      <table class=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\r\n        <thead class=\"bg-gray-50 dark:bg-gray-800\">\r\n          <tr>\r\n            <th scope=\"col\" class=\"table-header\">العنوان</th>\r\n            <th scope=\"col\" class=\"table-header\">النوع</th>\r\n            <th scope=\"col\" class=\"table-header\">مرتبط بدرس</th>\r\n            <th scope=\"col\" class=\"table-header\">تاريخ الإضافة</th>\r\n            <th scope=\"col\" class=\"relative px-6 py-3\">\r\n              <span class=\"sr-only\">إجراءات</span>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody class=\"bg-white dark:bg-gray-900 divide-y divide-gray-200 dark:divide-gray-700\">\r\n          <tr v-for=\"book in books\" :key=\"book.id\">\r\n            <td class=\"table-cell font-medium text-gray-900 dark:text-white\">{{ book.title }}</td>\r\n            <td class=\"table-cell\">\r\n              <span v-if=\"book.is_research\" class=\"badge-blue\">بحث</span>\r\n              <span v-else-if=\"book.is_transcript\" class=\"badge-yellow\">تفريغ</span>\r\n              <span v-else class=\"badge-green\">كتاب</span>\r\n            </td>\r\n            <td class=\"table-cell\">\r\n              {{ getLessonTitle(book.linked_lesson_id) || 'غير مرتبط' }}\r\n            </td>\r\n            <td class=\"table-cell\">\r\n              {{ formatDate(book.created_at) }}\r\n            </td>\r\n            <td class=\"table-cell text-right font-medium space-x-2 rtl:space-x-reverse\">\r\n              <button @click=\"openEditModal(book)\" class=\"text-indigo-600 hover:text-indigo-900 dark:text-indigo-400 dark:hover:text-indigo-200\">تعديل</button>\r\n              <button @click=\"handleDelete(book)\" class=\"text-red-600 hover:text-red-900 dark:text-red-400 dark:hover:text-red-200\">حذف</button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n    <!-- Add Book Modal -->\r\n    <LazyAdminBookAddModal\r\n      v-if=\"showAddModal\"\r\n      :lessons=\"lessons\"\r\n      @close=\"closeAddModal\"\r\n      @book-added=\"handleBookAdded\"\r\n    />\r\n\r\n    <!-- Edit Book Modal -->\r\n    <LazyAdminBookEditModal\r\n      v-if=\"showEditModal && selectedBookForEdit\"\r\n      :book=\"selectedBookForEdit\"\r\n      :lessons=\"lessons\"\r\n      @close=\"closeEditModal\"\r\n      @book-updated=\"handleBookUpdated\"\r\n    />\r\n\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted } from 'vue';\r\nimport type { Database } from '~/types/database.types';\r\n// Import Modals (use Lazy loading for better performance)\r\nconst LazyAdminBookAddModal = defineAsyncComponent(() => import('~/components/admin/BookAddModal.vue'));\r\nconst LazyAdminBookEditModal = defineAsyncComponent(() => import('~/components/admin/BookEditModal.vue'));\r\nimport LoadingSpinner from '~/components/LoadingSpinner.vue'; // Assuming you have this\r\n\r\n\r\n// Define Types\r\ntype Book = Database['public']['Tables']['books']['Row'];\r\ntype Lesson = Database['public']['Tables']['lessons']['Row'];\r\n\r\ndefinePageMeta({ layout: 'admin', middleware: 'admin' });\r\n\r\n\r\n// Supabase client\r\nconst supabase = useSupabaseClient<Database>();\r\n\r\n// Reactive State\r\nconst showAddModal = ref(false);\r\nconst showEditModal = ref(false);\r\nconst selectedBookForEdit = ref<Book | null>(null);\r\nconst books = ref<Book[]>([]);\r\nconst loadingList = ref(true);\r\nconst lessons = ref<Lesson[]>([]);\r\nconst loadingRelated = ref(true);\r\n\r\n// Configuration\r\nconst STORAGE_BUCKET_NAME = 'book-files'; // Use a constant or ideally Runtime Config\r\n\r\n// --- Data Fetching ---\r\nasync function fetchBooks() {\r\n  loadingList.value = true;\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('books')\r\n      .select('*') // Select all for editing, or specify needed columns\r\n      .order('created_at', { ascending: false });\r\n    if (error) throw error;\r\n    books.value = data || [];\r\n  } catch (err: any) {\r\n    console.error('Error fetching books:', err.message);\r\n    alert(`فشل تحميل قائمة الكتب: ${err.message}`); // User feedback\r\n  } finally {\r\n    loadingList.value = false;\r\n  }\r\n}\r\n\r\nasync function fetchLessons() {\r\n  loadingRelated.value = true;\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('lessons')\r\n      .select('id, title') // Fetch only necessary data for dropdown\r\n      .order('title', { ascending: true }); // Order alphabetically\r\n    if (error) throw error;\r\n    lessons.value = data || [];\r\n  } catch (err: any) {\r\n    console.error('Error fetching lessons:', err.message);\r\n    // Non-critical error, don't block UI\r\n  } finally {\r\n    loadingRelated.value = false;\r\n  }\r\n}\r\n\r\n// --- Helper Functions ---\r\nfunction getLessonTitle(lessonId: number | null): string | null {\r\n  if (!lessonId) return null;\r\n  const lesson = lessons.value.find(l => l.id === lessonId);\r\n  return lesson ? lesson.title : `درس #${lessonId}`;\r\n}\r\n\r\nfunction formatDate(dateString: string | null): string {\r\n    if (!dateString) return '-';\r\n    try {\r\n        return new Date(dateString).toLocaleDateString('ar-EG', {\r\n            day: 'numeric', month: 'short', year: 'numeric'\r\n        });\r\n    } catch (e) {\r\n        return 'تاريخ غير صالح';\r\n    }\r\n}\r\n\r\n// --- Modal Handling ---\r\nfunction openAddModal() {\r\n  if (!loadingRelated.value) {\r\n    showAddModal.value = true;\r\n  }\r\n}\r\nfunction closeAddModal() {\r\n  showAddModal.value = false;\r\n}\r\nfunction handleBookAdded() {\r\n  closeAddModal();\r\n  fetchBooks(); // Refresh list after adding\r\n  // Optionally show success toast\r\n}\r\n\r\nfunction openEditModal(book: Book) {\r\n  if (!loadingRelated.value) {\r\n      selectedBookForEdit.value = book;\r\n      showEditModal.value = true;\r\n  }\r\n}\r\nfunction closeEditModal() {\r\n  showEditModal.value = false;\r\n  selectedBookForEdit.value = null;\r\n}\r\nfunction handleBookUpdated() {\r\n  closeEditModal();\r\n  fetchBooks(); // Refresh list after updating\r\n  // Optionally show success toast\r\n}\r\n\r\n// --- Delete Action ---\r\nasync function handleDelete(book: Book) {\r\n  if (!confirm(`هل أنت متأكد من حذف الكتاب \"${book.title}\"؟ سيتم حذف الملف (${book.storage_path || 'لا يوجد'}) نهائيًا ولا يمكن التراجع عن هذا الإجراء.`)) {\r\n    return;\r\n  }\r\n\r\n  console.log(`Attempting deletion for book ID: ${book.id}, Path: ${book.storage_path}`);\r\n  const originalStoragePath = book.storage_path; // Keep path for potential manual cleanup message\r\n\r\n  try {\r\n    // 1. Delete from Database First (or Storage first, debatable, DB first avoids orphaned files if DB fails)\r\n    console.log(`Deleting book record from DB (ID: ${book.id})`);\r\n    const { error: dbError } = await supabase\r\n      .from('books')\r\n      .delete()\r\n      .eq('id', book.id);\r\n\r\n    if (dbError) {\r\n        console.error(\"DB Delete Error:\", dbError);\r\n        throw new Error(`فشل حذف سجل الكتاب من قاعدة البيانات: ${dbError.message}`);\r\n    }\r\n    console.log(\"Book record deleted successfully from DB.\");\r\n\r\n    // 2. Delete from Storage if path exists\r\n    if (originalStoragePath) {\r\n        console.log(`Attempting to remove file from storage: ${originalStoragePath}`);\r\n        const { error: storageError } = await supabase.storage\r\n            .from(STORAGE_BUCKET_NAME)\r\n            .remove([originalStoragePath]); // Pass path in an array\r\n\r\n        if (storageError) {\r\n            // Log the error but don't throw, inform the user\r\n            console.error(`Storage Delete Error: Failed to delete ${originalStoragePath}`, storageError);\r\n            alert(`تم حذف سجل الكتاب بنجاح، ولكن فشل حذف الملف (${originalStoragePath}) من التخزين. الخطأ: ${storageError.message}. قد تحتاج لحذفه يدويًا.`);\r\n            // Continue to UI update even if storage deletion failed\r\n        } else {\r\n            console.log(`File ${originalStoragePath} removed successfully from storage.`);\r\n             // Optionally show success toast for full deletion\r\n            alert('تم حذف الكتاب وملفه بنجاح.');\r\n        }\r\n    } else {\r\n        console.log(\"No storage_path found, skipping storage deletion.\");\r\n         // Optionally show success toast for DB deletion only\r\n         alert('تم حذف سجل الكتاب بنجاح (لم يكن هناك ملف مرتبط).');\r\n    }\r\n\r\n    // 3. Update UI\r\n    fetchBooks(); // Refresh the list\r\n\r\n  } catch (err: any) {\r\n    console.error('Error during book deletion process:', err);\r\n    // Show general error feedback\r\n    alert(`حدث خطأ غير متوقع أثناء الحذف: ${err.message}`);\r\n  }\r\n}\r\n\r\n// --- Lifecycle Hook ---\r\nonMounted(() => {\r\n  fetchBooks();\r\n  fetchLessons();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n/* Reusable utility classes */\r\n.table-header {\r\n  @apply px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider;\r\n}\r\n.table-cell {\r\n  @apply px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400;\r\n}\r\n.badge-base {\r\n   @apply px-2 inline-flex text-xs leading-5 font-semibold rounded-full;\r\n}\r\n.badge-blue {\r\n   @apply badge-base bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200;\r\n}\r\n.badge-yellow {\r\n   @apply badge-base bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200;\r\n}\r\n.badge-green {\r\n   @apply badge-base bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200;\r\n}\r\n.button-primary { /* Ensure this matches your global style or define here */\r\n  @apply inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50;\r\n}\r\n/* Add other styles if needed */\r\n</style>"],"names":[],"mappings":";;;;;;;;;AAuFA,UAAM,wBAAwB,qBAAqB,MAAM,OAAO,6CAAqC,CAAC;AACtG,UAAM,yBAAyB,qBAAqB,MAAM,OAAO,8CAAsC,CAAC;AAYxG,UAAM,WAAW,kBAA4B;AAGvC,UAAA,eAAe,IAAI,KAAK;AACxB,UAAA,gBAAgB,IAAI,KAAK;AACzB,UAAA,sBAAsB,IAAiB,IAAI;AAC3C,UAAA,QAAQ,IAAY,EAAE;AACtB,UAAA,cAAc,IAAI,IAAI;AACtB,UAAA,UAAU,IAAc,EAAE;AAC1B,UAAA,iBAAiB,IAAI,IAAI;AAM/B,mBAAe,aAAa;AAC1B,kBAAY,QAAQ;AAChB,UAAA;AACF,cAAM,EAAE,MAAM,MAAA,IAAU,MAAM,SAC3B,KAAK,OAAO,EACZ,OAAO,GAAG,EACV,MAAM,cAAc,EAAE,WAAW,OAAO;AAC3C,YAAI,MAAa,OAAA;AACX,cAAA,QAAQ,QAAQ,CAAC;AAAA,eAChB,KAAU;AACT,gBAAA,MAAM,yBAAyB,IAAI,OAAO;AAC5C,cAAA,0BAA0B,IAAI,OAAO,EAAE;AAAA,MAAA,UAC7C;AACA,oBAAY,QAAQ;AAAA,MAAA;AAAA,IACtB;AAqBF,aAAS,eAAe,UAAwC;AAC1D,UAAA,CAAC,SAAiB,QAAA;AACtB,YAAM,SAAS,QAAQ,MAAM,KAAK,CAAK,MAAA,EAAE,OAAO,QAAQ;AACxD,aAAO,SAAS,OAAO,QAAQ,QAAQ,QAAQ;AAAA,IAAA;AAGjD,aAAS,WAAW,YAAmC;AAC/C,UAAA,CAAC,WAAmB,QAAA;AACpB,UAAA;AACA,eAAO,IAAI,KAAK,UAAU,EAAE,mBAAmB,SAAS;AAAA,UACpD,KAAK;AAAA,UAAW,OAAO;AAAA,UAAS,MAAM;AAAA,QAAA,CACzC;AAAA,eACI,GAAG;AACD,eAAA;AAAA,MAAA;AAAA,IACX;AASJ,aAAS,gBAAgB;AACvB,mBAAa,QAAQ;AAAA,IAAA;AAEvB,aAAS,kBAAkB;AACX,oBAAA;AACH,iBAAA;AAAA,IAAA;AAUb,aAAS,iBAAiB;AACxB,oBAAc,QAAQ;AACtB,0BAAoB,QAAQ;AAAA,IAAA;AAE9B,aAAS,oBAAoB;AACZ,qBAAA;AACJ,iBAAA;AAAA,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}