{"file":"index.vue3.mjs","mappings":"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","names":[],"sources":["../../../../../../pages/admin/quizzes/index.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mx-auto px-4 py-6\">\r\n    <!-- Header and Add Button -->\r\n    <div class=\"flex justify-between items-center mb-6\">\r\n      <h1 class=\"text-2xl font-semibold text-gray-700 dark:text-gray-200\">إدارة الاختبارات</h1>\r\n      <button\r\n        @click=\"openCreateModal\"\r\n        class=\"inline-flex items-center justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800\"\r\n      >\r\n         <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" fill=\"currentColor\" class=\"w-4 h-4 -ml-1 mr-2 rtl:ml-2 rtl:-mr-1\"><path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14Zm.75-10.25v2.5h2.5a.75.75 0 0 1 0 1.5h-2.5v2.5a.75.75 0 0 1-1.5 0v-2.5h-2.5a.75.75 0 0 1 0-1.5h2.5v-2.5a.75.75 0 0 1 1.5 0Z\" clip-rule=\"evenodd\" /></svg>\r\n        إنشاء اختبار جديد\r\n      </button>\r\n    </div>\r\n\r\n    <!-- Filters (Optional - Add later if needed) -->\r\n    <!-- <div class=\"mb-4 p-4 bg-gray-50 dark:bg-gray-800/50 rounded-lg border dark:border-gray-700\"> ... Filters ... </div> -->\r\n\r\n    <!-- Loading & Error States -->\r\n    <div v-if=\"pending\" class=\"text-center py-10\">\r\n      <LoadingSpinner />\r\n      <p class=\"mt-2 text-gray-500 dark:text-gray-400\">جارٍ تحميل الاختبارات...</p>\r\n    </div>\r\n     <div v-if=\"fetchError\" class=\"my-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded relative\" role=\"alert\">\r\n      <strong class=\"font-bold\">خطأ!</strong>\r\n      <span class=\"block sm:inline\"> حدث خطأ أثناء جلب الاختبارات. ({{ fetchError.message }})</span>\r\n       <button @click=\"refresh\" class=\"ml-4 text-red-800 underline\">إعادة المحاولة</button>\r\n    </div>\r\n     <div v-if=\"actionMessage\" :class=\"['my-4 p-3 border rounded text-sm', actionMessageType === 'success' ? 'bg-green-100 border-green-300 text-green-700' : 'bg-red-100 border-red-300 text-red-700']\">\r\n        {{ actionMessage }}\r\n    </div>\r\n\r\n    <!-- Quizzes Table -->\r\n    <div v-if=\"quizzes && quizzes.length > 0\" class=\"overflow-x-auto bg-white dark:bg-gray-800 shadow rounded-lg\">\r\n      <table class=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\r\n        <thead class=\"bg-gray-50 dark:bg-gray-700\">\r\n          <tr>\r\n            <th scope=\"col\" class=\"px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">العنوان</th>\r\n            <th scope=\"col\" class=\"px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">النوع</th>\r\n            <th scope=\"col\" class=\"px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">مرتبط بـ</th>\r\n            <th scope=\"col\" class=\"px-6 py-3 text-center text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">الحالة</th>\r\n            <th scope=\"col\" class=\"px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">تاريخ الإنشاء</th>\r\n            <th scope=\"col\" class=\"relative px-6 py-3\"><span class=\"sr-only\">الإجراءات</span></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody class=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\r\n          <tr v-for=\"quiz in quizzes\" :key=\"quiz.id\" class=\"hover:bg-gray-50 dark:hover:bg-gray-700/50\">\r\n            <td class=\"px-6 py-4 whitespace-nowrap\">\r\n                <div class=\"text-sm font-medium text-gray-900 dark:text-gray-100\">{{ quiz.title }}</div>\r\n                <div class=\"text-xs text-gray-500 dark:text-gray-400 truncate max-w-xs\">{{ quiz.description }}</div>\r\n            </td>\r\n            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">{{ formatQuizType(quiz.type) }}</td>\r\n            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\r\n                <span v-if=\"quiz.type === 'lesson'\">درس: {{ quiz.lessons?.title || quiz.lesson_id }}</span>\r\n                <span v-else-if=\"quiz.type === 'module'\">وحدة {{ quiz.module_number }} في دورة: {{ quiz.study_courses?.title || quiz.course_id }}</span>\r\n                <span v-else-if=\"quiz.type === 'final'\">دورة: {{ quiz.study_courses?.title || quiz.course_id }}</span>\r\n                <span v-else-if=\"quiz.type === 'practice'\">تدريبي</span>\r\n                <span v-else>--</span>\r\n            </td>\r\n             <td class=\"px-6 py-4 whitespace-nowrap text-center\">\r\n              <span :class=\"['px-2 inline-flex text-xs leading-5 font-semibold rounded-full', quiz.is_active ? 'bg-green-100 text-green-800 dark:bg-green-900/50 dark:text-green-300' : 'bg-gray-100 text-gray-800 dark:bg-gray-900/50 dark:text-gray-300']\">\r\n                {{ quiz.is_active ? 'نشط' : 'غير نشط' }}\r\n              </span>\r\n            </td>\r\n             <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">{{ formatDate(quiz.created_at) }}</td>\r\n            <td class=\"px-6 py-4 whitespace-nowrap text-left text-sm font-medium rtl:text-right space-x-2 rtl:space-x-reverse\">\r\n              <NuxtLink :to=\"`/admin/quizzes/${quiz.id}/questions`\" class=\"text-blue-600 hover:text-blue-900 dark:text-blue-400 dark:hover:text-blue-300\" title=\"إدارة الأسئلة\">الأسئلة</NuxtLink>\r\n              <button @click=\"openEditModal(quiz)\" class=\"text-indigo-600 hover:text-indigo-900 dark:text-indigo-400 dark:hover:text-indigo-300\" title=\"تعديل الاختبار\">تعديل</button>\r\n              <button @click=\"confirmDelete(quiz)\" class=\"text-red-600 hover:text-red-900 dark:text-red-400 dark:hover:text-red-300\" title=\"حذف الاختبار\">حذف</button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <div v-else-if=\"!pending\" class=\"text-center py-10 text-gray-500 dark:text-gray-400\">\r\n      لا توجد اختبارات تم إنشاؤها بعد.\r\n       <button @click=\"openCreateModal\" class=\"ml-2 text-indigo-600 hover:underline\">إنشاء أول اختبار</button>\r\n    </div>\r\n\r\n    <!-- Pagination (Optional - Add later if needed) -->\r\n    <!-- <div v-if=\"totalPages > 1\" class=\"mt-6 ...\"> ... Pagination Controls ... </div> -->\r\n\r\n    <!-- Create/Edit Modal -->\r\n    <LazyAdminQuizCreateEditModal\r\n        v-model=\"showModal\"\r\n        :quiz-data=\"selectedQuizForEdit\"\r\n        @saved=\"handleQuizSaved\"\r\n        @closed=\"handleModalClosed\"\r\n    />\r\n\r\n     <!-- Confirmation Modal for Delete -->\r\n     <LazyAdminConfirmationModal\r\n         v-model=\"showDeleteConfirm\"\r\n         :config=\"deleteConfirmConfig\"\r\n         @confirm=\"deleteQuiz\"\r\n         @close=\"quizToDelete = null\"\r\n     />\r\n\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted, computed } from 'vue';\r\nimport type { Database, Tables } from '~/types/database.types';\r\nimport LoadingSpinner from '~/components/LoadingSpinner.vue';\r\n// Lazy load modals\r\nconst QuizCreateEditModal = resolveComponent('LazyAdminQuizCreateEditModal');\r\nconst ConfirmationModal = resolveComponent('LazyAdminConfirmationModal');\r\nimport { type ConfirmationConfig } from '~/components/admin/ConfirmationModal.vue'; // Import config type\r\nimport { useSupabaseClient, definePageMeta, useNuxtApp } from '#imports';\r\nimport type { PostgrestError } from '@supabase/supabase-js';\r\n\r\n// --- Define Types ---\r\n// Extend Quiz type to potentially include related data names\r\ntype QuizView = Tables<'quizzes'> & {\r\n  lessons?: Pick<Tables<'lessons'>, 'title'> | null;\r\n  study_courses?: Pick<Tables<'study_courses'>, 'title'> | null;\r\n};\r\n\r\n// --- Page Meta ---\r\ndefinePageMeta({ layout: 'admin', middleware: 'admin' });\r\n\r\n// --- Composables ---\r\nconst supabase = useSupabaseClient<Database>();\r\nconst { $toast } = useNuxtApp();\r\n\r\n// --- State ---\r\nconst pending = ref(true);\r\nconst fetchError = ref<PostgrestError | null>(null);\r\nconst quizzes = ref<QuizView[]>([]); // Array to hold quizzes\r\n\r\n// Modal State\r\nconst showModal = ref(false);\r\nconst selectedQuizForEdit = ref<QuizView | null>(null); // Quiz data to pass for editing\r\nconst showDeleteConfirm = ref(false);\r\nconst quizToDelete = ref<QuizView | null>(null);\r\nconst deleteConfirmConfig = ref<ConfirmationConfig | null>(null);\r\n\r\n// Action Feedback\r\nconst actionMessage = ref<string | null>(null);\r\nconst actionMessageType = ref<'success' | 'error'>('success');\r\n\r\n// --- Fetch Data ---\r\nconst fetchQuizzes = async () => {\r\n  pending.value = true;\r\n  fetchError.value = null;\r\n  clearActionMessage();\r\n\r\n  try {\r\n    // Select quiz data and related lesson/course titles\r\n    const { data, error } = await supabase\r\n      .from('quizzes')\r\n      .select(`\r\n        *,\r\n        lessons ( title ),\r\n        study_courses ( title )\r\n      `)\r\n      .order('created_at', { ascending: false }); // Order by creation date\r\n\r\n    if (error) throw error;\r\n    quizzes.value = (data || []) as QuizView[];\r\n\r\n  } catch (err: any) {\r\n    console.error(\"Error fetching quizzes:\", err);\r\n    fetchError.value = err as PostgrestError;\r\n    quizzes.value = []; // Clear quizzes on error\r\n  } finally {\r\n    pending.value = false;\r\n  }\r\n};\r\n\r\n// --- Modal Handling ---\r\nconst openCreateModal = () => {\r\n    selectedQuizForEdit.value = null; // Ensure it's for creation\r\n    showModal.value = true;\r\n};\r\n\r\nconst openEditModal = (quiz: QuizView) => {\r\n    selectedQuizForEdit.value = { ...quiz }; // Pass a copy to avoid modifying original directly\r\n    showModal.value = true;\r\n};\r\n\r\nconst handleModalClosed = () => {\r\n    selectedQuizForEdit.value = null; // Clear selected quiz when modal closes\r\n};\r\n\r\nconst handleQuizSaved = (savedQuiz: QuizView) => {\r\n    showToast('تم حفظ الاختبار بنجاح!', 'success');\r\n    showModal.value = false;\r\n    refresh(); // Refresh the list to show changes/new quiz\r\n};\r\n\r\n\r\n// --- Delete Handling ---\r\nconst confirmDelete = (quiz: QuizView) => {\r\n    quizToDelete.value = quiz;\r\n    deleteConfirmConfig.value = {\r\n        title: 'تأكيد الحذف',\r\n        message: `هل أنت متأكد من رغبتك في حذف الاختبار \"${quiz.title}\"؟ سيتم حذف جميع أسئلته ومحاولات الطلاب المتعلقة به. لا يمكن التراجع عن هذا الإجراء.`,\r\n        confirmText: 'نعم، حذف الاختبار',\r\n        confirmClass: 'bg-red-600 hover:bg-red-700 focus:ring-red-500',\r\n        cancelText: 'إلغاء'\r\n    };\r\n    showDeleteConfirm.value = true;\r\n};\r\n\r\nconst deleteQuiz = async () => {\r\n    if (!quizToDelete.value) return;\r\n\r\n    const idToDelete = quizToDelete.value.id;\r\n    const titleToDelete = quizToDelete.value.title;\r\n    // Set loading/disable state if needed during delete\r\n\r\n    try {\r\n        const { error } = await supabase\r\n            .from('quizzes')\r\n            .delete()\r\n            .eq('id', idToDelete);\r\n\r\n        if (error) throw error;\r\n\r\n        // Remove from local list\r\n        quizzes.value = quizzes.value.filter(q => q.id !== idToDelete);\r\n        showToast(`تم حذف الاختبار \"${titleToDelete}\" بنجاح.`, 'success');\r\n\r\n    } catch (err: any) {\r\n        console.error(\"Error deleting quiz:\", err);\r\n        showActionMessage(`فشل حذف الاختبار: ${err.message}`, 'error');\r\n    } finally {\r\n        quizToDelete.value = null; // Clear selected quiz\r\n        showDeleteConfirm.value = false; // Close confirmation modal\r\n        // Reset loading/disable state\r\n    }\r\n};\r\n\r\n\r\n// --- Helper Functions ---\r\nconst formatDate = (dateString: string | null | undefined): string => {\r\n  if (!dateString) return '--';\r\n  try { const date = new Date(dateString); return date.toLocaleString('ar-EG', { dateStyle: 'medium', timeStyle: 'short' }); }\r\n  catch { return 'تاريخ غير صالح'; }\r\n};\r\n\r\nconst formatQuizType = (type: string | null | undefined): string => {\r\n    switch (type) {\r\n        case 'lesson': return 'اختبار درس';\r\n        case 'module': return 'اختبار وحدة';\r\n        case 'final': return 'اختبار نهائي';\r\n        case 'practice': return 'اختبار تدريبي';\r\n        default: return 'غير محدد';\r\n    }\r\n};\r\n\r\nconst showToast = (message: string, type: 'success' | 'error' | 'info' = 'info') => {\r\n    if ($toast && typeof $toast[type] === 'function') $toast[type](message);\r\n    else console.log(`[${type.toUpperCase()}] ${message}`);\r\n};\r\n\r\nconst showActionMessage = (msg: string, type: 'success' | 'error') => {\r\n    actionMessage.value = msg; actionMessageType.value = type;\r\n    setTimeout(() => { actionMessage.value = null; }, 5000);\r\n};\r\nconst clearActionMessage = () => { actionMessage.value = null; };\r\n\r\nconst refresh = () => {\r\n    fetchQuizzes();\r\n};\r\n\r\n// --- Lifecycle Hooks ---\r\nonMounted(() => {\r\n  fetchQuizzes();\r\n});\r\n\r\n</script>\r\n\r\n<style scoped>\r\n/* Add specific styles if needed */\r\n</style>"],"version":3}