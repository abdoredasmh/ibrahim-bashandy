{"file":"ask-sheikh.vue3.mjs","mappings":";;;;;AAgQA,MAAM,kBAAkB;;;;;AAaxB,UAAM,WAAW,kBAA4B;AAKvC,UAAA,UAAU,IAAI,IAAI;AAClB,UAAA,aAAa,IAA2B,IAAI;AAC5C,UAAA,YAAY,IAAuB,IAAI;AACvC,UAAA,iBAAiB,IAAI,CAAC;AAGtB,UAAA,eAAe,IAA2C,SAAS;AACnE,UAAA,YAAY,IAAoB,KAAK;AACrC,UAAA,aAAa,IAAI,EAAE;AAInB,UAAA,aAAa,IAAwB,EAAE;AACvC,UAAA,sBAAsB,IAAI,IAAI;AAG9B,UAAA,cAAc,IAAI,CAAC;AACnB,UAAA,WAAW,IAAI,eAAe;AAG9B,UAAA,mBAAmB,IAAqB,IAAI;AAC5C,UAAA,eAAe,IAAI,KAAK;AACxB,UAAA,aAAa,IAAmB,IAAI;AACpC,UAAA,iBAAiB,IAAmB,IAAI;AACxC,UAAA,cAAc,IAAmB,IAAI;AAGrC,UAAA,wBAAwB,IAAwB,IAAI;AAG1D,UAAM,YAAY,SAAS;AAAA,MACvB,aAAa;AAAA,MACb,WAAW;AAAA,MACX,cAAc;AAAA;AAAA,MACd,aAAa;AAAA;AAAA,IAAA,CAChB;AAGK,UAAA,aAAa,SAAS,MAAM;AAC5B,UAAA,eAAe,UAAU,EAAU,QAAA;AACvC,aAAO,KAAK,KAAK,eAAe,QAAQ,SAAS,KAAK;AAAA,IAAA,CACvD;AA6BD,UAAM,iBAAiB,OAAO,OAAO,YAAY,UAAU;;AACzD,cAAQ,QAAQ;AAChB,iBAAW,QAAQ;AAEnB,oBAAc,KAAK;AAEb,YAAA,aAAa,OAAO,KAAK,SAAS;AAClC,YAAA,UAAU,YAAY,SAAS,QAAQ;AAEzC,UAAA;AAEF,YAAI,WAAW,MAAM,WAAW,KAAK,oBAAoB,OAAO;AAC9D,gBAAM,EAAE,MAAM,SAAS,OAAO,SAAa,IAAA,MAAM,SAC9C,KAAK,qBAAqB,EAC1B,OAAO,UAAU,EACjB,MAAM,MAAM;AACf,cAAI,UAAU;AACJ,oBAAA,MAAM,8BAA8B,QAAQ;AACpD,2BAAe,4BAA4B;AAAA,UAAA,OACtC;AACM,uBAAA,QAAQ,WAAW,CAAC;AAAA,UAAA;AAEjC,8BAAoB,QAAQ;AAAA,QAAA;AAI9B,YAAI,QAAQ,SACT,KAAK,qBAAqB,EAC1B,OAAO;AAAA;AAAA;AAAA;AAAA,SAIL,EAAE,OAAO,QAAS,CAAA,EACpB,MAAM,gBAAgB,EAAE,WAAW,UAAU,UAAU,MAAM,CAAC,EAC9D,MAAM,WAAW,OAAO;AAGvB,YAAA,aAAa,UAAU,OAAO;AACxB,gBAAA,mBAAmB,aAAa,UAAU;AACxC,kBAAA,MAAM,GAAG,eAAe,gBAAgB;AAAA,QAAA;AAI9C,cAAA,gBAAgB,WAAW,MAAM,KAAK;AAC5C,YAAI,eAAe;AAEf,kBAAQ,MAAM,MAAM,iBAAiB,IAAI,aAAa,GAAG;AAAA,QAAA;AAI7D,cAAM,EAAE,MAAM,OAAO,MAAA,IAAU,MAAM;AAErC,YAAI,MAAa,OAAA;AAEP,kBAAA,QAAS,QAAQ,CAAC;AAC5B,uBAAe,QAAQ,SAAS;AAChC,oBAAY,QAAQ;AAGpB,cAAM,SAAS;AACf,oCAAsB,UAAtB,mBAA6B,SAAS,EAAE,KAAK,GAAG,UAAU;AAGzD,YAAI,OAAO,WAAW,SAAS,WAAW,QAAQ,GAAG;AAClD,qBAAW,WAAW,KAAK;AAAA,QAAA;AAAA,eAIxB,KAAU;AACT,gBAAA,MAAM,6BAA6B,GAAG;AAC9C,mBAAW,QAAQ;AACnB,kBAAU,QAAQ;AAClB,uBAAe,QAAQ;AAAA,MAAA,UACvB;AACA,gBAAQ,QAAQ;AAAA,MAAA;AAAA,IAEpB;AAGM,UAAA,aAAa,CAAC,YAAoB;AAClC,UAAA,WAAW,KAAK,WAAW,WAAW,SAAS,YAAY,YAAY,SAAS,CAAC,QAAQ,OAAO;AAElG,oBAAY,QAAQ;AAAA,MAAA;AAAA,IAExB;AAuFM,UAAA,aAAa,CAAC,eAAsC;AACpD,UAAA,CAAC,WAAmB,QAAA;AACpB,UAAA;AACM,cAAA,OAAO,IAAI,KAAK,UAAU;AAChC,YAAI,MAAM,KAAK,QAAS,CAAA,EAAU,QAAA;AAC3B,eAAA,KAAK,eAAe,SAAS,EAAE,WAAW,SAAS,WAAW,SAAS,QAAQ,MAAM;AAAA,eACvF,GAAG;AACD,eAAA;AAAA,MAAA;AAAA,IAEb;AASM,UAAA,iBAAiB,CAAC,QAAgB;AACpC,kBAAY,QAAQ;AACpB,qBAAe,QAAQ;AAEvB,iBAAW,MAAM;AAAE,oBAAY,QAAQ;AAAA,SAAS,GAAI;AAAA,IACxD;AAGM,UAAA,gBAAgB,CAAC,gBAAgB,SAAS;AAC5C,qBAAe,QAAQ;AACvB,kBAAY,QAAQ;AACpB,UAAI,eAAe;AACf,mBAAW,QAAQ;AAAA,MAAA;AAAA,IAE3B;AAKA,UAAM,CAAC,cAAc,WAAW,UAAU,GAAG,MAAM;AAC/C,uBAAiB,QAAQ;AACrB,UAAA,YAAY,UAAU,GAAG;AACzB,oBAAY,QAAQ;AAAA,MAAA,OACjB;AACH,uBAAe,CAAC;AAAA,MAAA;AAAA,IACpB,CACH;AAGK,UAAA,aAAa,CAAC,YAAY;AAC5B,qBAAe,OAAO;AAAA,IAAA,CACzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["../../../../../pages/admin/ask-sheikh.vue"],"sourcesContent":["<!-- pages/admin/ask-sheikh.vue -->\r\n<template>\r\n  <div>\r\n    <h1 class=\"text-2xl font-semibold text-gray-700 dark:text-gray-200 mb-6\">إدارة أسئلة المستخدمين (اسأل الشيخ)</h1>\r\n\r\n    <!-- Filters, Search, and Actions Row -->\r\n    <div class=\"mb-6 flex flex-wrap gap-4 items-center bg-gray-50 dark:bg-gray-800/50 p-4 rounded-lg border dark:border-gray-700\">\r\n      <!-- Filter by Status -->\r\n      <div class=\"flex items-center gap-2\">\r\n        <label for=\"filter-status\" class=\"text-sm font-medium text-gray-700 dark:text-gray-300 flex-shrink-0\">الحالة:</label>\r\n        <select\r\n          id=\"filter-status\"\r\n          v-model=\"filterStatus\"\r\n          :disabled=\"pending\"\r\n          class=\"block w-full sm:w-36 rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white disabled:opacity-70\"\r\n        >\r\n          <option value=\"pending\">المعلقة</option>\r\n          <option value=\"answered\">المجابة</option>\r\n          <option value=\"all\">الكل</option>\r\n        </select>\r\n      </div>\r\n\r\n      <!-- Search Input -->\r\n      <div class=\"flex items-center gap-2 flex-grow min-w-[200px]\">\r\n         <label for=\"search-term\" class=\"text-sm font-medium text-gray-700 dark:text-gray-300 flex-shrink-0\">بحث:</label>\r\n        <input\r\n          id=\"search-term\"\r\n          type=\"text\"\r\n          v-model=\"searchTerm\"\r\n          :disabled=\"pending\"\r\n          placeholder=\"ابحث في نص السؤال...\"\r\n          @input=\"handleSearchInput\"\r\n          class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white placeholder-gray-400 dark:placeholder-gray-500 disabled:opacity-70\"\r\n        />\r\n         <button v-if=\"searchTerm\" @click=\"clearSearch\" :disabled=\"pending\" class=\"p-1 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 disabled:opacity-50\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" fill=\"currentColor\" class=\"w-4 h-4\"><path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14Zm2.78-4.22a.75.75 0 0 1-1.06 1.06L8 9.06l-1.72 1.72a.75.75 0 1 1-1.06-1.06L6.94 8 5.22 6.28a.75.75 0 0 1 1.06-1.06L8 6.94l1.72-1.72a.75.75 0 1 1 1.06 1.06L9.06 8l1.72 1.78Z\" clip-rule=\"evenodd\" /></svg>\r\n         </button>\r\n      </div>\r\n\r\n       <!-- Sort Order -->\r\n      <div class=\"flex items-center gap-2\">\r\n        <label for=\"sort-order\" class=\"text-sm font-medium text-gray-700 dark:text-gray-300 flex-shrink-0\">ترتيب:</label>\r\n        <select\r\n          id=\"sort-order\"\r\n          v-model=\"sortOrder\"\r\n          :disabled=\"pending\"\r\n          class=\"block w-full sm:w-36 rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white disabled:opacity-70\"\r\n        >\r\n          <option value=\"asc\">الأقدم أولاً</option>\r\n          <option value=\"desc\">الأحدث أولاً</option>\r\n        </select>\r\n      </div>\r\n\r\n      <!-- Refresh Button -->\r\n      <button\r\n        @click=\"() => fetchQuestions(1)\"\r\n        :disabled=\"pending\"\r\n        title=\"تحديث القائمة\"\r\n        class=\"px-3 py-2 text-sm border border-gray-300 rounded-md dark:border-gray-600 hover:bg-gray-100 dark:hover:bg-gray-700 disabled:opacity-50 flex items-center gap-1\"\r\n      >\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" fill=\"currentColor\" :class=\"['w-4 h-4', pending ? 'animate-spin' : '']\">\r\n          <path fill-rule=\"evenodd\" d=\"M13.836 2.477a.75.75 0 0 1 .75.75v1.5a.75.75 0 0 1-1.5 0V5.562l-2.504 2.503a.75.75 0 0 1-1.06 0l-.47-.47a.75.75 0 0 1 0-1.061l2.503-2.503h-.938a.75.75 0 0 1 0-1.5h1.5a.75.75 0 0 1 .75.75Zm-2.161 7.899L9.172 7.872a.75.75 0 0 0-1.06 0l-.47.47a.75.75 0 0 0 0 1.061l2.504 2.503v.938a.75.75 0 0 0 1.5 0v-1.5a.75.75 0 0 0-.75-.75ZM2.75 4.25a.75.75 0 0 0 0 1.5h.938l2.503 2.504a.75.75 0 0 0 0 1.06l.47.471a.75.75 0 0 0 1.06 0l2.504-2.504v.938a.75.75 0 0 0 1.5 0v-1.5a.75.75 0 0 0-.75-.75h-1.5a.75.75 0 0 0 0 1.5h.938l-2.503 2.504a.75.75 0 0 1-1.06 0l-.47-.471a.75.75 0 0 1 0-1.06L6.188 5.75h.938a.75.75 0 0 0 0-1.5H2.75Z\" clip-rule=\"evenodd\" />\r\n        </svg>\r\n        <span class=\"hidden sm:inline\">تحديث</span>\r\n      </button>\r\n    </div>\r\n\r\n     <!-- Status Messages -->\r\n     <div v-if=\"successMessage\" class=\"my-4 p-3 bg-green-100 border border-green-300 text-green-700 rounded text-sm transition-opacity duration-300 ease-out\"> {{ successMessage }} </div>\r\n     <div v-if=\"actionError || replyError\" class=\"my-4 p-3 bg-red-100 border border-red-300 text-red-700 rounded text-sm transition-opacity duration-300 ease-out\"> {{ actionError || replyError }} </div>\r\n     <div v-if=\"fetchError\" class=\"my-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded relative\" role=\"alert\">\r\n      <strong class=\"font-bold\">خطأ!</strong>\r\n      <span class=\"block sm:inline\"> حدث خطأ أثناء جلب الأسئلة. الرجاء المحاولة مرة أخرى. ({{ fetchError.message }})</span>\r\n    </div>\r\n\r\n    <!-- Loading State for List -->\r\n    <div v-if=\"pending && !questions\" class=\"text-center py-10\">\r\n      <LoadingSpinner />\r\n      <p class=\"mt-2 text-gray-500 dark:text-gray-400\">جارٍ تحميل الأسئلة...</p>\r\n    </div>\r\n\r\n    <!-- Main Layout: List and Detail/Reply View -->\r\n    <div v-else class=\"flex flex-col md:flex-row gap-6\">\r\n\r\n      <!-- Questions List & Pagination -->\r\n      <div class=\"w-full md:w-2/5 lg:w-1/3 flex-shrink-0 flex flex-col\">\r\n         <div class=\"flex justify-between items-center mb-3\">\r\n             <h2 class=\"text-lg font-semibold text-gray-600 dark:text-gray-300\">\r\n                 قائمة الأسئلة ({{ totalQuestions }})\r\n             </h2>\r\n              <!-- Loading indicator for list updates -->\r\n              <LoadingSpinner v-if=\"pending\" class=\"w-4 h-4 text-indigo-500\" />\r\n         </div>\r\n        <div class=\"flex-grow space-y-1 overflow-y-auto border dark:border-gray-700 rounded-md p-1 bg-white dark:bg-gray-800 shadow-sm min-h-[300px] max-h-[70vh]\" ref=\"questionListContainer\">\r\n          <template v-if=\"questions && questions.length > 0\">\r\n            <button\r\n              v-for=\"q in questions\"\r\n              :key=\"q.id\"\r\n              @click=\"selectQuestion(q)\"\r\n              class=\"block w-full text-right p-3 rounded-md transition-all duration-150 text-sm border-b border-gray-100 dark:border-gray-700/50 last:border-b-0\"\r\n              :class=\"[\r\n                selectedQuestion?.id === q.id\r\n                  ? 'bg-indigo-100 dark:bg-indigo-900/50 ring-1 ring-indigo-500 shadow-inner'\r\n                  : 'hover:bg-gray-100 dark:hover:bg-gray-700',\r\n                q.is_answered ? 'opacity-80' : 'opacity-100' // Slightly dim answered questions\r\n              ]\"\r\n            >\r\n              <p class=\"font-medium text-gray-800 dark:text-gray-100 truncate\" :class=\"{'!font-semibold': !q.is_answered}\">{{ q.profiles?.full_name || `مستخدم غير مسجل` }}</p>\r\n              <p class=\"text-gray-600 dark:text-gray-400 truncate text-xs mt-1\">{{ q.question_text }}</p>\r\n              <div class=\"flex justify-between items-center mt-1.5 text-xs text-gray-400 dark:text-gray-500\">\r\n                <span>{{ formatDate(q.submitted_at) }}</span>\r\n                <span v-if=\"q.is_answered\" class=\"px-2 py-0.5 bg-green-100 text-green-800 dark:bg-green-900/50 dark:text-green-300 rounded-full text-xs font-medium\">مجاب</span>\r\n                <span v-else class=\"px-2 py-0.5 bg-yellow-100 text-yellow-800 dark:bg-yellow-900/50 dark:text-yellow-300 rounded-full text-xs font-medium\">معلق</span>\r\n              </div>\r\n            </button>\r\n          </template>\r\n          <p v-else-if=\"!pending\" class=\"text-sm text-center text-gray-500 dark:text-gray-400 mt-8 px-4 italic\">\r\n            {{ searchTerm ? 'لا توجد أسئلة تطابق بحثك.' : 'لا توجد أسئلة تطابق الفلتر الحالي.' }}\r\n          </p>\r\n           <!-- Skeleton Loader while pending -->\r\n          <div v-if=\"pending && !questions?.length\" class=\"space-y-2 p-2\">\r\n            <div v-for=\"i in 5\" :key=\"i\" class=\"animate-pulse bg-gray-200 dark:bg-gray-700 h-16 rounded-md\"></div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Pagination Controls -->\r\n       <div v-if=\"totalPages > 1\" class=\"mt-4 flex justify-center items-center space-x-2 rtl:space-x-reverse border-t dark:border-gray-700 pt-3\">\r\n          <button\r\n            @click=\"changePage(currentPage - 1)\"\r\n            :disabled=\"currentPage === 1 || pending\"\r\n            class=\"px-3 py-1 text-sm rounded border bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n           >\r\n            السابق\r\n          </button>\r\n          <span class=\"text-sm text-gray-700 dark:text-gray-300\">\r\n            صفحة {{ currentPage }} من {{ totalPages }}\r\n          </span>\r\n          <button\r\n            @click=\"changePage(currentPage + 1)\"\r\n            :disabled=\"currentPage === totalPages || pending\"\r\n            class=\"px-3 py-1 text-sm rounded border bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n           >\r\n            التالي\r\n          </button>\r\n       </div>\r\n      </div>\r\n\r\n      <!-- Question Detail and Reply Area -->\r\n      <div class=\"flex-1 bg-white dark:bg-gray-800 p-6 rounded-lg shadow relative\">\r\n         <!-- Loading overlay for reply area -->\r\n         <div v-if=\"isSubmitting\" class=\"absolute inset-0 bg-white/70 dark:bg-gray-900/70 flex items-center justify-center z-10 rounded-lg\">\r\n             <LoadingSpinner class=\"w-8 h-8 text-indigo-600\" />\r\n         </div>\r\n        <div v-if=\"selectedQuestion\">\r\n          <h2 class=\"text-xl font-semibold mb-4 text-gray-800 dark:text-gray-100 border-b dark:border-gray-700 pb-3\">تفاصيل السؤال والرد</h2>\r\n\r\n          <!-- Question Details -->\r\n          <div class=\"mb-6 space-y-3 text-sm\">\r\n             <p><strong class=\"font-medium text-gray-700 dark:text-gray-300\">السائل:</strong> {{ selectedQuestion.profiles?.full_name || 'غير معروف' }}</p>\r\n             <p><strong class=\"font-medium text-gray-700 dark:text-gray-300\">تاريخ الإرسال:</strong> {{ formatDate(selectedQuestion.submitted_at) }}</p>\r\n             <div class=\"mt-3\">\r\n                <p class=\"font-medium text-gray-700 dark:text-gray-300 mb-1\">نص السؤال:</p>\r\n                <p class=\"text-gray-700 dark:text-gray-200 bg-gray-50 dark:bg-gray-700/50 p-3 rounded border dark:border-gray-600 whitespace-pre-wrap max-h-60 overflow-y-auto\">{{ selectedQuestion.question_text }}</p>\r\n             </div>\r\n          </div>\r\n\r\n          <!-- Reply Form -->\r\n          <form @submit.prevent=\"submitReply\">\r\n            <div class=\"mb-4\">\r\n              <label for=\"answer_text\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">نص الإجابة *</label>\r\n              <textarea\r\n                id=\"answer_text\"\r\n                v-model=\"replyForm.answer_text\"\r\n                rows=\"8\"\r\n                required\r\n                placeholder=\"اكتب ردك هنا...\"\r\n                class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white disabled:opacity-70\"\r\n                :disabled=\"isSubmitting\"\r\n              ></textarea>\r\n              <p v-if=\"replyError\" class=\"mt-1 text-xs text-red-600 dark:text-red-400\">{{ replyError }}</p>\r\n            </div>\r\n\r\n            <!-- Category Select Field -->\r\n            <div class=\"mb-4\">\r\n              <label for=\"reply-category\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">تصنيف السؤال (اختياري)</label>\r\n              <div v-if=\"isLoadingCategories\" class=\"mt-1 text-sm text-gray-500\">جار تحميل التصنيفات...</div>\r\n              <select\r\n                v-else\r\n                id=\"reply-category\"\r\n                v-model=\"replyForm.category_id\"\r\n                class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white disabled:opacity-70\"\r\n                :disabled=\"isSubmitting\"\r\n              >\r\n                <option :value=\"null\">-- بدون تصنيف --</option>\r\n                <template v-if=\"categories && categories.length > 0\">\r\n                  <option v-for=\"cat in categories\" :key=\"cat.id\" :value=\"cat.id\">\r\n                    {{ cat.name }}\r\n                  </option>\r\n                </template>\r\n                <option v-else disabled>-- لا توجد تصنيفات متاحة --</option>\r\n              </select>\r\n            </div>\r\n\r\n            <!-- Publishing Options -->\r\n            <div class=\"mb-6 space-y-2\">\r\n               <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">خيارات النشر:</label>\r\n                <div class=\"flex flex-col sm:flex-row items-start sm:items-center gap-x-6 gap-y-2\">\r\n                    <div class=\"flex items-center\">\r\n                        <input id=\"is_public\" type=\"checkbox\" v-model=\"replyForm.is_public\" class=\"h-4 w-4 text-indigo-600 border-gray-300 rounded focus:ring-indigo-500 dark:bg-gray-700 dark:border-gray-600\" :disabled=\"isSubmitting\">\r\n                        <label for=\"is_public\" class=\"ms-2 block text-sm text-gray-900 dark:text-gray-300\">نشر الإجابة للعامة</label>\r\n                    </div>\r\n                     <div class=\"flex items-center\">\r\n                         <input id=\"send_private\" type=\"checkbox\" v-model=\"replyForm.send_private\" class=\"h-4 w-4 text-indigo-600 border-gray-300 rounded focus:ring-indigo-500 dark:bg-gray-700 dark:border-gray-600\" :disabled=\"isSubmitting\">\r\n                         <label for=\"send_private\" class=\"ms-2 block text-sm text-gray-900 dark:text-gray-300\">إرسال رد خاص للسائل</label>\r\n                     </div>\r\n                </div>\r\n                <p v-if=\"!replyForm.is_public && !replyForm.send_private\" class=\"mt-2 text-xs text-yellow-600 dark:text-yellow-400\">تنبيه: يجب اختيار خيار واحد على الأقل (نشر عام أو إرسال خاص).</p>\r\n            </div>\r\n\r\n            <!-- Submit Button Area -->\r\n            <div class=\"flex justify-end border-t dark:border-gray-700 pt-4\">\r\n              <button\r\n                type=\"submit\"\r\n                :disabled=\"isSubmitting || (!replyForm.is_public && !replyForm.send_private) || !replyForm.answer_text.trim()\"\r\n                class=\"inline-flex justify-center rounded-md border border-transparent bg-indigo-600 px-6 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              >\r\n                 <LoadingSpinner v-if=\"isSubmitting\" class=\"w-5 h-5 text-white -ms-1 me-2\" />\r\n                <span>{{ isSubmitting ? 'جاري الإرسال...' : 'إرسال الرد' }}</span>\r\n              </button>\r\n            </div>\r\n          </form>\r\n\r\n        </div>\r\n        <!-- Placeholder when no question is selected -->\r\n        <div v-else class=\"text-center py-16 text-gray-500 dark:text-gray-400\">\r\n           <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-12 h-12 mx-auto mb-4 text-gray-400\">\r\n             <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M9.879 7.519c1.171-1.025 3.071-1.025 4.242 0 1.172 1.025 1.172 2.687 0 3.712-.203.179-.43.326-.67.442-.745.361-1.45.999-1.45 1.827v.75M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Zm-9 5.25h.008v.008H12v-.008Z\" />\r\n           </svg>\r\n           <p>الرجاء اختيار سؤال من القائمة لعرض تفاصيله والرد عليه.</p>\r\n           <p v-if=\"!pending && questions && questions.length === 0\" class=\"mt-2 text-sm\">(لا توجد أسئلة لعرضها بناءً على الفلاتر الحالية)</p>\r\n        </div>\r\n      </div>\r\n\r\n    </div> <!-- End Flex Layout -->\r\n\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, computed, onMounted, watch, reactive, nextTick } from 'vue';\r\nimport type { Database, Tables, Enums } from '~/types/database.types';\r\nimport LoadingSpinner from '~/components/LoadingSpinner.vue';\r\nimport { useSupabaseClient, definePageMeta } from '#imports';\r\nimport type { PostgrestError, SupabaseClient } from '@supabase/supabase-js';\r\n\r\n// --- Constants ---\r\nconst ADMIN_PAGE_SIZE = 15; // Number of questions per page in admin panel\r\nconst SEARCH_DEBOUNCE_MS = 400; // Delay for search input\r\n\r\n// --- Define Types ---\r\ntype QuestionCategory = Tables<'question_categories'>;\r\ntype Question = Tables<'questions_to_sheikh'> & {\r\n  profiles: Pick<Tables<'profiles'>, 'full_name'> | null;\r\n};\r\n\r\n// --- Page Meta ---\r\ndefinePageMeta({ layout: 'admin', middleware: 'admin' });\r\n\r\n// --- Composables ---\r\nconst supabase = useSupabaseClient<Database>() as SupabaseClient<Database>; // Ensure correct typing\r\n\r\n// --- State ---\r\n\r\n// List Loading & Data\r\nconst pending = ref(true); // Indicates list or categories are loading\r\nconst fetchError = ref<PostgrestError | null>(null); // For list fetch errors\r\nconst questions = ref<Question[] | null>(null); // Holds the list of questions for the current page\r\nconst totalQuestions = ref(0); // Total questions matching the current filter/search\r\n\r\n// Filters & Sorting\r\nconst filterStatus = ref<Enums<'question_status_enum'> | 'all'>('pending'); // Filter state ('pending', 'answered', 'all')\r\nconst sortOrder = ref<'asc' | 'desc'>('asc'); // Sort order for submitted_at\r\nconst searchTerm = ref(''); // Search term state\r\nlet searchDebounceTimer: ReturnType<typeof setTimeout> | null = null; // For debouncing search input\r\n\r\n// Categories\r\nconst categories = ref<QuestionCategory[]>([]); // State for categories\r\nconst isLoadingCategories = ref(true); // State for category loading (usually only once)\r\n\r\n// Pagination\r\nconst currentPage = ref(1);\r\nconst pageSize = ref(ADMIN_PAGE_SIZE);\r\n\r\n// Selection & Reply\r\nconst selectedQuestion = ref<Question | null>(null); // Holds the currently selected question\r\nconst isSubmitting = ref(false); // For reply submission loading state\r\nconst replyError = ref<string | null>(null); // For reply submission errors (validation or API)\r\nconst successMessage = ref<string | null>(null); // For general success feedback\r\nconst actionError = ref<string | null>(null); // For errors during actions (like failing to send private message)\r\n\r\n// UI Refs\r\nconst questionListContainer = ref<HTMLElement | null>(null); // Ref for scrolling list\r\n\r\n// Reply Form State\r\nconst replyForm = reactive({\r\n    answer_text: '',\r\n    is_public: false,\r\n    send_private: true, // Default to sending private message\r\n    category_id: null as number | null // For selected category ID\r\n});\r\n\r\n// --- Computed Properties ---\r\nconst totalPages = computed(() => {\r\n  if (totalQuestions.value === 0) return 1;\r\n  return Math.ceil(totalQuestions.value / pageSize.value);\r\n});\r\n\r\n// --- Functions ---\r\n\r\n/** Debounced search handler */\r\nconst handleSearchInput = () => {\r\n    if (searchDebounceTimer) {\r\n        clearTimeout(searchDebounceTimer);\r\n    }\r\n    searchDebounceTimer = setTimeout(() => {\r\n        // Trigger fetch only if search term actually changed perspective (trimmed)\r\n        // The watch effect on searchTerm will handle the fetch\r\n        if (currentPage.value !== 1) {\r\n            currentPage.value = 1; // Reset to first page on new search\r\n        } else {\r\n            // If already on page 1, trigger fetch directly via watch\r\n            fetchQuestions(1);\r\n        }\r\n    }, SEARCH_DEBOUNCE_MS);\r\n};\r\n\r\n/** Clear search term and refetch */\r\nconst clearSearch = () => {\r\n    searchTerm.value = '';\r\n    // The watch effect on searchTerm will reset page and refetch\r\n};\r\n\r\n\r\n/** Fetch questions based on current filters, search, sort, and pagination */\r\nconst fetchQuestions = async (page = currentPage.value) => {\r\n  pending.value = true;\r\n  fetchError.value = null;\r\n  // Don't clear selectedQuestion here, allow viewing while list updates unless filter changes\r\n  clearMessages(false); // Clear messages but keep potential replyError\r\n\r\n  const rangeFrom = (page - 1) * pageSize.value;\r\n  const rangeTo = rangeFrom + pageSize.value - 1;\r\n\r\n  try {\r\n    // --- Fetch Categories (only if needed) ---\r\n    if (categories.value.length === 0 && isLoadingCategories.value) {\r\n      const { data: catData, error: catError } = await supabase\r\n        .from('question_categories')\r\n        .select('id, name')\r\n        .order('name');\r\n      if (catError) {\r\n        console.error(\"Error fetching categories:\", catError);\r\n        setActionError('فشل تحميل تصنيفات الأسئلة.'); // Inform user\r\n      } else {\r\n        categories.value = catData || [];\r\n      }\r\n      isLoadingCategories.value = false; // Mark as attempted\r\n    }\r\n\r\n    // --- Build Questions Query ---\r\n    let query = supabase\r\n      .from('questions_to_sheikh')\r\n      .select(`\r\n        id, user_id, question_text, submitted_at, is_answered, is_public,\r\n        answer_text, category_id, answered_at,\r\n        profiles ( full_name )\r\n      `, { count: 'exact' }) // Request total count\r\n      .order('submitted_at', { ascending: sortOrder.value === 'asc' })\r\n      .range(rangeFrom, rangeTo);\r\n\r\n    // Apply status filter\r\n    if (filterStatus.value !== 'all') {\r\n        const isAnsweredFilter = filterStatus.value === 'answered';\r\n        query = query.eq('is_answered', isAnsweredFilter);\r\n    }\r\n\r\n    // Apply search filter (on question_text)\r\n    const trimmedSearch = searchTerm.value.trim();\r\n    if (trimmedSearch) {\r\n        // Use ilike for case-insensitive search. Adjust if full-text search is set up.\r\n        query = query.ilike('question_text', `%${trimmedSearch}%`);\r\n    }\r\n\r\n    // --- Execute Query ---\r\n    const { data, error, count } = await query;\r\n\r\n    if (error) throw error;\r\n\r\n    questions.value = (data || []) as Question[];\r\n    totalQuestions.value = count ?? 0;\r\n    currentPage.value = page; // Update current page state\r\n\r\n    // Auto-scroll list to top after fetching new page/filter results\r\n    await nextTick();\r\n    questionListContainer.value?.scrollTo({ top: 0, behavior: 'smooth' });\r\n\r\n    // If current page becomes invalid after fetch (e.g., > totalPages), go to last page\r\n     if (page > totalPages.value && totalPages.value > 0) {\r\n        changePage(totalPages.value); // This will trigger another fetch via watch\r\n     }\r\n\r\n\r\n  } catch (err: any) {\r\n    console.error(\"Error fetching questions:\", err);\r\n    fetchError.value = err as PostgrestError;\r\n    questions.value = null; // Clear questions on error\r\n    totalQuestions.value = 0;\r\n  } finally {\r\n    pending.value = false;\r\n  }\r\n};\r\n\r\n/** Change page and trigger fetch */\r\nconst changePage = (newPage: number) => {\r\n  if (newPage >= 1 && newPage <= totalPages.value && newPage !== currentPage.value && !pending.value) {\r\n    // The watch effect on currentPage will trigger fetchQuestions\r\n    currentPage.value = newPage;\r\n  }\r\n}\r\n\r\n/** Select a question, reset form, and clear errors */\r\nconst selectQuestion = (question: Question) => {\r\n    selectedQuestion.value = question;\r\n    replyForm.answer_text = question.answer_text || '';\r\n    replyForm.is_public = question.is_public || false;\r\n    // Default send_private: true if not answered, or if answered but *not* public\r\n    replyForm.send_private = !question.answered_at || !question.is_public;\r\n    replyForm.category_id = question.category_id; // Pre-fill category\r\n    clearMessages(); // Clear all feedback messages on new selection\r\n};\r\n\r\n/** Submit the reply */\r\nconst submitReply = async () => {\r\n    if (!selectedQuestion.value || isSubmitting.value) return;\r\n\r\n    // Basic Validation\r\n    replyError.value = null; // Clear previous reply errors\r\n    if (!replyForm.answer_text.trim()) { replyError.value = \"نص الإجابة لا يمكن أن يكون فارغًا.\"; return; }\r\n    if (!replyForm.is_public && !replyForm.send_private) { replyError.value = \"يجب تحديد خيار للنشر (عام أو خاص).\"; return; }\r\n\r\n    isSubmitting.value = true;\r\n    clearMessages(false); // Clear general messages, keep potential replyError\r\n\r\n    try {\r\n        const updatePayload = {\r\n            answer_text: replyForm.answer_text.trim(),\r\n            answered_at: new Date().toISOString(),\r\n            is_answered: true,\r\n            is_public: replyForm.is_public,\r\n            // Ensure category_id is number or null\r\n            category_id: replyForm.category_id ? Number(replyForm.category_id) : null\r\n        };\r\n\r\n        const { error: updateError } = await supabase\r\n            .from('questions_to_sheikh')\r\n            .update(updatePayload)\r\n            .eq('id', selectedQuestion.value.id);\r\n\r\n        if (updateError) throw new Error(`فشل تحديث السؤال: ${updateError.message}`);\r\n\r\n        let messageSentSuccessfully = true; // Assume success unless proven otherwise\r\n        // Send private message if requested and user ID exists\r\n        if (replyForm.send_private && selectedQuestion.value.user_id) {\r\n             const messagePayload = {\r\n                user_id: selectedQuestion.value.user_id,\r\n                title: `رد على سؤالك: \"${selectedQuestion.value.question_text?.substring(0, 30) ?? ''}...\"`,\r\n                content: `**السؤال:**\\n${selectedQuestion.value.question_text}\\n\\n**الإجابة:**\\n${replyForm.answer_text.trim()}`, // Include question for context\r\n                source: 'ask_sheikh_reply',\r\n                related_question_id: selectedQuestion.value.id\r\n             };\r\n            const { error: messageError } = await supabase.from('user_private_messages').insert(messagePayload);\r\n            if (messageError) {\r\n                 console.error(\"Error sending private message:\", messageError);\r\n                 // Set actionError, but don't throw, as the main update succeeded\r\n                 setActionError(`تحذير: تم حفظ الرد بنجاح، ولكن فشل إرسال الرسالة الخاصة للسائل. الخطأ: ${messageError.message}`);\r\n                 messageSentSuccessfully = false;\r\n            }\r\n        }\r\n\r\n        // Set success message based on outcome\r\n        if (messageSentSuccessfully || !replyForm.send_private) { // Show general success if message sent or wasn't needed\r\n             setSuccessMessage('تم حفظ وإرسال الرد بنجاح.');\r\n        }\r\n\r\n        // --- Success Routine ---\r\n        selectedQuestion.value = null; // Clear selection\r\n        // Reset form to defaults\r\n        replyForm.answer_text = '';\r\n        replyForm.is_public = false;\r\n        replyForm.send_private = true;\r\n        replyForm.category_id = null;\r\n\r\n        // Refetch the *current* page to reflect changes (especially status change)\r\n        await fetchQuestions(currentPage.value);\r\n\r\n\r\n    } catch (err: any) {\r\n        console.error(\"Error submitting reply:\", err);\r\n        replyError.value = err.message || \"حدث خطأ غير متوقع أثناء إرسال الرد.\";\r\n    } finally {\r\n        isSubmitting.value = false;\r\n    }\r\n};\r\n\r\n// --- Helper Functions ---\r\nconst formatDate = (dateString: string | null): string => {\r\n  if (!dateString) return 'غير محدد';\r\n  try {\r\n      const date = new Date(dateString);\r\n      if (isNaN(date.getTime())) return 'تاريخ غير صالح';\r\n      return date.toLocaleString('ar-EG', { dateStyle: 'short', timeStyle: 'short', hour12: true });\r\n  } catch (e) {\r\n      return 'خطأ تنسيق';\r\n  }\r\n};\r\n\r\nconst setSuccessMessage = (msg: string) => {\r\n    successMessage.value = msg;\r\n    actionError.value = null;\r\n    replyError.value = null; // Also clear replyError on general success\r\n    setTimeout(() => { successMessage.value = null; }, 4000);\r\n};\r\n\r\nconst setActionError = (msg: string) => {\r\n    actionError.value = msg;\r\n    successMessage.value = null;\r\n    // Don't clear replyError here, it might be relevant\r\n    setTimeout(() => { actionError.value = null; }, 7000);\r\n};\r\n\r\n/** Clears feedback messages. Optionally keeps replyError. */\r\nconst clearMessages = (clearReplyErr = true) => {\r\n    successMessage.value = null;\r\n    actionError.value = null;\r\n    if (clearReplyErr) {\r\n        replyError.value = null;\r\n    }\r\n};\r\n\r\n// --- Watchers ---\r\n\r\n// Refetch when filter, sort order, or search term changes, resetting to page 1\r\nwatch([filterStatus, sortOrder, searchTerm], () => {\r\n    selectedQuestion.value = null; // Clear selection when filters change drastically\r\n    if (currentPage.value !== 1) {\r\n        currentPage.value = 1; // Reset page, which will trigger the next watcher\r\n    } else {\r\n        fetchQuestions(1); // Fetch page 1 directly if already there\r\n    }\r\n});\r\n\r\n// Refetch when current page changes\r\nwatch(currentPage, (newPage) => {\r\n    fetchQuestions(newPage);\r\n});\r\n\r\n// --- Lifecycle Hooks ---\r\nonMounted(() => {\r\n  fetchQuestions(1); // Fetch initial questions (page 1, default filters)\r\n});\r\n\r\n</script>\r\n\r\n<style scoped>\r\n/* Custom scrollbar for question list */\r\n.overflow-y-auto::-webkit-scrollbar { width: 6px; }\r\n.overflow-y-auto::-webkit-scrollbar-thumb { background-color: rgba(156, 163, 175, 0.5); border-radius: 3px; }\r\n.overflow-y-auto:hover::-webkit-scrollbar-thumb { background-color: rgba(156, 163, 175, 0.8); }\r\n.overflow-y-auto::-webkit-scrollbar-track { background: transparent; }\r\n\r\n.whitespace-pre-wrap { white-space: pre-wrap; word-wrap: break-word; }\r\n\r\n/* Ensure enough height for the list and details */\r\n.min-h-\\[300px\\] { min-height: 300px; }\r\n.max-h-\\[70vh\\] { max-height: 70vh; } /* List max height */\r\n.max-h-60 { max-height: 15rem; } /* Question text max height */\r\n</style>"],"version":3}