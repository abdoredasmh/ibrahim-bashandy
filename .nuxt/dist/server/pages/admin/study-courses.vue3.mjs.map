{"version":3,"file":"study-courses.vue3.mjs","sources":["../../../../../pages/admin/study-courses.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- Header and Add Button -->\r\n    <div class=\"flex justify-between items-center mb-6\">\r\n      <h1 class=\"text-2xl font-semibold\">إدارة الدورات الدراسية</h1>\r\n      <button @click=\"openAddCourseModal\" class=\"button-primary\" :disabled=\"loadingFilters\">\r\n        <span v-if=\"loadingFilters\">تحميل...</span>\r\n        <span v-else>إضافة دورة جديدة</span>\r\n      </button>\r\n    </div>\r\n\r\n    <!-- Loading Indicator -->\r\n    <div v-if=\"pending\" class=\"text-center py-10\">\r\n      <LoadingSpinner />\r\n      <p class=\"mt-2 text-sm text-gray-500 dark:text-gray-400\">جارٍ تحميل قائمة الدورات...</p>\r\n    </div>\r\n\r\n    <!-- Error Loading -->\r\n     <div v-else-if=\"error\" class=\"text-center py-10 px-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg max-w-md mx-auto\">\r\n        <p class=\"text-red-600 dark:text-red-400 font-semibold mb-2\">\r\n         <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-5 h-5 inline-block align-middle me-1\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 1 1-16 0 8 8 0 0 1 16 0Zm-8-5a.75.75 0 0 1 .75.75v4.5a.75.75 0 0 1-1.5 0v-4.5A.75.75 0 0 1 10 5Zm0 10a1 1 0 1 0 0-2 1 1 0 0 0 0 2Z\" clip-rule=\"evenodd\" /></svg>\r\n         خطأ تحميل الدورات\r\n        </p>\r\n        <pre class=\"mt-1 text-xs text-left bg-red-100 dark:bg-red-800/30 p-2 rounded border border-red-200 dark:border-red-700 text-red-700 dark:text-red-300 whitespace-pre-wrap\">{{ error.message }}</pre>\r\n        <button @click=\"refresh\" class=\"mt-4 px-4 py-1.5 bg-red-100 text-red-700 dark:bg-red-900/50 dark:text-red-300 rounded hover:bg-red-200 dark:hover:bg-red-900 transition-colors text-sm font-medium\">\r\n          إعادة المحاولة\r\n        </button>\r\n     </div>\r\n\r\n    <!-- Empty State -->\r\n    <!-- *** MODIFIED: Check !pending and Array.isArray before checking length *** -->\r\n    <div v-else-if=\"!pending && Array.isArray(courses) && courses.length === 0\" class=\"text-center py-10 text-gray-500 dark:text-gray-400\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-10 h-10 mx-auto mb-2 text-gray-400\">\r\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 6.042A8.967 8.967 0 0 0 6 3.75c-1.052 0-2.062.18-3 .512v14.25A8.987 8.987 0 0 1 6 18c2.305 0 4.408.867 6 2.292m0-14.25a8.966 8.966 0 0 1 6-2.292c1.052 0 2.062.18 3 .512v14.25A8.987 8.987 0 0 0 18 18a8.967 8.967 0 0 0-6 2.292m0-14.25v14.25\" />\r\n      </svg>\r\n      لا توجد دورات دراسية مضافة حتى الآن.\r\n    </div>\r\n\r\n    <!-- Courses Table -->\r\n     <!-- *** MODIFIED: Check !pending and Array.isArray and length > 0 before rendering table *** -->\r\n    <div v-else-if=\"!pending && Array.isArray(courses) && courses.length > 0\" class=\"overflow-x-auto shadow ring-1 ring-black ring-opacity-5 dark:ring-gray-700 rounded-lg\">\r\n      <table class=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\r\n        <thead class=\"bg-gray-50 dark:bg-gray-800\">\r\n          <tr>\r\n             <th scope=\"col\" class=\"table-header\"></th> <!-- For Image -->\r\n            <th scope=\"col\" class=\"table-header\">العنوان</th>\r\n            <th scope=\"col\" class=\"table-header\">الفئة</th>\r\n             <th scope=\"col\" class=\"table-header text-center\">الحالة</th> <!-- Active Status -->\r\n            <th scope=\"col\" class=\"table-header\">تاريخ الإضافة</th>\r\n            <th scope=\"col\" class=\"relative px-6 py-3\">\r\n              <span class=\"sr-only\">إجراءات</span>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody class=\"bg-white dark:bg-gray-900 divide-y divide-gray-200 dark:divide-gray-700\">\r\n           <!-- v-for is now safe because we ensured 'courses' is a non-empty array -->\r\n          <tr v-for=\"course in courses\" :key=\"course.id\" class=\"hover:bg-gray-50 dark:hover:bg-gray-800/50\">\r\n            <td class=\"px-4 py-2 whitespace-nowrap\">\r\n              <img :src=\"getCourseImageUrl(course.image_url)\" :alt=\"course.title ?? 'صورة الدورة'\" class=\"h-10 w-16 object-cover rounded border border-gray-200 dark:border-gray-700\" v-if=\"course.image_url\"/>\r\n              <div v-else class=\"h-10 w-16 bg-gray-100 dark:bg-gray-700 rounded flex items-center justify-center text-gray-400\">\r\n                 <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"m2.25 15.75 5.159-5.159a2.25 2.25 0 0 1 3.182 0l5.159 5.159m-1.5-1.5 1.409-1.409a2.25 2.25 0 0 1 3.182 0l2.909 2.909m-18 3.75h16.5a1.5 1.5 0 0 0 1.5-1.5V6a1.5 1.5 0 0 0-1.5-1.5H3.75A1.5 1.5 0 0 0 2.25 6v12a1.5 1.5 0 0 0 1.5 1.5Zm16.5-5.818V18\" /></svg>\r\n              </div>\r\n            </td>\r\n            <td class=\"table-cell font-medium text-gray-900 dark:text-white\">{{ course.title }}</td>\r\n            <td class=\"table-cell\">{{ getCategoryName(course.category_id) || '-' }}</td>\r\n             <td class=\"table-cell text-center\">\r\n               <button @click=\"toggleCourseStatus(course)\" :title=\"course.is_active ? 'إلغاء تفعيل الدورة' : 'تفعيل الدورة'\">\r\n                 <span v-if=\"course.is_active\" class=\"badge-green\">نشط</span>\r\n                 <span v-else class=\"badge-red\">غير نشط</span>\r\n               </button>\r\n             </td>\r\n            <td class=\"table-cell\">\r\n              {{ formatDate(course.created_at) }}\r\n            </td>\r\n            <td class=\"table-cell text-right font-medium space-x-2 rtl:space-x-reverse whitespace-nowrap\">\r\n               <!-- TODO: Link to manage course lessons/details page -->\r\n               <!-- <NuxtLink :to=\"`/admin/study-courses/${course.id}/manage`\" class=\"text-blue-600 hover:text-blue-900 dark:text-blue-400 dark:hover:text-blue-200\">إدارة المحتوى</NuxtLink> -->\r\n               <button @click=\"openEditCourseModal(course)\" class=\"text-indigo-600 hover:text-indigo-900 dark:text-indigo-400 dark:hover:text-indigo-200\">تعديل</button>\r\n               <button @click=\"handleDeleteCourse(course)\" class=\"text-red-600 hover:text-red-900 dark:text-red-400 dark:hover:text-red-200\">حذف</button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <!-- Fallback/Unknown state (optional) -->\r\n     <div v-else-if=\"!pending && !error\">\r\n        <p class=\"text-center py-10 text-gray-400\">حالة غير متوقعة.</p>\r\n     </div>\r\n\r\n\r\n    <!-- Add/Edit Course Modal -->\r\n    <LazyAdminCourseAddEditModal\r\n       v-if=\"showCourseModal\"\r\n       :course-data=\"selectedCourseForEdit\"\r\n       :categories=\"filterCategories\"\r\n       @close=\"closeCourseModal\"\r\n       @saved=\"handleCourseSaved\"\r\n    />\r\n\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted, defineAsyncComponent, watch } from 'vue'; // Added watch\r\nimport type { Database, Tables } from '~/types/database.types';\r\nimport { useSupabaseClient, useAsyncData } from '#imports'; // Import useAsyncData\r\nimport LoadingSpinner from '~/components/LoadingSpinner.vue';\r\n\r\n// Import Modal Lazily\r\nconst LazyAdminCourseAddEditModal = defineAsyncComponent(() => import('~/components/admin/CourseAddEditModal.vue'));\r\n\r\n// Define Types\r\ntype Course = Tables<'study_courses'>;\r\ntype Category = Pick<Tables<'categories'>, 'id' | 'name'>;\r\n\r\ndefinePageMeta({ layout: 'admin', middleware: 'admin' });\r\n\r\nconst supabase = useSupabaseClient<Database>();\r\n\r\n// State\r\nconst courses = ref<Course[]>([]); // Local state holding the courses\r\nconst filterCategories = ref<Category[]>([]); // For modal and display\r\nconst pending = ref(true); // Combined loading state (synced with useAsyncData)\r\nconst error = ref<any>(null); // Combined error state (synced with useAsyncData)\r\nconst showCourseModal = ref(false);\r\nconst selectedCourseForEdit = ref<Course | null>(null);\r\nconst loadingFilters = ref(true); // Still used for Add button disable state\r\n\r\n// Fetch Courses using useAsyncData\r\nconst { data: courseData, pending: coursePending, error: courseError, refresh: refreshCourses } = await useAsyncData(\r\n    'adminCourses', // Unique key\r\n    async () => {\r\n        console.log(\"Fetching courses via useAsyncData...\");\r\n         const { data, error: fetchError } = await supabase\r\n            .from('study_courses')\r\n            .select('*')\r\n            .order('created_at', { ascending: false });\r\n\r\n         if (fetchError) {\r\n            console.error('Error fetching courses (useAsyncData):', fetchError.message);\r\n            throw fetchError; // Let useAsyncData handle the error state\r\n         }\r\n         console.log(\"Courses fetched (useAsyncData):\", data?.length);\r\n         return data || [];\r\n    }, {\r\n        default: () => [], // Provide a default empty array\r\n       // server: false // Optional: uncomment to fetch only on client\r\n    }\r\n);\r\n\r\n// Fetch Categories (still needed for modal/display) using useAsyncData\r\n const { data: categoryData, pending: catPending, error: catError, refresh: refreshCategories } = await useAsyncData(\r\n    'adminCourseCategories', // Unique key\r\n    async () => {\r\n        console.log(\"Fetching categories via useAsyncData...\");\r\n        const { data, error: fetchCatError } = await supabase\r\n            .from('categories')\r\n            // .eq('type', 'study_course') // Filter if needed\r\n            .select('id, name')\r\n            .order('name');\r\n         if (fetchCatError) {\r\n             console.error('Error fetching categories (useAsyncData):', fetchCatError.message);\r\n             throw fetchCatError; // Let useAsyncData handle\r\n         }\r\n         console.log(\"Categories fetched (useAsyncData):\", data?.length);\r\n         return data || [];\r\n    }, {\r\n        default: () => [],\r\n        // server: false\r\n    }\r\n );\r\n\r\n// Sync useAsyncData state with local refs\r\nwatch(coursePending, (newPending) => { pending.value = newPending; }, { immediate: true });\r\nwatch(courseError, (newError) => { error.value = newError; }, { immediate: true });\r\nwatch(courseData, (newData) => { courses.value = newData || []; }, { immediate: true });\r\n\r\nwatch(catPending, (newPending) => { loadingFilters.value = newPending; }, { immediate: true });\r\n// Optional: Handle category fetch error if needed for UI feedback\r\n// watch(catError, (newError) => { /* handle category specific error */ });\r\nwatch(categoryData, (newData) => { filterCategories.value = newData || []; }, { immediate: true });\r\n\r\n\r\n// Helper Functions\r\nfunction getCategoryName(categoryId: number | null): string | null {\r\n    // *** MODIFIED: Add safety check for filterCategories array ***\r\n    if (!categoryId || !Array.isArray(filterCategories.value)) return null;\r\n    const category = filterCategories.value.find(c => c.id === categoryId);\r\n    return category ? category.name : `فئة #${categoryId}`;\r\n}\r\n\r\nfunction formatDate(dateString: string | null): string {\r\n    if (!dateString) return '-';\r\n    try { return new Date(dateString).toLocaleDateString('ar-EG', { day: 'numeric', month: 'short', year: 'numeric' }); }\r\n    catch (e) { return 'تاريخ غير صالح'; }\r\n}\r\n\r\nfunction getCourseImageUrl(imageUrl: string | null): string {\r\n    return imageUrl || '/images/placeholder-course.jpg'; // Adjust placeholder path\r\n}\r\n\r\n// Toggle Course Status\r\nasync function toggleCourseStatus(course: Course) {\r\n    const newStatus = !course.is_active;\r\n    const confirmationMessage = newStatus\r\n        ? `هل أنت متأكد من تفعيل الدورة \"${course.title}\"؟ ستصبح مرئية للطلاب.`\r\n        : `هل أنت متأكد من إلغاء تفعيل الدورة \"${course.title}\"؟ لن تكون مرئية للطلاب.`;\r\n\r\n    if (!confirm(confirmationMessage)) return;\r\n\r\n    try {\r\n        const { error: updateError } = await supabase\r\n            .from('study_courses')\r\n            .update({ is_active: newStatus })\r\n            .eq('id', course.id)\r\n             .select('id') // Select something to ensure the update happened\r\n             .single(); // Expect a single row back or error\r\n\r\n        if (updateError) throw updateError;\r\n\r\n        // Update local state immediately for better UX *after* successful DB update\r\n        const index = courses.value.findIndex(c => c.id === course.id);\r\n        if (index !== -1) {\r\n            courses.value[index].is_active = newStatus;\r\n        }\r\n         alert(`تم ${newStatus ? 'تفعيل' : 'إلغاء تفعيل'} الدورة بنجاح.`);\r\n\r\n    } catch (err: any) {\r\n        console.error('Error toggling course status:', err.message);\r\n        alert(`فشل تغيير حالة الدورة: ${err.message}`);\r\n        // Optionally refresh data from DB on error to revert optimistic update\r\n        // refreshCourses();\r\n    }\r\n}\r\n\r\n// Modal Handling\r\nfunction openAddCourseModal() {\r\n    selectedCourseForEdit.value = null;\r\n    showCourseModal.value = true;\r\n}\r\nfunction openEditCourseModal(course: Course) {\r\n    selectedCourseForEdit.value = { ...course };\r\n    showCourseModal.value = true;\r\n}\r\nfunction closeCourseModal() {\r\n    showCourseModal.value = false;\r\n    selectedCourseForEdit.value = null;\r\n}\r\nasync function handleCourseSaved() {\r\n    closeCourseModal();\r\n    await refreshCourses(); // Use useAsyncData's refresh\r\n}\r\n\r\n // Delete Action\r\n async function handleDeleteCourse(course: Course) {\r\n     if (!confirm(`هل أنت متأكد من حذف الدورة \"${course.title}\"؟ سيتم فك ارتباط جميع دروسها واختباراتها (لن يتم حذف الدروس/الاختبارات نفسها).`)) {\r\n         return;\r\n     }\r\n\r\n     try {\r\n         const { error: deleteError } = await supabase\r\n             .from('study_courses')\r\n             .delete()\r\n             .eq('id', course.id);\r\n\r\n         if (deleteError) throw deleteError;\r\n\r\n         alert('تم حذف الدورة بنجاح.');\r\n         await refreshCourses(); // Use useAsyncData's refresh\r\n     } catch (err: any) {\r\n         console.error('Error deleting course:', err.message);\r\n         alert(`فشل حذف الدورة: ${err.message}`);\r\n     }\r\n }\r\n\r\n// Refresh function for error button\r\nasync function refresh() {\r\n     await Promise.all([ // Refresh both in parallel if needed\r\n         refreshCourses(),\r\n         refreshCategories()\r\n     ]);\r\n}\r\n\r\n// Initial data fetch is triggered by useAsyncData on mount\r\n\r\n</script>\r\n\r\n<style scoped>\r\n/* Re-use admin table styles */\r\n.table-header {\r\n  @apply px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider;\r\n}\r\n.table-cell {\r\n  @apply px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400 align-middle;\r\n}\r\n.button-primary {\r\n  @apply inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-olive-green hover:bg-opacity-80 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-olive-green disabled:opacity-50;\r\n}\r\n .badge-base {\r\n   @apply px-2.5 py-0.5 inline-flex text-xs leading-5 font-semibold rounded-full cursor-pointer;\r\n}\r\n.badge-green {\r\n   @apply badge-base bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200;\r\n}\r\n .badge-red {\r\n   @apply badge-base bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200;\r\n}\r\n</style>"],"names":["_withAsyncContext"],"mappings":"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"}