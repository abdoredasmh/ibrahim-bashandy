{"file":"LessonCard.vue2.mjs","mappings":";;;;;;;;;;;;;;AAyEA,UAAM,QAAQ;AAOR,UAAA,aAAa,IAAI,KAAK;AAGtB,UAAA,oBAAoB,CAAC,QAAkD;AACvE,UAAA,CAAC,IAAY,QAAA;AACb,UAAA;AAEF,cAAM,QAAQ;AACR,cAAA,QAAQ,IAAI,MAAM,KAAK;AAC7B,eAAQ,SAAS,MAAM,CAAC,IAAK,MAAM,CAAC,IAAI;AAAA,eACjC,GAAG;AACF,gBAAA,MAAM,iCAAiC,KAAK,CAAC;AAC9C,eAAA;AAAA,MAAA;AAAA,IAEX;AAGA,UAAM,UAAU,SAAS,MAAM,kBAAkB,MAAM,OAAO,WAAW,CAAC;AAG1E,UAAM,mBAAmB,MAAM;AAC7B,cAAQ,KAAK,kDAAkD,QAAQ,KAAK,EAAE;AAC9E,iBAAW,QAAQ;AAAA,IACrB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["../../../../components/LessonCard.vue"],"sourcesContent":["<template>\r\n  <div class=\"bg-white dark:bg-gray-800 rounded-lg shadow border border-cream-gray dark:border-gray-700/50 overflow-hidden group transition-shadow duration-300 hover:shadow-lg\">\r\n    <NuxtLink :to=\"`/lessons/${lesson.id}`\" class=\"block group/link\">\r\n      <!-- منطقة الصورة المصغرة من يوتيوب -->\r\n      <div class=\"aspect-video bg-black flex items-center justify-center relative overflow-hidden\">\r\n        <!-- صورة الفيديو -->\r\n        <img\r\n          v-if=\"videoId && !imageError\"\r\n          :src=\"`https://img.youtube.com/vi/${videoId}/hqdefault.jpg`\" \r\n          :alt=\"`صورة مصغرة لدرس: ${lesson.title}`\" \r\n          class=\"w-full h-full object-cover transition-transform duration-300 group-hover/link:scale-105\"\r\n          loading=\"lazy\"\r\n          decoding=\"async\" \r\n          @error=\"handleImageError\" \r\n        />\r\n        <!-- أيقونة احتياطية (تظهر إذا لم يوجد videoId أو حدث خطأ في تحميل الصورة) -->\r\n        <div v-else class=\"absolute inset-0 flex items-center justify-center bg-gray-200 dark:bg-gray-700\">\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            class=\"w-12 h-12 text-gray-400 dark:text-gray-500\"\r\n            fill=\"currentColor\"\r\n            aria-hidden=\"true\"\r\n          >\r\n            <path\r\n              d=\"M10,15L15,12L10,9V15M19,3H5A2,2 0 0,0 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5A2,2 0 0,0 19,3Z\"\r\n            />\r\n          </svg>\r\n        </div>\r\n\r\n        <!-- أيقونة التشغيل -->\r\n        <div class=\"absolute inset-0 flex items-center justify-center bg-black bg-opacity-20 group-hover/link:bg-opacity-40 transition-opacity duration-300 opacity-0 group-hover/link:opacity-100\">\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            class=\"w-12 h-12 text-white drop-shadow-lg transform transition-transform duration-300 group-hover/link:scale-110\"\r\n            fill=\"currentColor\"\r\n            aria-hidden=\"true\"\r\n          >\r\n            <path\r\n              d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 14.5v-9l6 4.5-6 4.5z\"\r\n            />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- النص -->\r\n      <div class=\"p-4\">\r\n        <h3 class=\"font-semibold text-lg mb-1 line-clamp-2 text-brown-dark dark:text-beige-light group-hover/link:text-olive-green transition-colors duration-200\">\r\n          {{ lesson.title }}\r\n        </h3>\r\n        <p class=\"text-sm text-gray-600 dark:text-gray-400 line-clamp-3\"> \r\n          {{ lesson.description || 'لا يوجد وصف للفديو' }} \r\n        </p>\r\n  \r\n        <!--\r\n        <p v-if=\"lesson.created_at\" class=\"text-xs text-gray-400 dark:text-gray-500 mt-2\">\r\n           {{ new Date(lesson.created_at).toLocaleDateString('ar-EG', { year: 'numeric', month: 'short', day: 'numeric' }) }}\r\n        </p>\r\n        -->\r\n      </div>\r\n    </NuxtLink>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, computed } from 'vue';\r\nimport type { Tables } from '~/types/database.types'; // Import types if available\r\n\r\n// Define Type for the lesson prop (Adjust based on actual data)\r\ntype LessonProp = Pick<Tables<'lessons'>, 'id' | 'title' | 'description' | 'youtube_url' | 'created_at'>; // Example\r\n\r\nconst props = defineProps({\r\n  lesson: {\r\n    type: Object as () => LessonProp, // Use the defined type\r\n    required: true\r\n  }\r\n});\r\n\r\nconst imageError = ref(false); // State to track image loading error\r\n\r\n// --- Improved YouTube Video ID Extraction using Regex ---\r\nconst getYouTubeVideoId = (url: string | null | undefined): string | null => {\r\n  if (!url) return null;\r\n  try {\r\n    // Regex covering various YouTube URL patterns (watch, embed, short, etc.)\r\n    const regex = /(?:https?:\\/\\/)?(?:www\\.)?(?:youtube\\.com\\/(?:watch\\?v=|embed\\/|v\\/|.+\\?v=)|youtu\\.be\\/)([a-zA-Z0-9_-]{11})/;\r\n    const match = url.match(regex);\r\n    return (match && match[1]) ? match[1] : null;\r\n  } catch (e) {\r\n    console.error(\"Error processing YouTube URL:\", url, e);\r\n    return null;\r\n  }\r\n};\r\n\r\n// Computed property for videoId\r\nconst videoId = computed(() => getYouTubeVideoId(props.lesson.youtube_url));\r\n\r\n// --- Image Error Handler ---\r\nconst handleImageError = () => {\r\n  console.warn(`Failed to load YouTube thumbnail for video ID: ${videoId.value}`);\r\n  imageError.value = true; // Set error state to true to hide the broken image\r\n};\r\n\r\n</script>\r\n\r\n<style scoped>\r\n/* Ensure line-clamp plugin styles are available */\r\n/* You might not need these if the plugin is configured correctly */\r\n/*\r\n.line-clamp-2 {\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  overflow: hidden;\r\n}\r\n.line-clamp-3 {\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 3;\r\n  -webkit-box-orient: vertical;\r\n  overflow: hidden;\r\n}\r\n*/\r\n</style>"],"version":3}