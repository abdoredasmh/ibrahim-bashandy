{"file":"AdminLessonModal.vue2.mjs","mappings":";;;;;;;;;;;;;;AA2JA,UAAM,QAAQ;AAKd,UAAM,OAAO;AAGb,UAAM,WAAW,kBAA4B;AAGvC,UAAA,WAAW,IAAI,KAAK;AACpB,UAAA,eAAe,IAAmB,IAAI;AAC5C,UAAM,mBAAmB,SAAS,EAAE,OAAO,IAAI,aAAa,IAAI;AAGhE,UAAM,OAAO,IAAqB;AAAA,MAC9B,OAAO;AAAA,MACP,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,WAAW;AAAA,MACX,eAAe;AAAA,MACf,cAAc;AAAA,IAAA,CACjB;AAGK,UAAA,aAAa,IAAgB,EAAE;AAC/B,UAAA,UAAU,IAAc,EAAE;AAC1B,UAAA,gBAAgB,IAAoB,EAAE;AACtC,UAAA,oBAAoB,IAAI,KAAK;AAC7B,UAAA,iBAAiB,IAAI,KAAK;AAC1B,UAAA,iBAAiB,IAAI,KAAK;AAC1B,UAAA,eAAe,IAAmB,IAAI;AAG5C,UAAM,YAAY,SAAS,MAAA;;AAAM,cAAC,GAAC,WAAM,eAAN,mBAAkB;AAAA,KAAE;AAKvD,mBAAe,mBAAmB,UAAqC;AACrE,UAAI,CAAC,UAAU;AACb,sBAAc,QAAQ,CAAC;AACvB,uBAAe,QAAQ;AACvB,qBAAa,QAAQ;AACrB,gBAAQ,IAAI,0CAA0C;AACtD;AAAA,MAAA;AAEM,cAAA,IAAI,mCAAmC,QAAQ,EAAE;AACzD,qBAAe,QAAQ;AACvB,mBAAa,QAAQ;AACrB,oBAAc,QAAQ,CAAC;AACnB,UAAA;AACI,cAAA,EAAE,MAAM,UAAU,MAAM,SAC3B,KAAK,gBAAgB,EACrB,OAAO,0BAA0B,EACjC,GAAG,aAAa,QAAQ,EACxB,MAAM,iBAAiB,EAAE,WAAW,MAAM;AAC7C,YAAI,MAAa,OAAA;AACH,sBAAA,QAAQ,QAAQ,CAAC;AAC/B,gBAAQ,IAAI,WAAW,cAAc,MAAM,MAAM,uBAAuB,QAAQ,EAAE;AAAA,eAC3E,KAAU;AACjB,gBAAQ,MAAM,qCAAqC,QAAQ,KAAK,GAAG;AACtD,qBAAA,QAAQ,IAAI,WAAW;AAAA,MAAA,UACpC;AACA,uBAAe,QAAQ;AAAA,MAAA;AAAA,IACzB;AAII,UAAA,YAAY,CAAC,kBAAiC,SAAS;AACjD,cAAA,IAAI,sCAAsC,eAAe;AACjE,WAAK,QAAQ;AAAA,QACT,OAAO;AAAA,QACP,aAAa;AAAA,QACb,aAAa;AAAA,QACb,aAAa;AAAA,QACb,WAAW;AAAA;AAAA,QACX,eAAe;AAAA,QACf,cAAc;AAAA,MAClB;AACA,mBAAa,QAAQ;AACrB,uBAAiB,QAAQ;AACzB,uBAAiB,cAAc;AAC/B,oBAAc,QAAQ,CAAC;AACvB,qBAAe,QAAQ;AACvB,mBAAa,QAAQ;AAGrB,UAAI,iBAAiB;AACjB,2BAAmB,eAAe;AAAA,MAAA;AAAA,IAE1C;AAGA,mBAAe,0BAA0B;AAEhC,UAAA,WAAW,MAAM,SAAS,KAAK,QAAQ,MAAM,SAAS,KAAM,kBAAkB,SAAS,eAAe,OAAO;AAChH,gBAAQ,IAAI,uEAAuE;AACnF;AAAA,MAAA;AAGF,cAAQ,IAAI,uCAAuC;AACnD,wBAAkB,QAAQ;AAC1B,qBAAe,QAAQ;AAEvB,mBAAa,QAAQ;AACjB,UAAA;AACA,cAAM,CAAC,WAAW,YAAY,IAAI,MAAM,QAAQ,IAAI;AAAA,UAChD,SAAS,KAAK,YAAY,EAAE,OAAO,UAAU,EAAE,MAAM,MAAM;AAAA,UAC3D,SAAS,KAAK,eAAe,EAAE,OAAO,WAAW,EAAE,MAAM,OAAO;AAAA,QAAA,CACnE;AACG,YAAA,UAAU,MAAa,OAAA,IAAI,MAAM,qBAAqB,UAAU,MAAM,OAAO,EAAE;AACxE,mBAAA,QAAQ,UAAU,QAAQ,CAAC;AAClC,YAAA,aAAa,MAAa,OAAA,IAAI,MAAM,sBAAsB,aAAa,MAAM,OAAO,EAAE;AAClF,gBAAA,QAAQ,aAAa,QAAQ,CAAC;AAC9B,gBAAA,IAAI,6BAA6B,WAAW,MAAM,MAAM,gBAAgB,QAAQ,MAAM,MAAM,kBAAkB;AAAA,eACjH,KAAU;AACP,gBAAA,MAAM,qCAAqC,GAAG;AAEtD,mBAAW,QAAQ,CAAC;AACpB,gBAAQ,QAAQ,CAAC;AACJ,qBAAA,QAAQ,IAAI,WAAW;AAAA,MAAA,UACtC;AACE,0BAAkB,QAAQ;AAC1B,uBAAe,QAAQ;AAAA,MAAA;AAAA,IAC3B;AAIJ,aAAS,qBAAqB;AACtB,YAAA,mBAAmB,KAAK,MAAM;AAC5B,cAAA,IAAI,sBAAsB,gBAAgB;AAElD,WAAK,MAAM,gBAAgB;AAC3B,WAAK,MAAM,eAAe;AAE1B,yBAAmB,gBAAgB;AAAA,IAAA;AAOrC,UAAM,MAAM,MAAM,MAAM,CAAC,QAAQ,WAAW;;AACpC,UAAA,UAAU,CAAC,QAAQ;AACnB,gBAAQ,IAAI,2DAA2D;AAC/C,gCAAA;AAGpB,aAAA,WAAM,eAAN,mBAAkB,IAAI;AACtB,kBAAQ,IAAI,4CAA4C;AAElD,gBAAA,EAAE,IAAI,OAAO,aAAa,aAAa,aAAa,WAAW,eAAe,aAAa,IAAI,MAAM;AACtG,eAAA,QAAQ,EAAE,IAAI,OAAO,aAAa,aAAa,aAAa,WAAW,eAAe,aAAa;AAExG,cAAI,WAAW;AACX,+BAAmB,SAAS;AAAA,UAAA,OACzB;AACH,0BAAc,QAAQ,CAAC;AAAA,UAAA;AAAA,QAC3B,OACG;AACK,kBAAA,IAAI,+DAA+D,MAAM,mBAAmB;AAC1F,oBAAA,MAAM,uBAAuB,IAAI;AAAA,QAAA;AAG/C,qBAAa,QAAQ;AACrB,yBAAiB,QAAQ;AACzB,yBAAiB,cAAc;AAAA,MAAA,WACxB,CAAC,UAAU,QAAQ;AAEzB,gBAAQ,IAAI,eAAe;AAAA,MAAA;AAAA,IAChC,GACD,EAAE,WAAW,MAAM;AAKtB,aAAS,aAAa;AAAE,UAAI,CAAC,SAAS,MAAO,MAAK,OAAO;AAAA,IAAA;AAEzD,UAAM,eAAe,MAAe;;AAChC,UAAI,UAAU;AACd,uBAAiB,QAAQ;AACzB,uBAAiB,cAAc;AAC/B,mBAAa,QAAQ;AACrB,UAAI,GAAC,UAAK,MAAM,UAAX,mBAAkB,SAAQ;AAAE,yBAAiB,QAAQ;AAAgC,kBAAA;AAAA,MAAA;AAC1F,UAAI,GAAC,UAAK,MAAM,gBAAX,mBAAwB,SAAQ;AAAE,yBAAiB,cAAc;AAAoC,kBAAA;AAAA,MAAA,OACrG;AAAM,YAAA;AAAE,gBAAM,MAAM,IAAI,IAAI,KAAK,MAAM,WAAW;AAAO,cAAA,CAAC,CAAC,mBAAmB,eAAe,UAAU,EAAE,SAAS,IAAI,QAAQ,GAAG;AAAE,6BAAiB,cAAc;AAAmC,sBAAA;AAAA,UAAA;AAAA,iBAAkB,GAAG;AAAE,2BAAiB,cAAc;AAAoC,oBAAA;AAAA,QAAA;AAAA,MAAO;AACpS,aAAA;AAAA,IACX;AAEA,mBAAe,aAAa;;AAC1B,cAAQ,IAAI,8BAA8B;AACtC,UAAA,CAAC,gBAAgB;AAAE,gBAAQ,IAAI,oBAAoB;AAAG;AAAA,MAAA;AAE1D,eAAS,QAAQ;AACjB,mBAAa,QAAQ;AAGrB,YAAM,gBAA4E;AAAA,QAChF,OAAO,KAAK,MAAM;AAAA,QAClB,eAAa,UAAK,MAAM,gBAAX,mBAAwB,WAAU;AAAA,QAC/C,aAAa,KAAK,MAAM;AAAA,QACxB,aAAa,KAAK,MAAM,cAAc,OAAO,KAAK,MAAM,WAAW,IAAI;AAAA,QACvE,WAAW,KAAK,MAAM,YAAY,OAAO,KAAK,MAAM,SAAS,IAAI;AAAA;AAAA,QAEjE,eAAe,KAAK,MAAM,YAAa,KAAK,MAAM,gBAAgB,OAAO,KAAK,MAAM,aAAa,IAAI,OAAQ;AAAA,QAC7G,cAAc,KAAK,MAAM,YAAa,KAAK,MAAM,eAAe,OAAO,KAAK,MAAM,YAAY,IAAI,OAAQ;AAAA,MAC5G;AAGI,UAAA,cAAc,cAAc,MAAM;AAClC,sBAAc,gBAAgB;AAC9B,sBAAc,eAAe;AAAA,MAAA;AAGjC,cAAQ,IAAI,oBAAoB,KAAK,UAAU,eAAe,MAAM,CAAC,CAAC;AAElE,UAAA;AACF,YAAI,QAAa;AACjB,YAAI,OAAY;AAEhB,YAAI,UAAU,SAAS,KAAK,MAAM,IAAI;AACnC,kBAAQ,IAAI,oCAAoC,KAAK,MAAM,EAAE,EAAE;AAE/D,gBAAM,EAAE,IAAI,GAAG,WAAA,IAAe;AAC9B,gBAAM,SAAS,MAAM,SAAS,KAAK,SAAS,EACzC,OAAO,UAAqC,EAC5C,GAAG,MAAM,KAAK,MAAM,EAAE,EACtB,OAAO;AACV,kBAAQ,OAAO;AAAO,iBAAO,OAAO;AAAA,QAAA,OAChC;AACL,kBAAQ,IAAI,kCAAkC;AACxC,gBAAA,SAAS,MAAM,SAAS,KAAK,SAAS,EACzC,OAAO,aAAwC,EAC/C,OAAO;AACV,kBAAQ,OAAO;AAAO,iBAAO,OAAO;AAAA,QAAA;AAGtC,gBAAQ,IAAI,4BAA4B,KAAK,UAAU,OAAO,MAAM,CAAC,CAAC;AACtE,gBAAQ,IAAI,2BAA2B,KAAK,UAAU,MAAM,MAAM,CAAC,CAAC;AAEpE,YAAI,MAAa,OAAA;AAEjB,gBAAQ,IAAI,wCAAwC;AACpD,aAAK,OAAO;AACD,mBAAA;AAAA,eAEJ,KAAU;AACjB,gBAAQ,MAAM,gCAAgC,KAAK,UAAU,KAAK,MAAM,CAAC,CAAC;AAEzE,aAAI,SAAI,YAAJ,mBAAa,SAAS,oCAAoC;AACzD,uBAAa,QAAQ;AAAA,QAAA,WACf,IAAI,SAAS,SAAS;AAChB,uBAAA,QAAQ,cAAc,IAAI,OAAO;AAAA,QAAA,OAC3C;AACH,uBAAa,QAAQ,kBAAkB,IAAI,WAAW,eAAe;AAAA,QAAA;AAAA,MACzE,UACD;AACA,iBAAS,QAAQ;AACjB,gBAAQ,IAAI,sBAAsB;AAAA,MAAA;AAAA,IACpnames":[],"sources":["../../../../../components/admin/AdminLessonModal.vue"],"sourcesContent":["<!-- components/admin/AdminLessonModal.vue -->\r\n<template>\r\n  <TransitionRoot appear :show=\"show\" as=\"template\">\r\n    <Dialog as=\"div\" @close=\"closeModal\" class=\"relative z-50\">\r\n\r\n      <!-- Backdrop -->\r\n      <TransitionChild\r\n        as=\"div\"\r\n        class=\"fixed inset-0 bg-black/30 backdrop-blur-sm\"\r\n        enter=\"duration-300 ease-out\" enter-from=\"opacity-0\" enter-to=\"opacity-100\"\r\n        leave=\"duration-200 ease-in\" leave-from=\"opacity-100\" leave-to=\"opacity-0\"\r\n      />\r\n\r\n      <!-- Full-screen container -->\r\n      <div class=\"fixed inset-0 overflow-y-auto\">\r\n        <div class=\"flex min-h-full items-center justify-center p-4 text-center\">\r\n\r\n          <!-- Modal panel -->\r\n          <TransitionChild as=\"template\" enter=\"duration-300 ease-out\" enter-from=\"opacity-0 scale-95\" enter-to=\"opacity-100 scale-100\" leave=\"duration-200 ease-in\" leave-from=\"opacity-100 scale-100\" leave-to=\"opacity-0 scale-95\">\r\n            <DialogPanel class=\"w-full max-w-2xl transform overflow-hidden rounded-2xl bg-white dark:bg-gray-800 p-6 text-right shadow-xl transition-all\">\r\n              <DialogTitle as=\"h3\" class=\"admin-modal-title\">\r\n                {{ isEditing ? 'تعديل الدرس' : 'إضافة درس جديد' }}\r\n              </DialogTitle>\r\n\r\n              <form @submit.prevent=\"saveLesson\" class=\"space-y-4\">\r\n\r\n                <!-- Title Field -->\r\n                <div>\r\n                  <label for=\"title\" class=\"admin-label\">العنوان *</label>\r\n                  <input type=\"text\" id=\"title\" v-model=\"form.title\" required class=\"admin-input\" aria-describedby=\"title-error\"/>\r\n                  <p v-if=\"validationErrors.title\" class=\"form-error\" id=\"title-error\">{{ validationErrors.title }}</p>\r\n                </div>\r\n\r\n                <!-- Description Field -->\r\n                <div>\r\n                  <label for=\"description\" class=\"admin-label\">الوصف</label>\r\n                  <textarea id=\"description\" rows=\"4\" v-model=\"form.description\" class=\"admin-textarea\"></textarea>\r\n                </div>\r\n\r\n                <!-- YouTube URL Field -->\r\n                <div>\r\n                   <label for=\"youtube_url\" class=\"admin-label\">رابط يوتيوب *</label>\r\n                   <input type=\"url\" id=\"youtube_url\" v-model=\"form.youtube_url\" required placeholder=\"https://...\" class=\"admin-input\" aria-describedby=\"youtube-error\"/>\r\n                   <p v-if=\"validationErrors.youtube_url\" class=\"form-error\" id=\"youtube-error\">{{ validationErrors.youtube_url }}</p>\r\n                </div>\r\n\r\n                 <!-- Category Select Field -->\r\n                  <div>\r\n                      <label for=\"category_id\" class=\"admin-label\">الفئة</label>\r\n                       <div v-if=\"loadingCategories\" class=\"form-loading-text\">جار تحميل الفئات...</div>\r\n                      <select v-else id=\"category_id\" v-model=\"form.category_id\" class=\"admin-select\">\r\n                          <option :value=\"null\">-- اختر فئة (اختياري) --</option>\r\n                          <option v-for=\"cat in categories\" :key=\"cat.id\" :value=\"cat.id\">{{ cat.name }}</option>\r\n                          <option v-if=\"!loadingCategories && categories.length === 0\" disabled>-- لا توجد فئات متاحة --</option>\r\n                      </select>\r\n                  </div>\r\n\r\n                  <!-- Course Select Field -->\r\n                   <div>\r\n                       <label for=\"course_id\" class=\"admin-label\">الدورة الدراسية (اختياري)</label>\r\n                       <div v-if=\"loadingCourses\" class=\"form-loading-text\">جار تحميل الدورات...</div>\r\n                       <select\r\n                           v-else\r\n                           id=\"course_id\"\r\n                           v-model=\"form.course_id\"\r\n                           @change=\"handleCourseChange\"\r\n                           class=\"admin-select\"\r\n                       >\r\n                           <option :value=\"null\">-- درس عام (لا يتبع دورة) --</option>\r\n                           <option v-for=\"course in courses\" :key=\"course.id\" :value=\"course.id\">\r\n                               {{ course.title }}\r\n                           </option>\r\n                            <option v-if=\"!loadingCourses && courses.length === 0\" disabled>-- لا توجد دورات متاحة --</option>\r\n                       </select>\r\n                   </div>\r\n\r\n                 <!-- =========================================== -->\r\n                 <!-- Module & Order Fields (Conditional on Course) -->\r\n                 <!-- =========================================== -->\r\n                  <div v-if=\"form.course_id\" class=\"space-y-4 mt-4 pt-4 border-t border-gray-200 dark:border-gray-700\">\r\n                    \r\n                      <div>\r\n                          <label for=\"module_number\" class=\"admin-label\">الوحدة داخل الدورة</label>\r\n                           <div v-if=\"loadingModules\" class=\"form-loading-text\">جار تحميل الوحدات...</div>\r\n                           <p v-else-if=\"!loadingModules && courseModules.length === 0 && !modulesError\" class=\"form-hint bg-yellow-50 dark:bg-yellow-900/30 p-2 rounded border border-yellow-200 dark:border-yellow-700\">\r\n                               لم يتم تعريف وحدات لهذه الدورة بعد. يمكنك إضافتها من شاشة \"تعديل الدورة\".\r\n                           </p>\r\n                           <p v-else-if=\"modulesError\" class=\"form-error bg-red-100 dark:bg-red-900/30 p-2 rounded\">خطأ تحميل الوحدات: {{ modulesError }}</p>\r\n                          <select\r\n                              v-else-if=\"courseModules.length > 0\"\r\n                              id=\"module_number\"\r\n                              v-model.number=\"form.module_number\" \r\n                              class=\"admin-select\"\r\n                          >\r\n                              <option :value=\"null\">-- درس بدون وحدة (عام داخل الدورة) --</option>\r\n                              <option v-for=\"module in courseModules\" :key=\"module.module_number\" :value=\"module.module_number\">\r\n                                  #{{ module.module_number }} - {{ module.title }}\r\n                              </option>\r\n                          </select>\r\n                          <!-- Placeholder if no modules and not loading/error -->\r\n                          <div v-else-if=\"!loadingModules && courseModules.length === 0\" class=\"admin-input bg-gray-100 dark:bg-gray-600 cursor-not-allowed italic text-gray-500 dark:text-gray-400\">لا توجد وحدات</div>\r\n                      </div>\r\n\r\n                      <!-- Lesson Order Field -->\r\n                      <div>\r\n                          <label for=\"lesson_order\" class=\"admin-label\">ترتيب الدرس</label>\r\n                          <input\r\n                              type=\"number\" id=\"lesson_order\" v-model.number=\"form.lesson_order\" min=\"1\"\r\n                              class=\"admin-input\"\r\n                              placeholder=\"اتركه فارغًا للترتيب التلقائي/الأخير\"\r\n                          />\r\n                          <p class=\"form-hint\">\r\n                              ترتيب الدرس {{ form.module_number ? `داخل الوحدة #${form.module_number}` : 'العام داخل الدورة' }}. (مثال: 1 هو الأول)\r\n                          </p>\r\n                      </div>\r\n                  </div>\r\n                 <!-- =========================================== -->\r\n                 <!-- End Module & Order Fields                  -->\r\n                 <!-- =========================================== -->\r\n\r\n                <!-- General Error Message -->\r\n                <p v-if=\"errorMessage\" class=\"form-error p-2 bg-red-100 dark:bg-red-900/30 rounded\">\r\n                  خطأ: {{ errorMessage }}\r\n                </p>\r\n\r\n                <!-- Action Buttons -->\r\n                <div class=\"mt-6 pt-4 border-t dark:border-gray-700 flex justify-end space-x-3 rtl:space-x-reverse\">\r\n                    <button type=\"button\" @click=\"closeModal\" class=\"button-secondary\">إلغاء</button>\r\n                    <button type=\"submit\" :disabled=\"isSaving || loadingCategories || loadingCourses || loadingModules\" class=\"button-primary\">\r\n                       <svg v-if=\"isSaving\" class=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"><circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle><path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path></svg>\r\n                      {{ isSaving ? 'جاري الحفظ...' : (isEditing ? 'حفظ التعديلات' : 'إضافة الدرس') }}\r\n                    </button>\r\n                </div>\r\n              </form>\r\n            </DialogPanel>\r\n          </TransitionChild>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  </TransitionRoot>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, watch, computed, reactive } from 'vue';\r\nimport { TransitionRoot, TransitionChild, Dialog, DialogPanel, DialogTitle } from '@headlessui/vue';\r\nimport type { Database, Tables, TablesInsert, TablesUpdate } from '~/types/database.types';\r\nimport { useSupabaseClient } from '#imports';\r\n\r\n// Define Types\r\ntype Lesson = Tables<'lessons'>;\r\ntype Category = Pick<Tables<'categories'>, 'id' | 'name'>;\r\ntype Course = Pick<Tables<'study_courses'>, 'id' | 'title'>;\r\ntype CourseModule = Pick<Tables<'course_modules'>, 'id' | 'title' | 'module_number'>;\r\n\r\n// Props and Emits\r\nconst props = defineProps<{\r\n  show: boolean;\r\n  lessonData: Lesson | null;\r\n  preselectedCourseId?: number | null;\r\n}>();\r\nconst emit = defineEmits(['close', 'saved']);\r\n\r\n// Supabase Client\r\nconst supabase = useSupabaseClient<Database>();\r\n\r\n// Component State\r\nconst isSaving = ref(false);\r\nconst errorMessage = ref<string | null>(null);\r\nconst validationErrors = reactive({ title: '', youtube_url: '' });\r\n\r\n// Form State - Initialize with potential fields\r\nconst form = ref<Partial<Lesson>>({\r\n    title: '',\r\n    description: null,\r\n    youtube_url: '',\r\n    category_id: null,\r\n    course_id: null,\r\n    module_number: null,\r\n    lesson_order: null,\r\n});\r\n\r\n// Dropdown State\r\nconst categories = ref<Category[]>([]);\r\nconst courses = ref<Course[]>([]);\r\nconst courseModules = ref<CourseModule[]>([]);\r\nconst loadingCategories = ref(false);\r\nconst loadingCourses = ref(false);\r\nconst loadingModules = ref(false);\r\nconst modulesError = ref<string | null>(null);\r\n\r\n// Computed Properties\r\nconst isEditing = computed(() => !!props.lessonData?.id);\r\n\r\n// --- Helper Functions ---\r\n\r\n// Fetch course modules based on course ID\r\nasync function fetchCourseModules(courseId: number | null | undefined) {\r\n  if (!courseId) {\r\n    courseModules.value = [];\r\n    loadingModules.value = false;\r\n    modulesError.value = null;\r\n    console.log(\"No course ID provided, clearing modules.\");\r\n    return;\r\n  }\r\n  console.log(`Fetching modules for course ID: ${courseId}`);\r\n  loadingModules.value = true;\r\n  modulesError.value = null;\r\n  courseModules.value = []; // Clear previous modules\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('course_modules')\r\n      .select('id, title, module_number')\r\n      .eq('course_id', courseId)\r\n      .order('module_number', { ascending: true });\r\n    if (error) throw error;\r\n    courseModules.value = data || [];\r\n    console.log(`Fetched ${courseModules.value.length} modules for course ${courseId}`);\r\n  } catch (err: any) {\r\n    console.error(`Error fetching modules for course ${courseId}:`, err);\r\n    modulesError.value = err.message || \"فشل تحميل وحدات الدورة.\";\r\n  } finally {\r\n    loadingModules.value = false;\r\n  }\r\n}\r\n\r\n// Reset form fields\r\nconst resetForm = (initialCourseId: number | null = null) => {\r\n    console.log(\"Resetting form. Initial Course ID:\", initialCourseId);\r\n    form.value = {\r\n        title: '',\r\n        description: null,\r\n        youtube_url: '',\r\n        category_id: null,\r\n        course_id: initialCourseId, // Use the passed or default null\r\n        module_number: null,\r\n        lesson_order: null,\r\n    };\r\n    errorMessage.value = null;\r\n    validationErrors.title = '';\r\n    validationErrors.youtube_url = '';\r\n    courseModules.value = []; // Clear modules list on reset\r\n    loadingModules.value = false;\r\n    modulesError.value = null;\r\n\r\n    // If there's an initial course ID, fetch its modules\r\n    if (initialCourseId) {\r\n        fetchCourseModules(initialCourseId);\r\n    }\r\n};\r\n\r\n// Fetch static dropdown data (Categories and Courses)\r\nasync function fetchStaticDropdownData() {\r\n    // Prevent refetching if already loading or data exists (optional optimization)\r\n    if ((categories.value.length > 0 && courses.value.length > 0) || loadingCategories.value || loadingCourses.value) {\r\n      console.log('[fetchStaticDropdownData] Skipping fetch (already loaded or loading).');\r\n      return;\r\n    }\r\n\r\n    console.log('[fetchStaticDropdownData] Starting...');\r\n    loadingCategories.value = true;\r\n    loadingCourses.value = true;\r\n    // Clear previous errors if any\r\n    errorMessage.value = null;\r\n    try {\r\n        const [catResult, courseResult] = await Promise.all([\r\n            supabase.from('categories').select('id, name').order('name'),\r\n            supabase.from('study_courses').select('id, title').order('title')\r\n        ]);\r\n        if (catResult.error) throw new Error(`فشل تحميل الفئات: ${catResult.error.message}`);\r\n        categories.value = catResult.data ?? [];\r\n        if (courseResult.error) throw new Error(`فشل تحميل الدورات: ${courseResult.error.message}`);\r\n        courses.value = courseResult.data ?? [];\r\n        console.log(`[fetchStaticDropdownData] ${categories.value.length} categories, ${courses.value.length} courses loaded.`);\r\n    } catch (err: any) {\r\n        console.error(\"Error in fetchStaticDropdownData:\", err);\r\n        // Keep existing data if fetch fails partially? Or clear all? Clearing is safer.\r\n        categories.value = [];\r\n        courses.value = [];\r\n        errorMessage.value = err.message || \"فشل تحميل بيانات القوائم.\";\r\n    } finally {\r\n        loadingCategories.value = false;\r\n        loadingCourses.value = false;\r\n    }\r\n}\r\n\r\n// Handler for when the selected course changes\r\nfunction handleCourseChange() {\r\n  const selectedCourseId = form.value.course_id;\r\n  console.log(\"Course changed to:\", selectedCourseId);\r\n  // Reset module and order specifically when course changes\r\n  form.value.module_number = null;\r\n  form.value.lesson_order = null;\r\n  // Fetch modules for the newly selected course (or clear if null)\r\n  fetchCourseModules(selectedCourseId);\r\n}\r\n\r\n\r\n// --- Watchers ---\r\n\r\n// Watch props.show: Fetch static data and initialize form when modal opens\r\nwatch(() => props.show, (newVal, oldVal) => {\r\n    if (newVal && !oldVal) { // Only trigger when opening\r\n        console.log(\"Modal opened. Fetching static data and initializing form.\");\r\n        fetchStaticDropdownData(); // Fetch categories & courses\r\n\r\n        // Initialize form based on props\r\n        if (props.lessonData?.id) { // Editing\r\n            console.log(\"Watcher (show=true): Initializing for edit\");\r\n            // Populate form directly from lessonData prop\r\n            const { id, title, description, youtube_url, category_id, course_id, module_number, lesson_order } = props.lessonData;\r\n            form.value = { id, title, description, youtube_url, category_id, course_id, module_number, lesson_order };\r\n            // Fetch modules if editing a lesson linked to a course\r\n            if (course_id) {\r\n                fetchCourseModules(course_id);\r\n            } else {\r\n                courseModules.value = []; // Clear modules if not linked\r\n            }\r\n        } else { // Adding\r\n            console.log(\"Watcher (show=true): Initializing for add with preselected:\", props.preselectedCourseId);\r\n            resetForm(props.preselectedCourseId ?? null); // Reset with potential preselected course\r\n        }\r\n        // Clear previous errors\r\n        errorMessage.value = null;\r\n        validationErrors.title = '';\r\n        validationErrors.youtube_url = '';\r\n    } else if (!newVal && oldVal) {\r\n        // Optional: Cleanup or reset state when modal closes if needed\r\n         console.log(\"Modal closed.\");\r\n    }\r\n}, { immediate: true }); // immediate: true ensures initialization on mount if show is initially true\r\n\r\n\r\n// --- Form Actions ---\r\n\r\nfunction closeModal() { if (!isSaving.value) emit('close'); }\r\n\r\nconst validateForm = (): boolean => {\r\n    let isValid = true;\r\n    validationErrors.title = '';\r\n    validationErrors.youtube_url = '';\r\n    errorMessage.value = null;\r\n    if (!form.value.title?.trim()) { validationErrors.title = 'حقل العنوان مطلوب.'; isValid = false; }\r\n    if (!form.value.youtube_url?.trim()) { validationErrors.youtube_url = 'حقل رابط يوتيوب مطلوب.'; isValid = false; }\r\n    else { try { const url = new URL(form.value.youtube_url); if (!['www.youtube.com', 'youtube.com', 'youtu.be'].includes(url.hostname)) { validationErrors.youtube_url = 'رابط يوتيوب غير صالح.'; isValid = false; } } catch (_) { validationErrors.youtube_url = 'صيغة الرابط غير صحيحة.'; isValid = false; } }\r\n    return isValid;\r\n};\r\n\r\nasync function saveLesson() {\r\n  console.log('Attempting to save lesson...');\r\n  if (!validateForm()) { console.log('Validation failed.'); return; }\r\n\r\n  isSaving.value = true;\r\n  errorMessage.value = null;\r\n\r\n  // Prepare data payload\r\n  const lessonPayload: Partial<TablesInsert<'lessons'> | TablesUpdate<'lessons'>> = {\r\n    title: form.value.title!,\r\n    description: form.value.description?.trim() || null,\r\n    youtube_url: form.value.youtube_url!,\r\n    category_id: form.value.category_id ? Number(form.value.category_id) : null,\r\n    course_id: form.value.course_id ? Number(form.value.course_id) : null,\r\n    // Only include module/order if a course is selected\r\n    module_number: form.value.course_id ? (form.value.module_number ? Number(form.value.module_number) : null) : null,\r\n    lesson_order: form.value.course_id ? (form.value.lesson_order ? Number(form.value.lesson_order) : null) : null,\r\n  };\r\n\r\n  // Ensure module/order are null if no course_id\r\n  if (lessonPayload.course_id === null) {\r\n      lessonPayload.module_number = null;\r\n      lessonPayload.lesson_order = null;\r\n  }\r\n\r\n  console.log('Payload to send:', JSON.stringify(lessonPayload, null, 2));\r\n\r\n  try {\r\n    let error: any = null;\r\n    let data: any = null;\r\n\r\n    if (isEditing.value && form.value.id) {\r\n       console.log(`Attempting UPDATE for lesson ID: ${form.value.id}`);\r\n       // Exclude 'id' from the payload for update operation\r\n       const { id, ...updateData } = lessonPayload;\r\n       const result = await supabase.from('lessons')\r\n         .update(updateData as TablesUpdate<'lessons'>) // Use the payload without id\r\n         .eq('id', form.value.id)\r\n         .select();\r\n       error = result.error; data = result.data;\r\n    } else {\r\n      console.log('Attempting INSERT for new lesson');\r\n      const result = await supabase.from('lessons')\r\n        .insert(lessonPayload as TablesInsert<'lessons'>) // Payload is ready for insert\r\n        .select();\r\n      error = result.error; data = result.data;\r\n    }\r\n\r\n    console.log('Supabase response error:', JSON.stringify(error, null, 2));\r\n    console.log('Supabase response data:', JSON.stringify(data, null, 2));\r\n\r\n    if (error) throw error;\r\n\r\n    console.log('Save successful, emitting saved event.');\r\n    emit('saved'); // Emit event to parent component\r\n    closeModal(); // Close the modal on successful save\r\n\r\n  } catch (err: any) {\r\n    console.error('Error during save operation:', JSON.stringify(err, null, 2));\r\n     // Handle specific errors if needed\r\n     if (err.message?.includes('violates foreign key constraint')) {\r\n          errorMessage.value = 'فشل الحفظ: الفئة أو الدورة المحددة غير موجودة.';\r\n     } else if (err.code === '23505') {\r\n         errorMessage.value = `فشل الحفظ: ${err.message}`;\r\n     } else {\r\n         errorMessage.value = `فشل حفظ الدرس: ${err.message || 'خطأ غير متوقع'}`;\r\n     }\r\n  } finally {\r\n    isSaving.value = false;\r\n    console.log('saveLesson finished.');\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n/* Using consistent admin styles */\r\n.admin-modal-title { @apply text-lg font-medium leading-6 text-gray-900 dark:text-gray-100 border-b pb-3 mb-4 dark:border-gray-700; }\r\n.admin-label { @apply block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1; }\r\n.admin-input, .admin-select, .admin-textarea {\r\n     @apply mt-1 block w-full px-3 py-2 text-sm rounded-lg shadow-sm\r\n            border border-gray-300 dark:border-gray-600\r\n            bg-gray-50 dark:bg-gray-700\r\n            text-gray-900 dark:text-gray-100\r\n            placeholder-gray-400 dark:placeholder-gray-500\r\n            focus:ring-2 focus:ring-offset-1 focus:ring-offset-white dark:focus:ring-offset-gray-800\r\n            focus:ring-primary focus:border-primary /* Use primary color for focus */\r\n            focus:outline-none;\r\n}\r\n.admin-textarea { @apply min-h-[80px]; }\r\n.form-hint { @apply mt-1 text-xs text-gray-500 dark:text-gray-400; }\r\n.form-error { @apply mt-1 text-xs text-red-500 dark:text-red-400; }\r\n.form-loading-text { @apply mt-1 text-sm text-gray-500 dark:text-gray-400 italic; }\r\n\r\n.button-base { @apply inline-flex items-center justify-center px-4 py-2 border text-sm font-medium rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-offset-2 dark:focus:ring-offset-gray-800 disabled:opacity-60 disabled:cursor-not-allowed transition-colors duration-150; }\r\n.button-primary { @apply button-base border-transparent text-white bg-primary hover:bg-opacity-85 focus:ring-primary; }\r\n.button-secondary { @apply button-base border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-200 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600 focus:ring-blue-muted; }\r\n\r\n</style>"],"version":3}