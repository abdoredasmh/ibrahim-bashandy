{"version":3,"file":"AddEditQuestionModal.vue2.mjs","sources":["../../../../../components/admin/AddEditQuestionModal.vue"],"sourcesContent":["<template>\r\n  <TransitionRoot appear :show=\"isOpen\" as=\"template\">\r\n    <Dialog as=\"div\" @close=\"closeModal\" class=\"relative z-50\">\r\n\r\n      <TransitionChild as=\"template\" enter=\"duration-300 ease-out\" enter-from=\"opacity-0\" enter-to=\"opacity-100\" leave=\"duration-200 ease-in\" leave-from=\"opacity-100\" leave-to=\"opacity-0\">\r\n        <div class=\"fixed inset-0 bg-black/50 backdrop-blur-sm\" aria-hidden=\"true\" />\r\n      </TransitionChild>\r\n\r\n \r\n      <div class=\"fixed inset-0 overflow-y-auto\">\r\n        <div class=\"flex min-h-full items-center justify-center p-4 text-center\">\r\n          <TransitionChild as=\"template\" enter=\"duration-300 ease-out\" enter-from=\"opacity-0 scale-95\" enter-to=\"opacity-100 scale-100\" leave=\"duration-200 ease-in\" leave-from=\"opacity-100 scale-100\" leave-to=\"opacity-0 scale-95\">\r\n            <DialogPanel class=\"w-full max-w-3xl transform overflow-hidden rounded-lg bg-white dark:bg-gray-800 p-6 text-right shadow-xl transition-all\">\r\n              <DialogTitle as=\"h3\" class=\"text-lg font-semibold leading-6 text-gray-900 dark:text-gray-100 mb-4 border-b dark:border-gray-700 pb-3\">\r\n                {{ isEditing ? 'تعديل السؤال' : 'إضافة سؤال جديد' }} للاختبار\r\n              </DialogTitle>\r\n\r\n              <form @submit.prevent=\"saveQuestion\" class=\"space-y-6\">\r\n           \r\n                <div>\r\n                  <label for=\"question-text\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">نص السؤال *</label>\r\n                  <textarea id=\"question-text\" v-model=\"form.question_text\" required rows=\"4\" class=\"mt-1 block w-full input-field\"></textarea>\r\n                </div>\r\n\r\n            \r\n                <div class=\"grid grid-cols-1 sm:grid-cols-3 gap-4\">\r\n                  <div>\r\n                    <label for=\"question-type\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">نوع السؤال *</label>\r\n                    <select id=\"question-type\" v-model=\"form.type\" required @change=\"resetOptionsBasedOnType\" class=\"mt-1 block w-full input-field\">\r\n                      <option value=\"mcq\">اختيار من متعدد (MCQ)</option>\r\n                      <option value=\"true_false\">صح / خطأ (T/F)</option>\r\n                      <option value=\"written\">كتابي (Written)</option>\r\n                    </select>\r\n                  </div>\r\n                  <div>\r\n                    <label for=\"question-points\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">النقاط *</label>\r\n                    <input type=\"number\" id=\"question-points\" v-model.number=\"form.points\" required min=\"0\" class=\"mt-1 block w-full input-field\" />\r\n                  </div>\r\n                  <div>\r\n                    <label for=\"question-order\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">ترتيب السؤال</label>\r\n                    <input type=\"number\" id=\"question-order\" v-model.number=\"form.question_order\" min=\"1\" placeholder=\"اختياري\" class=\"mt-1 block w-full input-field\" />\r\n                  </div>\r\n                </div>\r\n\r\n             \r\n                <div v-if=\"form.type === 'mcq' || form.type === 'true_false'\" class=\"space-y-4 pt-4 border-t dark:border-gray-700\">\r\n                  <h4 class=\"text-md font-medium text-gray-800 dark:text-gray-200\">\r\n                    {{ form.type === 'mcq' ? 'خيارات الإجابة (MCQ)' : 'تحديد الإجابة الصحيحة (صح/خطأ)' }}\r\n                    <span class=\"text-red-600\">*</span>\r\n                  </h4>\r\n\r\n               \r\n                  <div v-if=\"form.type === 'mcq'\" class=\"space-y-3\">\r\n                    <div v-for=\"(option, index) in mcqOptions\" :key=\"option.tempId\" class=\"flex items-center gap-2 p-2 border dark:border-gray-600 rounded bg-gray-50 dark:bg-gray-700/50\">\r\n                 \r\n                      <input\r\n                        :id=\"'mcq-correct-' + option.tempId\" type=\"radio\" name=\"correct_mcq_option\"\r\n                        :value=\"option.tempId\" :checked=\"option.is_correct\"\r\n                        @change=\"setCorrectMcqOption(option.tempId)\"\r\n                        class=\"h-4 w-4 text-indigo-600 border-gray-300 focus:ring-indigo-500 dark:bg-gray-600 dark:border-gray-500 flex-shrink-0\"\r\n                        title=\"تحديد كإجابة صحيحة\"\r\n                      />\r\n                     \r\n                      <input\r\n                        :id=\"'mcq-option-' + option.tempId\" type=\"text\" v-model=\"option.option_text\" required\r\n                        :placeholder=\"`نص الخيار ${index + 1}`\"\r\n                        class=\"flex-grow input-field input-sm\"\r\n                      />\r\n                    \r\n                      <button\r\n                        type=\"button\" @click=\"removeMcqOption(option.tempId)\" :disabled=\"mcqOptions.length <= 2\"\r\n                        class=\"p-1 text-red-500 hover:text-red-700 disabled:opacity-50 disabled:cursor-not-allowed dark:hover:text-red-400 flex-shrink-0\"\r\n                        title=\"حذف الخيار\"\r\n                      >\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" fill=\"currentColor\" class=\"w-4 h-4\"><path fill-rule=\"evenodd\" d=\"M5 3.25V4H2.75a.75.75 0 0 0 0 1.5h.3l.815 8.15A1.5 1.5 0 0 0 5.357 15h5.285a1.5 1.5 0 0 0 1.493-1.35l.815-8.15h.3a.75.75 0 0 0 0-1.5H11v-.75A2.25 2.25 0 0 0 8.75 1h-1.5A2.25 2.25 0 0 0 5 3.25Zm2.5-.75v.75h1V2.5h-1Z\" clip-rule=\"evenodd\" /></svg>\r\n                      </button>\r\n                    </div>\r\n                  \r\n                    <button type=\"button\" @click=\"addMcqOption\" class=\"text-sm text-indigo-600 hover:text-indigo-800 dark:text-indigo-400 dark:hover:text-indigo-300 flex items-center gap-1\">\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" fill=\"currentColor\" class=\"w-4 h-4\"><path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14Zm.75-10.25v2.5h2.5a.75.75 0 0 1 0 1.5h-2.5v2.5a.75.75 0 0 1-1.5 0v-2.5h-2.5a.75.75 0 0 1 0-1.5h2.5v-2.5a.75.75 0 0 1 1.5 0Z\" clip-rule=\"evenodd\" /></svg>\r\n                      <span>إضافة خيار آخر</span>\r\n                    </button>\r\n                  </div>\r\n\r\n               \r\n                  <div v-if=\"form.type === 'true_false'\" class=\"flex items-center space-x-6 rtl:space-x-reverse\">\r\n                    <span class=\"text-sm font-medium text-gray-700 dark:text-gray-300\">الإجابة الصحيحة هي:</span>\r\n                    <div class=\"flex items-center gap-4\">\r\n                      <label class=\"flex items-center gap-1 cursor-pointer\">\r\n                        <input type=\"radio\" name=\"tf_correct\" :value=\"true\" :checked=\"isTrueFalseCorrect === true\" @change=\"setTrueFalseCorrect(true)\" class=\"h-4 w-4 text-indigo-600 border-gray-300 focus:ring-indigo-500 dark:bg-gray-600 dark:border-gray-500\">\r\n                        <span class=\"text-sm text-green-700 dark:text-green-300 font-medium\">صحيح</span>\r\n                      </label>\r\n                      <label class=\"flex items-center gap-1 cursor-pointer\">\r\n                        <input type=\"radio\" name=\"tf_correct\" :value=\"false\" :checked=\"isTrueFalseCorrect === false\" @change=\"setTrueFalseCorrect(false)\" class=\"h-4 w-4 text-indigo-600 border-gray-300 focus:ring-indigo-500 dark:bg-gray-600 dark:border-gray-500\">\r\n                        <span class=\"text-sm text-red-700 dark:text-red-300 font-medium\">خطأ</span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                \r\n                <div v-if=\"form.type === 'written'\">\r\n                  <p class=\"text-sm text-gray-600 dark:text-gray-400 italic\">سيتم تصحيح إجابات الأسئلة الكتابية يدويًا.</p>\r\n                </div>\r\n\r\n              \r\n                <p v-if=\"formError\" class=\"mt-4 text-sm text-red-600 dark:text-red-400\">{{ formError }}</p>\r\n\r\n               \r\n                <div class=\"mt-6 flex justify-start gap-3 border-t dark:border-gray-700 pt-5\">\r\n                  <button\r\n                    type=\"submit\"\r\n                    :disabled=\"isSaving || !isFormValid\"\r\n                    class=\"inline-flex justify-center rounded-md border border-transparent bg-indigo-600 px-6 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 disabled:opacity-50\"\r\n                  >\r\n                    <LoadingSpinner v-if=\"isSaving\" class=\"w-5 h-5 text-white -ml-1 mr-2\" />\r\n                    {{ isSaving ? 'جاري الحفظ...' : (isEditing ? 'حفظ التعديلات' : 'إضافة السؤال') }}\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"inline-flex justify-center rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-200 shadow-sm hover:bg-gray-50 dark:hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800\"\r\n                    @click=\"closeModal\"\r\n                    :disabled=\"isSaving\"\r\n                  >\r\n                    إلغاء\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </DialogPanel>\r\n          </TransitionChild>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  </TransitionRoot>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, watch, computed, type PropType } from 'vue';\r\nimport { Dialog, DialogPanel, DialogTitle, TransitionRoot, TransitionChild } from '@headlessui/vue';\r\nimport type { Database, Tables } from '~/types/database.types';\r\nimport { useSupabaseClient, useNuxtApp } from '#imports';\r\nimport LoadingSpinner from '~/components/LoadingSpinner.vue';\r\nimport type { PostgrestError } from '@supabase/supabase-js';\r\n\r\n// Define types\r\ntype Question = Tables<'quiz_questions'>;\r\ntype Option = Tables<'question_options'>;\r\ntype QuestionWithOptions = Question & { question_options?: Option[] };\r\ntype McqOptionForm = { tempId: number; id?: number; option_text: string; is_correct: boolean };\r\n\r\nconst props = defineProps({\r\n  modelValue: { type: Boolean, default: false },\r\n  quizId: { type: Number, required: true },\r\n  questionData: { type: Object as PropType<QuestionWithOptions | null>, default: null }\r\n});\r\n\r\nconst emit = defineEmits(['update:modelValue', 'saved']);\r\n\r\nconst supabase = useSupabaseClient<Database>();\r\nconst { $toast } = useNuxtApp();\r\n\r\nconst isOpen = ref(props.modelValue);\r\nconst isSaving = ref(false);\r\nconst formError = ref<string | null>(null);\r\n\r\n// Form state\r\nconst form = ref<Partial<Omit<Question, 'created_at' | 'updated_at'>>>({}); // Omit auto-managed fields\r\nconst mcqOptions = ref<McqOptionForm[]>([]);\r\nconst isTrueFalseCorrect = ref<boolean | null>(null);\r\n\r\nconst isEditing = computed(() => !!props.questionData?.id);\r\nlet nextOptionTempId = Date.now(); // More robust unique ID generation\r\n\r\n// --- Form Initialization ---\r\nconst initializeForm = () => {\r\n  formError.value = null; isSaving.value = false; mcqOptions.value = []; isTrueFalseCorrect.value = null; nextOptionTempId = Date.now();\r\n  if (isEditing.value && props.questionData) {\r\n    form.value = { ...props.questionData };\r\n    if (form.value.type === 'mcq' && props.questionData.question_options) {\r\n      mcqOptions.value = props.questionData.question_options.map((opt, index) => ({ tempId: nextOptionTempId + index, id: opt.id, option_text: opt.option_text, is_correct: opt.is_correct }));\r\n      nextOptionTempId += props.questionData.question_options.length;\r\n    } else if (form.value.type === 'true_false' && props.questionData.question_options) {\r\n      const correctOption = props.questionData.question_options.find(opt => opt.is_correct);\r\n      isTrueFalseCorrect.value = correctOption?.option_text.toLowerCase() === 'true';\r\n    }\r\n  } else {\r\n    form.value = { question_text: '', type: 'mcq', points: 1, question_order: null, quiz_id: props.quizId };\r\n    addMcqOption(); addMcqOption();\r\n  }\r\n  resetOptionsBasedOnType();\r\n};\r\n\r\n// --- Watchers ---\r\nwatch(() => props.modelValue, (newVal) => { isOpen.value = newVal; if (newVal) initializeForm(); });\r\n\r\n// --- MCQ Option Management ---\r\nconst addMcqOption = () => { if (form.value.type !== 'mcq') return; mcqOptions.value.push({ tempId: nextOptionTempId++, option_text: '', is_correct: false }); };\r\nconst removeMcqOption = (tempIdToRemove: number) => {\r\n    if (form.value.type !== 'mcq' || mcqOptions.value.length <= 2) return;\r\n    const indexToRemove = mcqOptions.value.findIndex(opt => opt.tempId === tempIdToRemove);\r\n    if (indexToRemove !== -1) {\r\n        const wasCorrect = mcqOptions.value[indexToRemove].is_correct;\r\n        mcqOptions.value.splice(indexToRemove, 1);\r\n        if (wasCorrect && mcqOptions.value.length > 0 && !mcqOptions.value.some(opt => opt.is_correct)) { mcqOptions.value[0].is_correct = true; }\r\n    }\r\n};\r\nconst setCorrectMcqOption = (correctTempId: number) => { if (form.value.type !== 'mcq') return; mcqOptions.value = mcqOptions.value.map(opt => ({ ...opt, is_correct: opt.tempId === correctTempId })); };\r\n\r\n// --- T/F Option Management ---\r\nconst setTrueFalseCorrect = (isCorrect: boolean) => { isTrueFalseCorrect.value = isCorrect; };\r\n\r\n// --- Type Change Handling ---\r\nconst resetOptionsBasedOnType = () => {\r\n    if (form.value.type === 'mcq') {\r\n        if (mcqOptions.value.length < 2) { mcqOptions.value = []; addMcqOption(); addMcqOption(); }\r\n        if (mcqOptions.value.length > 0 && !mcqOptions.value.some(opt => opt.is_correct)) mcqOptions.value[0].is_correct = true;\r\n        isTrueFalseCorrect.value = null;\r\n    } else if (form.value.type === 'true_false') {\r\n        mcqOptions.value = []; if (isTrueFalseCorrect.value === null) isTrueFalseCorrect.value = true;\r\n    } else { mcqOptions.value = []; isTrueFalseCorrect.value = null; }\r\n};\r\n\r\n// --- Form Validation ---\r\nconst isFormValid = computed(() => {\r\n  if (!form.value.question_text?.trim() || !form.value.type) return false;\r\n  if (form.value.points === null || form.value.points === undefined || form.value.points < 0) return false;\r\n  if (form.value.type === 'mcq' && (mcqOptions.value.length < 2 || !mcqOptions.value.some(opt => opt.is_correct) || mcqOptions.value.some(opt => !opt.option_text.trim()))) return false;\r\n  if (form.value.type === 'true_false' && isTrueFalseCorrect.value === null) return false;\r\n  return true;\r\n});\r\n\r\n// --- Save Question Logic ---\r\nconst saveQuestion = async () => {\r\n    if (!isFormValid.value || isSaving.value) return;\r\n    isSaving.value = true; formError.value = null;\r\n\r\n    const questionPayload: Omit<Question, 'id' | 'created_at' | 'updated_at'> = { quiz_id: props.quizId, question_text: form.value.question_text!, type: form.value.type!, question_order: form.value.question_order || null, points: form.value.points ?? 1 };\r\n    let optionsPayload: Omit<Option, 'id' | 'question_id'>[] = [];\r\n    if (form.value.type === 'mcq') optionsPayload = mcqOptions.value.map(opt => ({ option_text: opt.option_text, is_correct: opt.is_correct, option_order: null }));\r\n    else if (form.value.type === 'true_false') optionsPayload = [{ option_text: 'True', is_correct: isTrueFalseCorrect.value === true, option_order: 1 },{ option_text: 'False', is_correct: isTrueFalseCorrect.value === false, option_order: 2 }];\r\n\r\n    try {\r\n        let savedQuestionId: number | null = null;\r\n        if (isEditing.value && form.value.id) { // --- UPDATE ---\r\n            const { error: updateQError } = await supabase.from('quiz_questions').update({ ...questionPayload, updated_at: new Date().toISOString() }).eq('id', form.value.id); if (updateQError) throw updateQError;\r\n            savedQuestionId = form.value.id;\r\n            const { error: deleteOptError } = await supabase.from('question_options').delete().eq('question_id', form.value.id); if (deleteOptError) throw deleteOptError;\r\n        } else { // --- INSERT ---\r\n            const { data: newQ, error: insertQError } = await supabase.from('quiz_questions').insert(questionPayload).select('id').single(); if (insertQError) throw insertQError; if (!newQ?.id) throw new Error(\"Failed to get inserted question ID.\");\r\n            savedQuestionId = newQ.id;\r\n        }\r\n        // Insert new options if applicable\r\n        if (optionsPayload.length > 0 && savedQuestionId) {\r\n            const optionsToInsert = optionsPayload.map(opt => ({ ...opt, question_id: savedQuestionId! }));\r\n            const { error: insertOptError } = await supabase.from('question_options').insert(optionsToInsert); if (insertOptError) throw insertOptError;\r\n        }\r\n        // Fetch the final saved question with options\r\n        const { data: finalQuestionData, error: finalQError } = await supabase.from('quiz_questions').select(`*, question_options (*)`).eq('id', savedQuestionId!).single();\r\n        if (finalQError) throw finalQError;\r\n        if (!finalQuestionData) throw new Error(\"Failed to fetch final saved question data.\");\r\n\r\n        emit('saved', finalQuestionData as QuestionWithOptions); closeModal();\r\n    } catch (err: any) { console.error(\"Error saving question:\", err); formError.value = `فشل حفظ السؤال: (${(err as PostgrestError).message || 'خطأ غير معروف'})`;\r\n    } finally { isSaving.value = false; }\r\n};\r\n\r\n// --- Modal Control ---\r\nfunction closeModal() { if (isSaving.value) return; isOpen.value = false; emit('update:modelValue', false); }\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.input-field { @apply block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm dark:bg-gray-700 dark:border-gray-600 dark:text-white disabled:opacity-70; }\r\n.input-sm { @apply text-sm px-2 py-1; }\r\n</style>"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAsJA,UAAM,QAAQ;AAMd,UAAM,OAAO;AAEb,UAAM,WAAW,kBAA4B;AACvC,UAAA,EAAE,OAAO,IAAI,WAAW;AAExB,UAAA,SAAS,IAAI,MAAM,UAAU;AAC7B,UAAA,WAAW,IAAI,KAAK;AACpB,UAAA,YAAY,IAAmB,IAAI;AAGnC,UAAA,OAAO,IAA0D,EAAE;AACnE,UAAA,aAAa,IAAqB,EAAE;AACpC,UAAA,qBAAqB,IAAoB,IAAI;AAEnD,UAAM,YAAY,SAAS,MAAA;;AAAM,cAAC,GAAC,WAAM,iBAAN,mBAAoB;AAAA,KAAE;AACrD,QAAA,mBAAmB,KAAK,IAAI;AAGhC,UAAM,iBAAiB,MAAM;AAC3B,gBAAU,QAAQ;AAAM,eAAS,QAAQ;AAAO,iBAAW,QAAQ,CAAC;AAAG,yBAAmB,QAAQ;AAAM,yBAAmB,KAAK,IAAI;AAChI,UAAA,UAAU,SAAS,MAAM,cAAc;AACzC,aAAK,QAAQ,EAAE,GAAG,MAAM,aAAa;AACrC,YAAI,KAAK,MAAM,SAAS,SAAS,MAAM,aAAa,kBAAkB;AACzD,qBAAA,QAAQ,MAAM,aAAa,iBAAiB,IAAI,CAAC,KAAK,WAAW,EAAE,QAAQ,mBAAmB,OAAO,IAAI,IAAI,IAAI,aAAa,IAAI,aAAa,YAAY,IAAI,WAAA,EAAa;AACnK,8BAAA,MAAM,aAAa,iBAAiB;AAAA,QAAA,WAC/C,KAAK,MAAM,SAAS,gBAAgB,MAAM,aAAa,kBAAkB;AAClF,gBAAM,gBAAgB,MAAM,aAAa,iBAAiB,KAAK,CAAA,QAAO,IAAI,UAAU;AACpF,6BAAmB,SAAQ,+CAAe,YAAY,mBAAkB;AAAA,QAAA;AAAA,MAC1E,OACK;AACL,aAAK,QAAQ,EAAE,eAAe,IAAI,MAAM,OAAO,QAAQ,GAAG,gBAAgB,MAAM,SAAS,MAAM,OAAO;AACzF,qBAAA;AAAgB,qBAAA;AAAA,MAAA;AAEP,8BAAA;AAAA,IAC1B;AAGA,UAAM,MAAM,MAAM,YAAY,CAAC,WAAW;AAAE,aAAO,QAAQ;AAAQ,UAAI,OAAuB,gBAAA;AAAA,IAAA,CAAI;AAGlG,UAAM,eAAe,MAAM;AAAM,UAAA,KAAK,MAAM,SAAS,MAAO;AAAmB,iBAAA,MAAM,KAAK,EAAE,QAAQ,oBAAoB,aAAa,IAAI,YAAY,OAAO;AAAA,IAAG;AACzJ,UAAA,kBAAkB,CAAC,mBAA2B;AAChD,UAAI,KAAK,MAAM,SAAS,SAAS,WAAW,MAAM,UAAU,EAAG;AAC/D,YAAM,gBAAgB,WAAW,MAAM,UAAU,CAAO,QAAA,IAAI,WAAW,cAAc;AACrF,UAAI,kBAAkB,IAAI;AACtB,cAAM,aAAa,WAAW,MAAM,aAAa,EAAE;AACxC,mBAAA,MAAM,OAAO,eAAe,CAAC;AACxC,YAAI,cAAc,WAAW,MAAM,SAAS,KAAK,CAAC,WAAW,MAAM,KAAK,CAAA,QAAO,IAAI,UAAU,GAAG;AAAa,qBAAA,MAAM,CAAC,EAAE,aAAa;AAAA,QAAA;AAAA,MAAM;AAAA,IAEjJ;AACM,UAAA,sBAAsB,CAAC,kBAA0B;AAAM,UAAA,KAAK,MAAM,SAAS,MAAO;AAAQ,iBAAW,QAAQ,WAAW,MAAM,IAAI,CAAQ,SAAA,EAAE,GAAG,KAAK,YAAY,IAAI,WAAW,cAAgB,EAAA;AAAA,IAAG;AAGlM,UAAA,sBAAsB,CAAC,cAAuB;AAAE,yBAAmB,QAAQ;AAAA,IAAW;AAG5F,UAAM,0BAA0B,MAAM;AAC9B,UAAA,KAAK,MAAM,SAAS,OAAO;AACvB,YAAA,WAAW,MAAM,SAAS,GAAG;AAAE,qBAAW,QAAQ,CAAC;AAAgB,uBAAA;AAAgB,uBAAA;AAAA,QAAA;AACvF,YAAI,WAAW,MAAM,SAAS,KAAK,CAAC,WAAW,MAAM,KAAK,CAAO,QAAA,IAAI,UAAU,EAAG,YAAW,MAAM,CAAC,EAAE,aAAa;AACnH,2BAAmB,QAAQ;AAAA,MACpB,WAAA,KAAK,MAAM,SAAS,cAAc;AACzC,mBAAW,QAAQ,CAAC;AAAG,YAAI,mBAAmB,UAAU,KAAM,oBAAmB,QAAQ;AAAA,MAAA,OACtF;AAAE,mBAAW,QAAQ,CAAC;AAAG,2BAAmB,QAAQ;AAAA,MAAA;AAAA,IAC/D;AAGM,UAAA,cAAc,SAAS,MAAM;;AAC7B,UAAA,GAAC,UAAK,MAAM,kBAAX,mBAA0B,WAAU,CAAC,KAAK,MAAM,KAAa,QAAA;AAClE,UAAI,KAAK,MAAM,WAAW,QAAQ,KAAK,MAAM,WAAW,UAAa,KAAK,MAAM,SAAS,EAAU,QAAA;AAC/F,UAAA,KAAK,MAAM,SAAS,UAAU,WAAW,MAAM,SAAS,KAAK,CAAC,WAAW,MAAM,KAAK,CAAA,QAAO,IAAI,UAAU,KAAK,WAAW,MAAM,KAAK,CAAA,QAAO,CAAC,IAAI,YAAY,MAAM,GAAW,QAAA;AACjL,UAAI,KAAK,MAAM,SAAS,gBAAgB,mBAAmB,UAAU,KAAa,QAAA;AAC3E,aAAA;AAAA,IAAA,CACR;AAGD,UAAM,eAAe,YAAY;AAC7B,UAAI,CAAC,YAAY,SAAS,SAAS,MAAO;AAC1C,eAAS,QAAQ;AAAM,gBAAU,QAAQ;AAEnC,YAAA,kBAAsE,EAAE,SAAS,MAAM,QAAQ,eAAe,KAAK,MAAM,eAAgB,MAAM,KAAK,MAAM,MAAO,gBAAgB,KAAK,MAAM,kBAAkB,MAAM,QAAQ,KAAK,MAAM,UAAU,EAAE;AACzP,UAAI,iBAAuD,CAAC;AAC5D,UAAI,KAAK,MAAM,SAAS,MAAwB,kBAAA,WAAW,MAAM,IAAI,CAAA,SAAQ,EAAE,aAAa,IAAI,aAAa,YAAY,IAAI,YAAY,cAAc,OAAO;AAAA,eACrJ,KAAK,MAAM,SAAS,aAAc,kBAAiB,CAAC,EAAE,aAAa,QAAQ,YAAY,mBAAmB,UAAU,MAAM,cAAc,EAAA,GAAI,EAAE,aAAa,SAAS,YAAY,mBAAmB,UAAU,OAAO,cAAc,EAAA,CAAG;AAE1O,UAAA;AACA,YAAI,kBAAiC;AACrC,YAAI,UAAU,SAAS,KAAK,MAAM,IAAI;AAC5B,gBAAA,EAAE,OAAO,aAAA,IAAiB,MAAM,SAAS,KAAK,gBAAgB,EAAE,OAAO,EAAE,GAAG,iBAAiB,aAAY,oBAAI,QAAO,cAAe,CAAA,EAAE,GAAG,MAAM,KAAK,MAAM,EAAE;AAAG,cAAI,aAAoB,OAAA;AAC5L,4BAAkB,KAAK,MAAM;AAC7B,gBAAM,EAAE,OAAO,eAAe,IAAI,MAAM,SAAS,KAAK,kBAAkB,EAAE,SAAS,GAAG,eAAe,KAAK,MAAM,EAAE;AAAG,cAAI,eAAsB,OAAA;AAAA,QAAA,OAC5I;AACH,gBAAM,EAAE,MAAM,MAAM,OAAO,aAAA,IAAiB,MAAM,SAAS,KAAK,gBAAgB,EAAE,OAAO,eAAe,EAAE,OAAO,IAAI,EAAE,OAAO;AAAG,cAAI,aAAoB,OAAA;AAAc,cAAI,EAAC,6BAAM,IAAU,OAAA,IAAI,MAAM,qCAAqC;AAC3O,4BAAkB,KAAK;AAAA,QAAA;AAGvB,YAAA,eAAe,SAAS,KAAK,iBAAiB;AACxC,gBAAA,kBAAkB,eAAe,IAAI,CAAA,SAAQ,EAAE,GAAG,KAAK,aAAa,gBAAA,EAAmB;AACvF,gBAAA,EAAE,OAAO,eAAA,IAAmB,MAAM,SAAS,KAAK,kBAAkB,EAAE,OAAO,eAAe;AAAG,cAAI,eAAsB,OAAA;AAAA,QAAA;AAGjI,cAAM,EAAE,MAAM,mBAAmB,OAAO,gBAAgB,MAAM,SAAS,KAAK,gBAAgB,EAAE,OAAO,yBAAyB,EAAE,GAAG,MAAM,eAAgB,EAAE,OAAO;AAClK,YAAI,YAAmB,OAAA;AACvB,YAAI,CAAC,kBAAyB,OAAA,IAAI,MAAM,4CAA4C;AAEpF,aAAK,SAAS,iBAAwC;AAAc,mBAAA;AAAA,eAC/D,KAAU;AAAU,gBAAA,MAAM,0BAA0B,GAAG;AAAG,kBAAU,QAAQ,oBAAqB,IAAuB,WAAW,eAAe;AAAA,MAAA,UACzJ;AAAU,iBAAS,QAAQ;AAAA,MAAA;AAAA,IACjC;AAGA,aAAS,aAAa;AAAE,UAAI,SAAS,MAAO;AAAQ,aAAO,QAAQ;AAAO,WAAK,qBAAq}