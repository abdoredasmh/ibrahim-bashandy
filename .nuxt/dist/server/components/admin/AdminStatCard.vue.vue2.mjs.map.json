{"file":"AdminStatCard.vue.vue2.mjs","mappings":";;;;;;;;;;;;;;;;;;AAkDA,UAAM,QAAQ;AAWR,UAAA,iBAAiB,SAAS,MAAM;AACpC,UAAI,MAAM,UAAU,QAAQ,MAAM,UAAU,QAAW;AAC9C,eAAA;AAAA,MAAA;AAGF,aAAA,MAAM,MAAM,eAAe,OAAO;AAAA,IAAA,CAC1C;AAGK,UAAA,gBAAgB,SAAS,MAAM;AAQ5B,aAAA,QAAQ,MAAM,IAAI;AAAA,IAAA,CAC1B;AAGD,UAAM,iBAAiB,MAAM;AAC3B,UAAI,MAAM,WAAW,CAAC,MAAM,UAAkB,QAAA;AAE9C,YAAM,SAAS,CAAC,mCAAmC,qCAAqC,uCAAuC,+BAA+B;AACvJ,aAAA,OAAO,KAAK,MAAM,KAAK,WAAW,OAAO,MAAM,CAAC;AAAA,IACzD;AAEA,UAAM,mBAAmB,MAAM;AAC5B,UAAI,MAAM,WAAW,CAAC,MAAM,UAAkB,QAAA;AAC9C,YAAM,SAAS,CAAC,oCAAoC,sCAAsC,wCAAwC,gCAAgC;AAC5J,aAAA,OAAO,KAAK,MAAM,KAAK,WAAW,OAAO,MAAM,CAAC;AAAA,IACzD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["../../../../../components/admin/AdminStatCard.vue.vue"],"sourcesContent":["<template>\r\n  <component\r\n    :is=\"linkTo ? 'NuxtLink' : 'div'\"\r\n    :to=\"linkTo\"\r\n    class=\"bg-white dark:bg-gray-800 p-4 md:p-5 rounded-lg shadow-md border border-transparent hover:border-indigo-300 dark:hover:border-indigo-700 transition-all duration-200 group relative\"\r\n    :class=\"{\r\n      'border-yellow-400 dark:border-yellow-600 hover:border-yellow-500 dark:hover:border-yellow-500': warning && !isLoading,\r\n      'cursor-pointer': linkTo\r\n    }\"\r\n    v-tooltip=\"tooltip\"\r\n  >\r\n    <div v-if=\"isLoading\" class=\"animate-pulse\">\r\n      <div class=\"h-5 bg-gray-200 dark:bg-gray-700 rounded w-3/4 mb-3\"></div>\r\n      <div class=\"h-8 bg-gray-300 dark:bg-gray-600 rounded w-1/2\"></div>\r\n    </div>\r\n    <div v-else class=\"flex items-center space-x-4 rtl:space-x-reverse\">\r\n      <div\r\n        class=\"p-3 rounded-full flex items-center justify-center\"\r\n        :class=\"getIconBgColor()\"\r\n      >\r\n        <!-- استخدم مكتبة أيقونات مثل heroicons أو fontawesome -->\r\n        <component :is=\"iconComponent\" class=\"h-6 w-6\" :class=\"getIconTextColor()\" />\r\n      </div>\r\n      <div>\r\n        <p class=\"text-sm font-medium text-gray-500 dark:text-gray-400 group-hover:text-gray-600 dark:group-hover:text-gray-300 transition-colors\">\r\n          {{ title }}\r\n        </p>\r\n        <p class=\"text-2xl md:text-3xl font-bold text-gray-800 dark:text-gray-200 group-hover:text-indigo-600 dark:group-hover:text-indigo-400 transition-colors\"\r\n           :class=\"{ 'text-yellow-600 dark:text-yellow-400 group-hover:text-yellow-500 dark:group-hover:text-yellow-300': warning }\"\r\n        >\r\n          {{ formattedValue }}\r\n        </p>\r\n      </div>\r\n       <!-- أيقونة تحذير صغيرة -->\r\n       <span v-if=\"warning && value !== null && value > 0\" class=\"absolute top-2 right-2 text-yellow-500 dark:text-yellow-400\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n             <path fill-rule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\r\n          </svg>\r\n       </span>\r\n    </div>\r\n  </component>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { computed } from 'vue';\r\n// افتراض أنك تستخدم مكتبة أيقونات أو مكونات SVG\r\n// import { UserGroupIcon, ChatAlt2Icon, /* ... other icons */ } from '@heroicons/vue/outline'; // مثال لـ Heroicons\r\n// أو\r\n// import IconUsers from '~/components/icons/IconUsers.vue'; // مثال لمكونات SVG محلية\r\n\r\nconst props = defineProps({\r\n  title: { type: String, required: true },\r\n  value: { type: Number, default: null },\r\n  icon: { type: String, required: true }, // اسم الأيقونة (مثل 'users', 'comments')\r\n  isLoading: { type: Boolean, default: false },\r\n  warning: { type: Boolean, default: false },\r\n  linkTo: { type: String, default: null }, // الرابط الذي ستنتقل إليه البطاقة\r\n  tooltip: { type: String, default: null } // نص التلميح (Tooltip)\r\n});\r\n\r\n// لعرض قيمة مناسبة حتى لو كانت null\r\nconst formattedValue = computed(() => {\r\n  if (props.value === null || props.value === undefined) {\r\n    return '-'; // أو 'N/A' أو '0' حسب ما تفضل\r\n  }\r\n  // يمكنك إضافة تنسيق للأرقام الكبيرة إذا أردت\r\n  return props.value.toLocaleString('ar-EG'); // تنسيق الأرقام بالعربية\r\n});\r\n\r\n// لتحديد مكون الأيقونة بناءً على الاسم (مثال)\r\nconst iconComponent = computed(() => {\r\n  // هذا يعتمد بشكل كبير على كيفية تنظيم أيقوناتك\r\n  // مثال بسيط، يمكنك استخدام switch أو object mapping\r\n  // return {\r\n  //   'users': UserGroupIcon,\r\n  //   'comments': ChatAlt2Icon,\r\n  //   // ... باقي الأيقونات\r\n  // }[props.icon] || UserGroupIcon; // أيقونة افتراضية\r\n  return `icon-${props.icon}`; // إذا كنت تستخدم مكونات مثل <icon-users />, <icon-comments />\r\n});\r\n\r\n// دوال لتحديد ألوان الأيقونات (يمكن تخصيصها)\r\nconst getIconBgColor = () => {\r\n  if (props.warning && !props.isLoading) return 'bg-yellow-100 dark:bg-yellow-900/50';\r\n  // يمكنك تغيير الألوان بناءً على الأيقونة أو نوع الإحصائية\r\n  const colors = ['bg-blue-100 dark:bg-blue-900/50', 'bg-green-100 dark:bg-green-900/50', 'bg-purple-100 dark:bg-purple-900/50', 'bg-red-100 dark:bg-red-900/50'];\r\n  return colors[Math.floor(Math.random() * colors.length)]; // لون عشوائي كمثال\r\n};\r\n\r\nconst getIconTextColor = () => {\r\n   if (props.warning && !props.isLoading) return 'text-yellow-600 dark:text-yellow-400';\r\n   const colors = ['text-blue-600 dark:text-blue-400', 'text-green-600 dark:text-green-400', 'text-purple-600 dark:text-purple-400', 'text-red-600 dark:text-red-400'];\r\n  return colors[Math.floor(Math.random() * colors.length)]; // لون عشوائي كمثال\r\n};\r\n\r\n// ستحتاج إلى تسجيل directive للـ tooltip إذا لم تكن تستخدم مكتبة UI توفره\r\n// مثال بسيط باستخدام v-tooltip (قد تحتاج لتثبيت وإعداد مكتبة tooltip مثل 'v-tooltip')\r\n// import { VTooltip } from 'v-tooltip'; // مثال\r\n// directives: { tooltip: VTooltip },\r\n</script>\r\n\r\n<style scoped>\r\n/* يمكنك إضافة تنسيقات v-tooltip هنا إذا لزم الأمر */\r\n</style>"],"version":3}