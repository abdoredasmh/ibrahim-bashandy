{"file":"CourseAddEditModal.vue2.mjs","mappings":";;;;;;;;;;;;;AA0LA,UAAM,QAAQ;AAWd,UAAM,WAAW,kBAA4B;AAGvC,UAAA,cAAc,IAAI,KAAK;AACvB,UAAA,eAAe,IAAI,EAAE;AAG3B,UAAM,YAAY,SAAS,MAAA;;AAAM,cAAC,GAAC,WAAM,eAAN,mBAAkB;AAAA,KAAE;AACvD,UAAM,WAAW,SAA0B;AAAA,MACvC,OAAO;AAAA,MAAI,aAAa;AAAA,MAAM,aAAa;AAAA,MAAM,sBAAsB;AAAA,MAAM,WAAW;AAAA,MAAM,WAAW;AAAA,IAAA,CAC5G;AAGK,UAAA,gBAAgB,IAAoB,EAAE;AACtC,UAAA,iBAAiB,IAAI,KAAK;AAC1B,UAAA,eAAe,IAAmB,IAAI;AACtC,UAAA,oBAAoB,IAAI,KAAK;AAC7B,UAAA,gBAAgB,IAAyB,IAAI;AAC7C,UAAA,sBAAsB,IAAI,KAAK;AAC/B,UAAA,kBAAkB,IAAmB,IAAI;AAE/C,UAAM,iBAAiB,SAAsC;AAAA,MACzD,eAAe;AAAA,MAAM,OAAO;AAAA,MAAI,aAAa;AAAA,IAAA,CAChD;AAGD,UAAM,MAAM,MAAM,YAAY,CAAC,cAAc;AACnC,cAAA,IAAI,6BAA6B,SAAS;AAClD,UAAI,uCAAW,IAAI;AACT,gBAAA,IAAI,0CAA0C,UAAU,EAAE;AAClE,eAAO,OAAO,UAAU;AAAA;AAAA,UACpB,OAAO,UAAU;AAAA,UAAO,aAAa,UAAU;AAAA,UAAa,aAAa,UAAU;AAAA,UAAa,sBAAsB,UAAU;AAAA,UAAsB,WAAW,UAAU;AAAA,UAAW,WAAW,UAAU,aAAa;AAAA,QAAA,CAC3N;AACY,qBAAA;AAAA,MAAA,OACR;AACL,gBAAQ,IAAI,sCAAsC;AAClD,eAAO,OAAO,UAAU;AAAA;AAAA,UACpB,OAAO;AAAA,UAAI,aAAa;AAAA,UAAM,aAAa;AAAA,UAAM,sBAAsB;AAAA,UAAM,WAAW;AAAA,UAAM,WAAW;AAAA,QAAA,CAC5G;AACD,sBAAc,QAAQ,CAAC;AAAA,MAAA;AAEzB,mBAAa,QAAQ;AACL,sBAAA;AAAA,OACf,EAAE,WAAW,MAAM,MAAM,MAAM;AAGlC,mBAAe,eAAe;;AAC1B,UAAI,CAAC,UAAU,SAAS,GAAC,WAAM,eAAN,mBAAkB,KAAI;AAC3C,gBAAQ,IAAI,qDAAqD;AACjE,sBAAc,QAAQ,CAAC;AAAG;AAAA,MAAA;AAExB,YAAA,kBAAkB,MAAM,WAAW;AACjC,cAAA,IAAI,mCAAmC,eAAe,EAAE;AAChE,qBAAe,QAAQ;AACvB,mBAAa,QAAQ;AACjB,UAAA;AACM,cAAA,EAAE,MAAM,UAAU,MAAM,SAAS,KAAK,gBAAgB,EAAE,OAAO,GAAG,EAAE,GAAG,aAAa,eAAe,EAAE,MAAM,iBAAiB,EAAE,WAAW,MAAM;AACrJ,YAAI,MAAa,OAAA;AACH,sBAAA,QAAQ,QAAQ,CAAC;AAC/B,gBAAQ,IAAI,oBAAoB,cAAc,MAAM,MAAM;AAAA,eACrD,KAAU;AACP,gBAAA,MAAM,2BAA2B,GAAG;AAC/B,qBAAA,QAAQ,IAAI,WAAW;AACpC,sBAAc,QAAQ,CAAC;AAAA,MAAA,UACzB;AACE,uBAAe,QAAQ;AAAA,MAAA;AAAA,IAC3B;AAGJ,aAAS,kBAAkB;AACvB,wBAAkB,QAAQ;AAC1B,oBAAc,QAAQ;AACtB,qBAAe,gBAAgB;AAC/B,qBAAe,QAAQ;AACvB,qBAAe,cAAc;AAC7B,sBAAgB,QAAQ;AAAA,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["../../../../../components/admin/CourseAddEditModal.vue"],"sourcesContent":["<template>\r\n   <!-- Backdrop -->\r\n   <div class=\"fixed inset-0 z-50 bg-black bg-opacity-50 flex items-center justify-center p-4\" @click.self=\"closeModal\">\r\n      <!-- Modal Content -->\r\n      <div class=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl w-full max-w-4xl max-h-[90vh] overflow-y-auto\">\r\n         <div class=\"p-6\">\r\n            <!-- Header -->\r\n            <div class=\"flex justify-between items-center pb-3 border-b border-gray-200 dark:border-gray-700\">\r\n               <h3 class=\"text-xl font-semibold text-gray-900 dark:text-white\">\r\n                  {{ isEditing ? 'تعديل الدورة' : 'إضافة دورة جديدة' }}\r\n               </h3>\r\n               <button @click=\"closeModal\" class=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\">\r\n                  <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path></svg>\r\n               </button>\r\n            </div>\r\n\r\n            <!-- Form Sections -->\r\n            <div class=\"mt-6 space-y-6\">\r\n\r\n              <!-- Section 1: Course Details Form -->\r\n              <section>\r\n                <h4 class=\"text-lg font-medium text-gray-800 dark:text-gray-200 mb-3\">تفاصيل الدورة الأساسية</h4>\r\n                <form @submit.prevent=\"handleSubmitCourseDetails\" class=\"space-y-4\" id=\"course-details-form\">\r\n                    <!-- الحقول: Title, Description, Category, YouTube URL, Image URL, Is Active -->\r\n                    <!-- ... (الكود الخاص بهذه الحقول يبقى كما هو في الردود السابقة) ... -->\r\n                   <div>\r\n                      <label for=\"course-title\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">العنوان *</label>\r\n                      <input type=\"text\" id=\"course-title\" v-model=\"formData.title\" required class=\"admin-input\">\r\n                   </div>\r\n                   <div>\r\n                      <label for=\"course-description\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">الوصف</label>\r\n                      <textarea id=\"course-description\" v-model=\"formData.description\" rows=\"4\" class=\"admin-input\"></textarea>\r\n                   </div>\r\n                   <div>\r\n                     <label for=\"course-category\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">الفئة (اختياري)</label>\r\n                     <select id=\"course-category\" v-model=\"formData.category_id\" class=\"admin-select\">\r\n                       <option :value=\"null\">-- اختر فئة --</option>\r\n                       <option v-for=\"cat in categories\" :key=\"cat.id\" :value=\"cat.id\">{{ cat.name }}</option>\r\n                     </select>\r\n                   </div>\r\n                    <div>\r\n                      <label for=\"course-youtube-playlist\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">رابط قائمة تشغيل يوتيوب (اختياري)</label>\r\n                      <input type=\"url\" id=\"course-youtube-playlist\" v-model=\"formData.youtube_playlist_url\" class=\"admin-input\" placeholder=\"https://www.youtube.com/playlist?list=...\">\r\n                   </div>\r\n                    <div>\r\n                      <label for=\"course-image-url\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">رابط صورة الغلاف (اختياري)</label>\r\n                       <input type=\"url\" id=\"course-image-url\" v-model=\"formData.image_url\" class=\"admin-input\" placeholder=\"https://...\">\r\n                       <p class=\"form-hint\">أدخل رابطًا مباشرًا للصورة أو اترك الحقل فارغًا.</p>\r\n                   </div>\r\n                    <div class=\"flex items-center\">\r\n                      <input id=\"is_active\" v-model=\"formData.is_active\" type=\"checkbox\" class=\"h-4 w-4 rounded border-gray-300 text-primary focus:ring-primary dark:bg-gray-700 dark:border-gray-600\">\r\n                      <label for=\"is_active\" class=\"ms-2 block text-sm text-gray-900 dark:text-gray-300\">نشر الدورة (مرئية للطلاب)</label>\r\n                    </div>\r\n                </form>\r\n              </section>\r\n\r\n              <!-- ============================================= -->\r\n              <!-- Section 2: Module Management (هذا هو الجزء المضاف) -->\r\n              <!-- ============================================= -->\r\n              <section v-if=\"isEditing && props.courseData?.id\" class=\"pt-6 border-t border-gray-200 dark:border-gray-700\">\r\n                  <h4 class=\"text-lg font-medium text-gray-800 dark:text-gray-200 mb-4\">إدارة وحدات الدورة</h4>\r\n\r\n                  <!-- Loading / Error States for Modules -->\r\n                  <div v-if=\"modulesLoading\" class=\"text-center py-4\">\r\n                      <LoadingSpinner small />\r\n                      <p class=\"text-sm text-gray-500 dark:text-gray-400 mt-2\">جاري تحميل الوحدات...</p>\r\n                  </div>\r\n                  <div v-else-if=\"modulesError\" class=\"text-red-500 dark:text-red-400 bg-red-100 dark:bg-red-900/30 p-3 rounded-md text-sm\">\r\n                      حدث خطأ أثناء تحميل الوحدات: {{ modulesError }}\r\n                      <button @click=\"fetchModules\" class=\"ms-2 underline font-semibold\">إعادة المحاولة</button>\r\n                  </div>\r\n\r\n                  <!-- Modules List & Forms -->\r\n                   <div v-else class=\"space-y-3\">\r\n                       <!-- Message if no modules -->\r\n                       <div v-if=\"courseModules.length === 0 && !showAddModuleForm\" class=\"text-center text-sm text-gray-500 dark:text-gray-400 py-3 px-4 bg-gray-50 dark:bg-gray-700/50 rounded-md\">\r\n                           لم يتم إضافة وحدات لهذه الدورة بعد.\r\n                       </div>\r\n\r\n                       <!-- List of existing modules -->\r\n                       <ul v-else class=\"space-y-2\">\r\n                            <li v-for=\"module in courseModules\" :key=\"module.id\" class=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700/50 rounded-md border border-gray-200 dark:border-gray-600\">\r\n                                <div class=\"flex items-center space-x-3 rtl:space-x-reverse flex-grow min-w-0\">\r\n                                    <span class=\"font-mono text-xs text-gray-500 dark:text-gray-400 bg-gray-200 dark:bg-gray-600 px-1.5 py-0.5 rounded flex-shrink-0\">#{{ module.module_number }}</span>\r\n                                    <span class=\"font-medium text-gray-800 dark:text-gray-200 truncate\" :title=\"module.title\">{{ module.title }}</span>\r\n                                    <!-- Optional: Show description tooltip or truncated text -->\r\n                                    <span v-if=\"module.description\" class=\"text-xs text-gray-500 dark:text-gray-400 truncate hidden sm:inline-block\" :title=\"module.description\"> - {{ module.description }}</span>\r\n                                </div>\r\n                                <div class=\"flex items-center space-x-2 rtl:space-x-reverse flex-shrink-0\">\r\n                                    <!-- Edit Button with SVG Icon -->\r\n                                    <button @click=\"startEditingModule(module)\" type=\"button\" :disabled=\"moduleActionLoading\" class=\"button-icon text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300\" title=\"تعديل الوحدة\">\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-4 h-4\">\r\n                                            <path d=\"M2.695 14.763l-1.262 3.154a.5.5 0 00.65.65l3.155-1.262a4 4 0 001.343-.885L17.5 5.5a2.121 2.121 0 00-3-3L3.58 13.42a4 4 0 00-.885 1.343z\" />\r\n                                        </svg>\r\n                                    </button>\r\n                                    <!-- Delete Button with SVG Icon -->\r\n                                    <button @click=\"confirmDeleteModule(module)\" type=\"button\" :disabled=\"moduleActionLoading\" class=\"button-icon text-red-600 hover:text-red-800 dark:text-red-400 dark:hover:text-red-300\" title=\"حذف الوحدة\">\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-4 h-4\">\r\n                                            <path fill-rule=\"evenodd\" d=\"M8.75 1A2.75 2.75 0 006 3.75v.443c-.795.077-1.584.176-2.365.298a.75.75 0 10.23 1.482l.149-.022.841 10.518A2.75 2.75 0 007.596 19h4.807a2.75 2.75 0 002.742-2.53l.841-10.52.149.023a.75.75 0 00.23-1.482A41.03 41.03 0 0014 4.193V3.75A2.75 2.75 0 0011.25 1h-2.5zM10 4c.84 0 1.673.025 2.5.075V3.75c0-.69-.56-1.25-1.25-1.25h-2.5c-.69 0-1.25.56-1.25 1.25v.325C8.327 4.025 9.16 4 10 4zM8.58 7.72a.75.75 0 00-1.5.06l.3 7.5a.75.75 0 101.5-.06l-.3-7.5zm4.34.06a.75.75 0 10-1.5-.06l-.3 7.5a.75.75 0 101.5.06l.3-7.5z\" clip-rule=\"evenodd\" />\r\n                                        </svg>\r\n                                    </button>\r\n                                </div>\r\n                            </li>\r\n                       </ul>\r\n\r\n                       <!-- Add/Edit Module Form (collapsible or inline) -->\r\n                       <div v-if=\"showAddModuleForm || editingModule\" class=\"mt-4 p-4 border border-dashed border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700/30\">\r\n                           <h5 class=\"text-md font-semibold mb-3 text-gray-700 dark:text-gray-300\">\r\n                               {{ editingModule ? `تعديل الوحدة #${editingModule.module_number}` : 'إضافة وحدة جديدة' }}\r\n                           </h5>\r\n                           <form @submit.prevent=\"saveModule\" class=\"space-y-3\">\r\n                               <div class=\"grid grid-cols-1 sm:grid-cols-3 gap-3\">\r\n                                   <div>\r\n                                       <label :for=\"`module-number-${editingModule?.id ?? 'new'}`\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">رقم الوحدة *</label>\r\n                                       <input type=\"number\" :id=\"`module-number-${editingModule?.id ?? 'new'}`\" v-model.number=\"moduleFormData.module_number\" required min=\"1\" class=\"admin-input mt-1\">\r\n                                   </div>\r\n                                   <div class=\"sm:col-span-2\">\r\n                                       <label :for=\"`module-title-${editingModule?.id ?? 'new'}`\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">اسم الوحدة *</label>\r\n                                       <input type=\"text\" :id=\"`module-title-${editingModule?.id ?? 'new'}`\" v-model=\"moduleFormData.title\" required class=\"admin-input mt-1\">\r\n                                   </div>\r\n                               </div>\r\n                               <div>\r\n                                   <label :for=\"`module-description-${editingModule?.id ?? 'new'}`\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">وصف الوحدة (اختياري)</label>\r\n                                   <textarea :id=\"`module-description-${editingModule?.id ?? 'new'}`\" v-model=\"moduleFormData.description\" rows=\"2\" class=\"admin-textarea mt-1\"></textarea>\r\n                               </div>\r\n                               <!-- Module Form Error -->\r\n                               <div v-if=\"moduleFormError\" class=\"text-red-500 text-xs p-2 bg-red-100 dark:bg-red-900/30 rounded border border-red-300 dark:border-red-700\">{{ moduleFormError }}</div>\r\n                               <!-- Module Form Actions -->\r\n                               <div class=\"flex justify-end space-x-2 rtl:space-x-reverse pt-2\">\r\n                                   <button type=\"button\" @click=\"cancelModuleForm\" :disabled=\"moduleActionLoading\" class=\"button-secondary-small\">إلغاء</button>\r\n                                   <button type=\"submit\" :disabled=\"moduleActionLoading\" class=\"button-primary-small\">\r\n                                       <span v-if=\"moduleActionLoading\">جاري الحفظ...</span>\r\n                                       <span v-else>{{ editingModule ? 'حفظ التعديل' : 'إضافة الوحدة' }}</span>\r\n                                   </button>\r\n                               </div>\r\n                           </form>\r\n                       </div>\r\n\r\n                       <!-- Add Module Button (Show only if not adding/editing) -->\r\n                       <div v-if=\"!showAddModuleForm && !editingModule\" class=\"mt-4\">\r\n                           <button @click=\"showAddModuleForm = true\" type=\"button\" class=\"button-outline w-full sm:w-auto\">\r\n                               <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"w-4 h-4 me-1\">\r\n                                   <path d=\"M10.75 4.75a.75.75 0 00-1.5 0v4.5h-4.5a.75.75 0 000 1.5h4.5v4.5a.75.75 0 001.5 0v-4.5h4.5a.75.75 0 000-1.5h-4.5v-4.5z\" />\r\n                               </svg>\r\n                               إضافة وحدة جديدة\r\n                           </button>\r\n                       </div>\r\n                  </div>\r\n              </section>\r\n              <!-- ============================================= -->\r\n              <!-- End of Module Management Section            -->\r\n              <!-- ============================================= -->\r\n\r\n              <!-- Error Message for Main Course Details Form -->\r\n              <div v-if=\"errorMessage\" class=\"text-red-600 dark:text-red-400 text-sm p-2 bg-red-100 dark:bg-red-900/30 rounded border border-red-300 dark:border-red-700\">\r\n                 {{ errorMessage }}\r\n              </div>\r\n\r\n               <!-- Main Modal Actions -->\r\n               <div class=\"pt-6 flex justify-end space-x-2 rtl:space-x-reverse border-t border-gray-200 dark:border-gray-700\">\r\n                  <button type=\"button\" @click=\"closeModal\" :disabled=\"formLoading || moduleActionLoading\" class=\"button-secondary\">إغلاق</button>\r\n                  <button type=\"submit\" form=\"course-details-form\" :disabled=\"formLoading || moduleActionLoading\" class=\"button-primary\">\r\n                     <span v-if=\"formLoading\">جاري حفظ التفاصيل...</span>\r\n                     <span v-else>{{ isEditing ? 'حفظ تفاصيل الدورة' : 'إضافة الدورة' }}</span>\r\n                  </button>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, reactive, watch, computed } from 'vue'; // Removed onMounted as watch handles initial fetch now\r\nimport type { Database, Tables } from '~/types/database.types';\r\nimport { useSupabaseClient } from '#imports';\r\nimport LoadingSpinner from '~/components/LoadingSpinner.vue'; // Assuming you have this\r\n\r\n// --- Type Definitions ---\r\ntype Course = Tables<'study_courses'>;\r\ntype Category = Pick<Tables<'categories'>, 'id' | 'name'>;\r\ntype CourseModule = Tables<'course_modules'>;\r\ntype CourseModuleInsert = Tables<'course_modules'>['Insert'];\r\ntype CourseModuleUpdate = Tables<'course_modules'>['Update'];\r\n\r\n// --- Props and Emits ---\r\nconst props = defineProps<{\r\n  courseData: Course | null;\r\n  categories: Category[];\r\n}>();\r\n\r\nconst emit = defineEmits<{\r\n  (e: 'close'): void;\r\n  (e: 'saved'): void;\r\n}>();\r\n\r\n// --- Supabase Client ---\r\nconst supabase = useSupabaseClient<Database>();\r\n\r\n// --- Component State ---\r\nconst formLoading = ref(false);\r\nconst errorMessage = ref('');\r\n\r\n// Course Details State\r\nconst isEditing = computed(() => !!props.courseData?.id);\r\nconst formData = reactive<Partial<Course>>({\r\n    title: '', description: null, category_id: null, youtube_playlist_url: null, image_url: null, is_active: false,\r\n});\r\n\r\n// Module Management State\r\nconst courseModules = ref<CourseModule[]>([]);\r\nconst modulesLoading = ref(false);\r\nconst modulesError = ref<string | null>(null);\r\nconst showAddModuleForm = ref(false);\r\nconst editingModule = ref<CourseModule | null>(null);\r\nconst moduleActionLoading = ref(false);\r\nconst moduleFormError = ref<string | null>(null);\r\n\r\nconst moduleFormData = reactive<Partial<CourseModuleInsert>>({\r\n    module_number: null, title: '', description: null,\r\n});\r\n\r\n// --- Watchers ---\r\nwatch(() => props.courseData, (newCourse) => {\r\n  console.log(\"Course data prop changed:\", newCourse);\r\n  if (newCourse?.id) {\r\n    console.log(\"Populating form for editing course ID:\", newCourse.id);\r\n    Object.assign(formData, { /* ... populate formData ... */\r\n        title: newCourse.title, description: newCourse.description, category_id: newCourse.category_id, youtube_playlist_url: newCourse.youtube_playlist_url, image_url: newCourse.image_url, is_active: newCourse.is_active ?? false,\r\n    });\r\n    fetchModules(); // Fetch modules when editing\r\n  } else {\r\n    console.log(\"Resetting form for adding new course\");\r\n    Object.assign(formData, { /* ... reset formData ... */\r\n        title: '', description: null, category_id: null, youtube_playlist_url: null, image_url: null, is_active: false,\r\n    });\r\n    courseModules.value = []; // Clear modules\r\n  }\r\n  errorMessage.value = '';\r\n  resetModuleForm();\r\n}, { immediate: true, deep: true });\r\n\r\n// --- Module Management Functions ---\r\nasync function fetchModules() {\r\n    if (!isEditing.value || !props.courseData?.id) {\r\n        console.log(\"Skipping module fetch: Not editing or no course ID.\");\r\n        courseModules.value = []; return;\r\n    }\r\n    const currentCourseId = props.courseData.id;\r\n    console.log(`Fetching modules for course ID: ${currentCourseId}`);\r\n    modulesLoading.value = true;\r\n    modulesError.value = null;\r\n    try {\r\n        const { data, error } = await supabase.from('course_modules').select('*').eq('course_id', currentCourseId).order('module_number', { ascending: true });\r\n        if (error) throw error;\r\n        courseModules.value = data || [];\r\n        console.log(\"Modules fetched:\", courseModules.value.length);\r\n    } catch (err: any) {\r\n        console.error(\"Error fetching modules:\", err);\r\n        modulesError.value = err.message || 'Unknown error';\r\n        courseModules.value = [];\r\n    } finally {\r\n        modulesLoading.value = false;\r\n    }\r\n}\r\n\r\nfunction resetModuleForm() {\r\n    showAddModuleForm.value = false;\r\n    editingModule.value = null;\r\n    moduleFormData.module_number = null;\r\n    moduleFormData.title = '';\r\n    moduleFormData.description = null;\r\n    moduleFormError.value = null;\r\n}\r\n\r\nfunction startEditingModule(module: CourseModule) {\r\n    resetModuleForm();\r\n    editingModule.value = { ...module };\r\n    moduleFormData.module_number = module.module_number;\r\n    moduleFormData.title = module.title;\r\n    moduleFormData.description = module.description;\r\n    // Ensure the form is visible if it was hidden\r\n    // No need for showAddModuleForm = true here, v-if handles editingModule\r\n    console.log(\"Started editing module:\", editingModule.value);\r\n}\r\n\r\nfunction cancelModuleForm() {\r\n    resetModuleForm();\r\n}\r\n\r\nasync function saveModule() {\r\n    if (!props.courseData?.id) { /* ... error handling ... */ return; }\r\n    if (moduleFormData.module_number === null || moduleFormData.module_number <= 0 || !moduleFormData.title?.trim()) {\r\n        moduleFormError.value = \"رقم الوحدة (أكبر من 0) واسم الوحدة مطلوبان.\"; return;\r\n    }\r\n\r\n    moduleActionLoading.value = true;\r\n    moduleFormError.value = null;\r\n    const currentCourseId = props.courseData.id;\r\n\r\n    const dataToSave: Partial<CourseModuleInsert | CourseModuleUpdate> = {\r\n        course_id: currentCourseId, module_number: moduleFormData.module_number, title: moduleFormData.title.trim(), description: moduleFormData.description?.trim() || null,\r\n    };\r\n\r\n    try {\r\n        let error;\r\n        const moduleNumberToCheck = dataToSave.module_number!;\r\n\r\n        if (editingModule.value?.id) {\r\n            console.log(`Updating module ID: ${editingModule.value.id}`);\r\n            // Check for conflict only if module number changed\r\n            if (editingModule.value.module_number !== moduleNumberToCheck) {\r\n                 const { data: existing, error: checkError } = await supabase.from('course_modules').select('id').eq('course_id', currentCourseId).eq('module_number', moduleNumberToCheck).not('id', 'eq', editingModule.value.id).maybeSingle();\r\n                 if (checkError) throw checkError;\r\n                 if (existing) throw new Error(`رقم الوحدة ${moduleNumberToCheck} موجود بالفعل.`);\r\n             }\r\n            const { error: updateError } = await supabase.from('course_modules').update(dataToSave as CourseModuleUpdate).eq('id', editingModule.value.id);\r\n            error = updateError;\r\n        } else {\r\n            console.log(`Inserting new module for course ID: ${currentCourseId}`);\r\n             const { data: existing, error: checkError } = await supabase.from('course_modules').select('id').eq('course_id', currentCourseId).eq('module_number', moduleNumberToCheck).maybeSingle();\r\n             if (checkError) throw checkError;\r\n             if (existing) throw new Error(`رقم الوحدة ${moduleNumberToCheck} موجود بالفعل.`);\r\n            const { error: insertError } = await supabase.from('course_modules').insert(dataToSave as CourseModuleInsert);\r\n            error = insertError;\r\n        }\r\n        if (error) throw error;\r\n        console.log(\"Module saved successfully.\");\r\n        resetModuleForm();\r\n        await fetchModules();\r\n    } catch (err: any) {\r\n        console.error(\"Error saving module:\", err);\r\n        moduleFormError.value = `فشل حفظ الوحدة: ${err.message}`;\r\n    } finally {\r\n        moduleActionLoading.value = false;\r\n    }\r\n}\r\n\r\nasync function confirmDeleteModule(module: CourseModule) {\r\n     if (!props.courseData?.id || !module.id) return;\r\n    if (!confirm(`هل أنت متأكد من حذف الوحدة \"${module.title}\" (رقم ${module.module_number})؟ \\n\\nتحذير: سيتم إلغاء ربط أي دروس حالية بهذه الوحدة.`)) return;\r\n\r\n    moduleActionLoading.value = true;\r\n     moduleFormError.value = null;\r\n    const currentCourseId = props.courseData.id;\r\n    const moduleNumberToDelete = module.module_number;\r\n    const moduleIdToDelete = module.id;\r\n    console.log(`Attempting to delete module ID: ${moduleIdToDelete}, Number: ${moduleNumberToDelete}`);\r\n\r\n    try {\r\n         console.log(`Unlinking lessons with module_number ${moduleNumberToDelete}`);\r\n         const { error: updateLessonsError } = await supabase.from('lessons').update({ module_number: null }).eq('course_id', currentCourseId).eq('module_number', moduleNumberToDelete);\r\n        if (updateLessonsError) throw new Error(`فشل إلغاء ربط الدروس: ${updateLessonsError.message}`);\r\n         console.log(`Lessons unlinked.`);\r\n\r\n         console.log(`Deleting module record ID: ${moduleIdToDelete}`);\r\n        const { error: deleteModuleError } = await supabase.from('course_modules').delete().eq('id', moduleIdToDelete);\r\n        if (deleteModuleError) throw deleteModuleError;\r\n        console.log(`Module deleted.`);\r\n\r\n        await fetchModules();\r\n    } catch (err: any) {\r\n        console.error(\"Error deleting module:\", err);\r\n         moduleFormError.value = `فشل حذف الوحدة: ${err.message}`;\r\n    } finally {\r\n        moduleActionLoading.value = false;\r\n    }\r\n}\r\n\r\n// --- Course Details Submit Function ---\r\nasync function handleSubmitCourseDetails() {\r\n    formLoading.value = true;\r\n    errorMessage.value = '';\r\n    const dataToSubmit = { /* ... same as before ... */\r\n        title: formData.title.trim(), description: formData.description?.trim() || null, category_id: formData.category_id || null, youtube_playlist_url: formData.youtube_playlist_url?.trim() || null, image_url: formData.image_url?.trim() || null, is_active: formData.is_active || false,\r\n    };\r\n\r\n    try {\r\n         if (isEditing.value && props.courseData?.id) {\r\n            const { error } = await supabase.from('study_courses').update(dataToSubmit as CourseUpdate).eq('id', props.courseData.id);\r\n            if (error) throw error;\r\n        } else {\r\n             const { error } = await supabase.from('study_courses').insert(dataToSubmit as CourseInsert);\r\n            if (error) throw error;\r\n        }\r\n        emit('saved');\r\n        alert('تم حفظ تفاصيل الدورة بنجاح.');\r\n    } catch (err: any) {\r\n        console.error('Error saving course details:', err.message);\r\n        errorMessage.value = `فشل حفظ تفاصيل الدورة: ${err.message}`;\r\n    } finally {\r\n        formLoading.value = false;\r\n    }\r\n}\r\n\r\n// --- Modal Close Function ---\r\nfunction closeModal() {\r\n  if (!formLoading.value && !moduleActionLoading.value) {\r\n    emit('close');\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* === Generic Inputs & Base Styles === */\r\n.admin-input,\r\n.admin-select,\r\n.admin-textarea {\r\n    @apply block w-full px-3 py-2 text-sm rounded-lg shadow-sm\r\n           border border-gray-300 dark:border-gray-600\r\n           bg-gray-50 dark:bg-gray-700\r\n           text-gray-900 dark:text-gray-100\r\n           placeholder-gray-400 dark:placeholder-gray-500\r\n           focus:ring-2 focus:ring-offset-1 focus:ring-offset-white dark:focus:ring-offset-gray-800\r\n           focus:ring-olive-green focus:border-olive-green\r\n           focus:outline-none;\r\n}\r\n.admin-textarea { @apply min-h-[60px]; }\r\n.form-hint { @apply mt-1 text-xs text-gray-500 dark:text-gray-400; }\r\n\r\n/* === Buttons - Base and Variants === */\r\n.button-base {\r\n    @apply inline-flex items-center justify-center px-4 py-2 border text-sm font-medium rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-offset-2 dark:focus:ring-offset-gray-800 disabled:opacity-60 disabled:cursor-not-allowed transition-colors duration-150;\r\n}\r\n.button-primary {\r\n    @apply button-base border-transparent text-white bg-primary hover:bg-opacity-85 focus:ring-primary; /* primary links to olive-green var */\r\n}\r\n.button-secondary {\r\n    @apply button-base border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-200 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600 focus:ring-blue-muted;\r\n}\r\n\r\n.button-icon {\r\n    @apply p-1.5 rounded-full hover:bg-gray-100 dark:hover:bg-gray-600/50 focus:outline-none focus:ring-1 focus:ring-offset-1 focus:ring-blue-muted disabled:opacity-50 transition-colors duration-150;\r\n}\r\n.button-icon svg { @apply w-4 h-4; } /* Ensure icons have size */\r\n\r\n/* === Small Buttons === */\r\n.button-small-base {\r\n     @apply inline-flex items-center justify-center px-3 py-1.5 border text-xs font-medium rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-offset-1 dark:focus:ring-offset-gray-800 disabled:opacity-60 disabled:cursor-not-allowed transition-colors duration-150;\r\n}\r\n.button-primary-small {\r\n    /* Using blue-muted for small primary actions */\r\n    @apply button-small-base border-transparent text-white bg-blue-muted hover:bg-opacity-85 focus:ring-blue-muted;\r\n}\r\n.button-secondary-small {\r\n    @apply button-small-base border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-200 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600 focus:ring-blue-muted;\r\n}\r\n</style>"],"version":3}