{"version":3,"file":"CommentSection.vue2.mjs","sources":["../../../../components/CommentSection.vue"],"sourcesContent":["<template>\r\n  <section class=\"mt-8 py-6 border-t border-gray-200 dark:border-gray-700\">\r\n    <h2 class=\"text-xl font-semibold mb-4 text-gray-900 dark:text-white\">\r\n      التعليقات ({{ totalCommentsCount ?? '...' }})\r\n    </h2>\r\n\r\n    <!-- New Comment Form -->\r\n    <div v-if=\"user\" class=\"mb-6\">\r\n      <div class=\"flex space-x-3 rtl:space-x-reverse\">\r\n        <UserAvatar\r\n          :avatar-url=\"userProfile?.avatar_url\"\r\n          :name=\"userProfile?.full_name\"\r\n          size=\"md\"\r\n          class=\"flex-shrink-0 mt-1\"\r\n        />\r\n        <div class=\"flex-1 min-w-0\">\r\n          <textarea\r\n            v-model=\"newCommentContent\"\r\n            rows=\"3\"\r\n            class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm dark:bg-gray-800 dark:border-gray-600 dark:text-white disabled:opacity-70\"\r\n            placeholder=\"إضافة تعليق عام...\"\r\n             :disabled=\"isSubmittingComment || isSuspended\" \r\n            aria-label=\"إضافة تعليق جديد\"\r\n          ></textarea>\r\n           <!-- Suspension Message -->\r\n           <p v-if=\"isSuspended\" class=\"mt-1 text-xs text-yellow-600 dark:text-yellow-400\">\r\n             التعليق موقوف حاليًا حتى {{ formatDate(userStore.profile?.comment_suspended_until) }}.\r\n           </p>\r\n          <div class=\"mt-2 flex items-center justify-end space-x-2 rtl:space-x-reverse\">\r\n            <span v-if=\"commentSubmitError\" class=\"text-xs text-red-500 flex-1 text-right\">{{ commentSubmitError }}</span>\r\n            <button\r\n              @click=\"addComment\"\r\n              type=\"button\"\r\n              :disabled=\"isSubmittingComment || !newCommentContent.trim() || isSuspended\" \r\n              class=\"inline-flex items-center justify-center px-4 py-2 text-sm font-medium text-white bg-primary-600 border border-transparent rounded-md shadow-sm hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            >\r\n              <svg v-if=\"isSubmittingComment\" class=\"animate-spin -ml-1 mr-2 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n                <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n              </svg>\r\n              <span>{{ isSubmittingComment ? 'جاري الإضافة...' : (isSuspended ? 'التعليق موقوف' : 'إضافة تعليق') }}</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- Login/Signup Prompt -->\r\n    <div v-else class=\"mb-6 p-4 text-center bg-gray-100 dark:bg-gray-800 rounded-md\">\r\n       <p class=\"text-sm text-gray-700 dark:text-gray-300\">\r\n        يرجى\r\n        <NuxtLink :to=\"localePath('/login')\" class=\"text-primary-600 hover:underline dark:text-primary-400 font-medium\">تسجيل الدخول</NuxtLink>\r\n        أو\r\n        <NuxtLink :to=\"localePath('/signup')\" class=\"text-primary-600 hover:underline dark:text-primary-400 font-medium\">إنشاء حساب</NuxtLink>\r\n        للتعليق.\r\n      </p>\r\n    </div>\r\n\r\n    <!-- Loading State -->\r\n     <div v-if=\"isLoadingInitial\" class=\"text-center py-10\">\r\n        <LoadingSpinner class=\"mx-auto h-8 w-8 text-gray-500 dark:text-gray-400\"/> \r\n        <p class=\"text-sm text-gray-500 dark:text-gray-400 mt-2\">جاري تحميل التعليقات...</p>\r\n    </div>\r\n\r\n\r\n    <!-- Error State -->\r\n    <div v-else-if=\"fetchError\" class=\"text-center py-6 text-red-600 dark:text-red-400 bg-red-50 dark:bg-red-900/20 rounded-md p-4\">\r\n       <svg class=\"w-6 h-6 inline-block mb-1\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n        <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\r\n      </svg>\r\n      <p>{{ fetchError }}</p>\r\n      <button v-if=\"!fetchError.includes('إعداد المكون')\" @click=\"fetchInitialComments\" class=\"mt-2 px-3 py-1 text-xs font-medium text-primary-700 dark:text-primary-300 hover:underline\">إعادة المحاولة</button>\r\n    </div>\r\n\r\n    <!-- No Comments State -->\r\n    <div v-else-if=\"allComments.length === 0 && totalCommentsCount === 0\" class=\"text-center py-10 text-gray-500 dark:text-gray-400\">\r\n       <svg class=\"w-12 h-12 mx-auto mb-3 text-gray-400 dark:text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z\"></path></svg>\r\n      <p class=\"text-lg font-medium\">لا توجد تعليقات بعد</p>\r\n      <p class=\"text-sm mt-1\">كن أول من يترك تعليقاً!</p>\r\n    </div>\r\n\r\n    <!-- Comments List -->\r\n    <div v-else class=\"space-y-4\">\r\n       <CommentItem\r\n         v-for=\"comment in topLevelComments\"\r\n         :key=\"comment.id\"\r\n         :comment=\"comment\"\r\n         :replies=\"getRepliesForComment(comment.id)\"\r\n         :content-id=\"contentIdentifier\"\r\n         :is-commenting-suspended=\"isSuspended\" \r\n         @comment-updated=\"handleCommentUpdate\"\r\n         @comment-deleted=\"handleCommentDelete\"\r\n         @reply-added=\"handleReplyAdded\"\r\n         class=\"border-b border-gray-200 dark:border-gray-700 last:border-b-0 pb-4\"\r\n       />\r\n\r\n\r\n      <!-- Load More Button -->\r\n      <div v-if=\"hasMoreComments\" class=\"text-center pt-4\">\r\n        <button\r\n          @click=\"loadMoreComments\"\r\n          :disabled=\"isLoadingMore\"\r\n          class=\"inline-flex items-center justify-center px-4 py-2 text-sm font-medium text-primary-700 bg-primary-100 border border-transparent rounded-md hover:bg-primary-200 dark:text-primary-300 dark:bg-primary-900 dark:hover:bg-primary-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n        >\r\n          <svg v-if=\"isLoadingMore\" class=\"animate-spin -ml-1 mr-2 h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n             <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n             <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n          </svg>\r\n          <span>{{ isLoadingMore ? 'جاري التحميل...' : 'تحميل المزيد من التعليقات' }}</span>\r\n        </button>\r\n        <p v-if=\"fetchMoreError\" class=\"mt-2 text-xs text-red-500\">{{ fetchMoreError }}</p>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, computed, onMounted, watch } from 'vue'\r\nimport type { Database } from '~/types/database.types'\r\nimport UserAvatar from './UserAvatar.vue'\r\nimport CommentItem from './CommentItem.vue'\r\nimport LoadingSpinner from './LoadingSpinner.vue'; // Import LoadingSpinner\r\nimport { storeToRefs } from 'pinia'\r\nimport { useUserStore } from '~/stores/user'\r\nimport type { PostgrestError } from '@supabase/supabase-js'\r\n\r\nconst localePath = (path: string) => path;\r\n\r\ntype CommentWithProfile = Database['public']['Tables']['comments']['Row'] & {\r\n  profiles: Pick<Database['public']['Tables']['profiles']['Row'], 'id' | 'full_name' | 'avatar_url'> | null\r\n}\r\ntype ContentId = { lesson_id?: number | string; book_id?: number | string; study_course_id?: number | string; }\r\n\r\nconst props = defineProps<{\r\n  lessonId?: number | string\r\n  bookId?: number | string\r\n  courseId?: number | string\r\n}>()\r\n\r\nconst supabase = useSupabaseClient<Database>()\r\nconst user = useSupabaseUser()\r\nconst userStore = useUserStore() // Get the whole store instance\r\nconst { profile: userProfile } = storeToRefs(userStore) // Keep this for convenience\r\n\r\nconst allComments = ref<CommentWithProfile[]>([])\r\nconst totalCommentsCount = ref<number | null>(null)\r\nconst isLoadingInitial = ref(true)\r\nconst isLoadingMore = ref(false)\r\nconst fetchError = ref<string | null>(null)\r\nconst fetchMoreError = ref<string | null>(null)\r\nconst commentsPerPage = ref(10)\r\nconst currentPage = ref(1)\r\nconst hasMoreComments = ref(true)\r\nconst newCommentContent = ref('')\r\nconst isSubmittingComment = ref(false)\r\nconst commentSubmitError = ref<string | null>(null)\r\n\r\nconst contentInfo = computed(() => {\r\n  if (props.lessonId !== undefined) return { column: 'lesson_id', value: Number(props.lessonId) };\r\n  if (props.bookId !== undefined) return { column: 'book_id', value: Number(props.bookId) };\r\n  if (props.courseId !== undefined) return { column: 'study_course_id', value: Number(props.courseId) };\r\n  return null;\r\n})\r\n\r\nconst contentIdentifier = computed((): ContentId => ({\r\n  lesson_id: props.lessonId, book_id: props.bookId, study_course_id: props.courseId\r\n}))\r\n\r\n// --- Suspension Check ---\r\nconst isSuspended = computed(() => {\r\n  // Access profile directly from the store instance\r\n  const profile = userStore.profile;\r\n  if (!profile || !profile.comment_suspended_until) {\r\n    return false;\r\n  }\r\n  try {\r\n    return new Date(profile.comment_suspended_until) > new Date();\r\n  } catch {\r\n    return false;\r\n  }\r\n});\r\n\r\nconst topLevelComments = computed(() => {\r\n  return allComments.value\r\n    .filter(c => c.parent_comment_id === null)\r\n    .sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime());\r\n})\r\n\r\nconst getRepliesForComment = (commentId: number): CommentWithProfile[] => {\r\n  return allComments.value.filter(c => c.parent_comment_id === commentId)\r\n}\r\n\r\nconst fetchTotalCount = async (column: string, value: number) => {\r\n  // ... (implementation remains the same) ...\r\n   try {\r\n    const { count, error } = await supabase\r\n      .from('comments')\r\n      .select('*', { count: 'exact', head: true }) // Only get count\r\n      .eq(column, value)\r\n      .eq('is_approved', true) // Count only approved comments\r\n\r\n    if (error) throw error;\r\n    return count ?? 0;\r\n  } catch (err) {\r\n    console.error('Error fetching total comments count:', err);\r\n    fetchError.value = 'فشل في جلب عدد التعليقات.'; // Set error for initial load\r\n    return null; // Return null on error\r\n  }\r\n}\r\n\r\nconst fetchCommentsBatch = async (column: string, value: number, page = 1) => {\r\n  // ... (implementation remains the same) ...\r\n  const from = (page - 1) * commentsPerPage.value;\r\n  const to = from + commentsPerPage.value - 1;\r\n\r\n  // 1. Fetch Top-Level Comments\r\n  const { data: topLevelData, error: topLevelError } = await supabase\r\n    .from('comments')\r\n    .select(`\r\n      *,\r\n      profiles!inner (id, full_name, avatar_url)\r\n    `)\r\n    .eq(column, value)\r\n    .eq('is_approved', true)\r\n    .is('parent_comment_id', null) // Only top-level\r\n    .order('created_at', { ascending: false }) // Newest first\r\n    .range(from, to);\r\n\r\n  if (topLevelError) throw topLevelError;\r\n\r\n  const newTopLevelComments = (topLevelData || []).filter(c => c.profiles !== null) as CommentWithProfile[];\r\n\r\n  // 2. Fetch Replies for the fetched Top-Level Comments\r\n  const parentIds = newTopLevelComments.map(c => c.id);\r\n  let repliesData: CommentWithProfile[] = [];\r\n  if (parentIds.length > 0) {\r\n    const { data, error: repliesError } = await supabase\r\n      .from('comments')\r\n      .select(`\r\n        *,\r\n        profiles!inner (id, full_name, avatar_url)\r\n      `)\r\n      .in('parent_comment_id', parentIds)\r\n      .eq('is_approved', true)\r\n      .order('created_at', { ascending: true }); // Replies oldest first\r\n\r\n    if (repliesError) {\r\n      console.error(\"Error fetching replies:\", repliesError);\r\n      fetchMoreError.value = 'حدث خطأ أثناء تحميل بعض الردود.';\r\n    } else {\r\n      repliesData = (data || []).filter(c => c.profiles !== null) as CommentWithProfile[];\r\n    }\r\n  }\r\n\r\n  return { newTopLevelComments, repliesData };\r\n}\r\n\r\nconst fetchInitialComments = async () => {\r\n  // ... (implementation mostly remains the same) ...\r\n   isLoadingInitial.value = true;\r\n  fetchError.value = null;\r\n  allComments.value = [];\r\n  currentPage.value = 1;\r\n  hasMoreComments.value = true;\r\n  totalCommentsCount.value = null;\r\n\r\n  const providedPropsCount = [props.lessonId, props.bookId, props.courseId]\r\n                            .filter(p => p !== undefined).length;\r\n  if (providedPropsCount !== 1 || !contentInfo.value) {\r\n      fetchError.value = 'خطأ في إعداد المكون: يجب تحديد معرف محتوى واحد فقط.';\r\n      isLoadingInitial.value = false; hasMoreComments.value = false; return;\r\n  }\r\n\r\n  const { column, value } = contentInfo.value;\r\n\r\n  try {\r\n    const count = await fetchTotalCount(column, value);\r\n    if (count === null) { isLoadingInitial.value = false; hasMoreComments.value = false; return; }\r\n    totalCommentsCount.value = count;\r\n\r\n    if (totalCommentsCount.value === 0) {\r\n      hasMoreComments.value = false; allComments.value = [];\r\n    } else {\r\n      const { newTopLevelComments, repliesData } = await fetchCommentsBatch(column, value, 1);\r\n      const newComments = [...newTopLevelComments, ...repliesData];\r\n      const existingIds = new Set<number>(); // Initialize here\r\n      newComments.forEach(comment => {\r\n        if (!existingIds.has(comment.id)) { allComments.value.push(comment); existingIds.add(comment.id); }\r\n      });\r\n      hasMoreComments.value = newTopLevelComments.length === commentsPerPage.value;\r\n    }\r\n  } catch (err: any) {\r\n    console.error('Error fetching initial comments:', err);\r\n    fetchError.value = `فشل تحميل التعليقات: (${(err as PostgrestError).message || 'خطأ غير معروف'})`;\r\n    allComments.value = []; totalCommentsCount.value = 0; hasMoreComments.value = false;\r\n  } finally { isLoadingInitial.value = false; }\r\n}\r\n\r\nconst loadMoreComments = async () => {\r\n  // ... (implementation remains the same) ...\r\n   if (!hasMoreComments.value || isLoadingMore.value || !contentInfo.value) return;\r\n\r\n  isLoadingMore.value = true;\r\n  fetchMoreError.value = null;\r\n  const nextPage = currentPage.value + 1;\r\n  const { column, value } = contentInfo.value;\r\n\r\n  try {\r\n    const { newTopLevelComments, repliesData } = await fetchCommentsBatch(column, value, nextPage);\r\n    if (newTopLevelComments.length === 0) { hasMoreComments.value = false; }\r\n    else {\r\n      const newComments = [...newTopLevelComments, ...repliesData];\r\n      const existingIds = new Set(allComments.value.map(c => c.id));\r\n      newComments.forEach(comment => { if (!existingIds.has(comment.id)) { allComments.value.push(comment); existingIds.add(comment.id); } });\r\n      currentPage.value = nextPage;\r\n      hasMoreComments.value = newTopLevelComments.length === commentsPerPage.value;\r\n    }\r\n  } catch (err: any) {\r\n    console.error('Error loading more comments:', err);\r\n    fetchMoreError.value = `فشل تحميل المزيد: (${(err as PostgrestError).message || 'خطأ غير معروف'})`;\r\n  } finally { isLoadingMore.value = false; }\r\n}\r\n\r\n// Add Comment Function - WITH SUSPENSION CHECK\r\nconst addComment = async () => {\r\n  // Add suspension check at the beginning\r\n  if (isSuspended.value) {\r\n      commentSubmitError.value = \"لا يمكنك إضافة تعليق حاليًا بسبب الإيقاف.\";\r\n      return;\r\n  }\r\n\r\n  if (!user.value || !userProfile.value || !newCommentContent.value.trim() || !contentInfo.value || isSubmittingComment.value) return;\r\n\r\n  if (!userProfile.value.id) {\r\n      commentSubmitError.value = 'خطأ: لم يتم العثور على معرف الملف الشخصي.';\r\n      console.error('Profile ID is missing from user store');\r\n      return;\r\n  }\r\n\r\n  isSubmittingComment.value = true;\r\n  commentSubmitError.value = null;\r\n  const { column, value } = contentInfo.value;\r\n\r\n  const commentData = {\r\n    user_id: user.value.id,\r\n    profile_id: userProfile.value.id,\r\n    content: newCommentContent.value.trim(),\r\n    parent_comment_id: null,\r\n    [column]: value,\r\n  };\r\n\r\n  try {\r\n    const { data: newComment, error } = await supabase\r\n      .from('comments').insert(commentData).select(`*, profiles!inner (id, full_name, avatar_url)`).single();\r\n\r\n    if (error) throw error;\r\n    if (!newComment || !newComment.profiles) throw new Error('لم يتم إرجاع بيانات التعليق الجديد أو الملف الشخصي.');\r\n\r\n    allComments.value.unshift(newComment as CommentWithProfile);\r\n    newCommentContent.value = '';\r\n    if (totalCommentsCount.value !== null) totalCommentsCount.value++;\r\n\r\n  } catch (err: any) {\r\n    console.error('Error adding comment:', err);\r\n    commentSubmitError.value = `فشل إضافة التعليق: (${(err as PostgrestError).message || 'يرجى المحاولة مرة أخرى'})`;\r\n  } finally { isSubmittingComment.value = false; }\r\n}\r\n\r\nconst handleCommentUpdate = (updatedComment: CommentWithProfile) => {\r\n  // ... (implementation remains the same) ...\r\n  const index = allComments.value.findIndex(c => c.id === updatedComment.id);\r\n  if (index !== -1) { allComments.value.splice(index, 1, updatedComment); }\r\n}\r\n\r\nconst handleCommentDelete = (deletedCommentId: number) => {\r\n  // ... (implementation remains the same) ...\r\n  const idsToDelete = new Set<number>([deletedCommentId]);\r\n  const findReplies = (parentId: number) => { allComments.value.forEach(c => { if (c.parent_comment_id === parentId) { idsToDelete.add(c.id); findReplies(c.id); } }); };\r\n  findReplies(deletedCommentId);\r\n  const initialLength = allComments.value.length;\r\n  allComments.value = allComments.value.filter(c => !idsToDelete.has(c.id));\r\n  const deletedCount = initialLength - allComments.value.length;\r\n  if (totalCommentsCount.value !== null && deletedCount > 0) { totalCommentsCount.value = Math.max(0, totalCommentsCount.value - deletedCount); }\r\n}\r\n\r\nconst handleReplyAdded = (newReply: CommentWithProfile) => {\r\n   // ... (implementation remains the same) ...\r\n   if (!allComments.value.some(c => c.id === newReply.id)) {\r\n       allComments.value.push(newReply);\r\n       if (totalCommentsCount.value !== null) totalCommentsCount.value++;\r\n   }\r\n}\r\n\r\n// --- Helper Functions ---\r\nconst formatDate = (dateString: string | null | undefined): string => {\r\n  if (!dateString) return '';\r\n  try { const date = new Date(dateString); if (isNaN(date.getTime())) return ''; return date.toLocaleString('ar-EG', { dateStyle: 'short', timeStyle: 'short', hour12: true }); }\r\n  catch { return ''; }\r\n};\r\n\r\n\r\n// ---- Lifecycle Hooks & Watchers ----\r\nonMounted(() => {\r\n  // Ensure profile is loaded before fetching comments IF suspension check relies on it immediately\r\n   // We added the check inside addComment, so initial fetch is probably fine here\r\n  fetchInitialComments();\r\n});\r\n\r\nwatch(contentInfo, (newVal, oldVal) => {\r\n    if (newVal?.value !== oldVal?.value || newVal?.column !== oldVal?.column) {\r\n       if (newVal) { fetchInitialComments(); }\r\n       else {\r\n         allComments.value = []; totalCommentsCount.value = 0;\r\n         fetchError.value = 'خطأ في إعداد المكون: لم يتم تحديد معرف محتوى.';\r\n         isLoadingInitial.value = false; hasMoreComments.value = false;\r\n       }\r\n    }\r\n}, { immediate: false });\r\n\r\n</script>"],"names":[],"mappings":"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"}