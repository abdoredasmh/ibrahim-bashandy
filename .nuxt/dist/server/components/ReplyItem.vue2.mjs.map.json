{"file":"ReplyItem.vue2.mjs","mappings":";;;;;;;;;;;;;;;;;;AAuFA,UAAM,QAAQ;AAKd,UAAM,OAAO;AAMb,UAAM,WAAW,kBAA4B;AAC7C,UAAM,OAAO,gBAAgB;AAGvB,UAAA,YAAY,IAAI,KAAK;AACrB,UAAA,gBAAgB,IAAI,EAAE;AACtB,UAAA,eAAe,IAAI,KAAK;AACxB,UAAA,aAAa,IAAI,KAAK;AACtB,UAAA,YAAY,IAAmB,IAAI;AACnC,UAAA,eAAe,IAAgC,IAAI;AAGnD,UAAA,UAAU,SAAS,MAAM,KAAK,SAAS,KAAK,MAAM,OAAO,MAAM,MAAM,OAAO;AAC5E,UAAA,WAAW,SAAS,MAAM,MAAM,MAAM,eAAe,MAAM,MAAM,UAAU;AAG3E,UAAA,qBAAqB,SAAS,MAAM;;AACpC,UAAA;AACF,eAAO,0BAA0B,IAAI,KAAK,MAAM,MAAM,UAAU,GAAG,EAAE,WAAW,MAAM,QAAQ,GAAA,CAAI;AAAA,eAC3F,GAAG;AACF,gBAAA,MAAM,0BAA0B,CAAC;AAClC,gBAAA,WAAM,MAAM,eAAZ,mBAAwB;AAAA,MAAS;AAAA,IAC1C,CACD;AAGK,UAAA,gBAAgB,SAAS,MAAM;;AAC7B,UAAA;AACA,eAAO,IAAI,KAAK,MAAM,MAAM,UAAU,EAAE,eAAe,SAAS,EAAC,WAAW,QAAQ,WAAW,SAAQ;AAAA,MAAA,QACnG;AACG,gBAAA,WAAM,MAAM,eAAZ,mBAAwB;AAAA,MAAS;AAAA,IAC5C,CACH;AAKD,UAAM,eAAe,YAAY;;AAC3B,UAAA,CAAC,QAAQ,MAAO;AACpB,gBAAU,QAAQ;AACJ,oBAAA,QAAQ,MAAM,MAAM;AAClC,gBAAU,QAAQ;AAClB,YAAM,SAAS;AACf,yBAAa,UAAb,mBAAoB;AAAA,IACtB;AAmDA,UAAM,gBAAgB,YAAY;AAChC,UAAI,CAAC,QAAQ,SAAS,WAAW,MAAO;AAEpC,UAAA,SAAO,QAAQ,wCAAwC,GAAG;AAC3D,mBAAW,QAAQ;AACf,YAAA;AACF,gBAAM,EAAE,MAAU,IAAA,MAAM,SACrB,KAAK,UAAU,EACf,OAAA,EACA,GAAG,MAAM,MAAM,MAAM,EAAE;AAE1B,cAAI,MAAa,OAAA;AAGZ,eAAA,gBAAgB,MAAM,MAAM,EAAE;AAAA,iBAG5B,KAAU;AACT,kBAAA,MAAM,yBAAyB,GAAG;AAC1C,gBAAM,kBAAmB,IAAuB,WAAW,eAAe,GAAG;AAAA,QAAA,UAC7E;AACE,qBAAW,QAAQ;AAAA,QAAA;AAAA,MACvB;AAAA,IAEL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["../../../../components/ReplyItem.vue"],"sourcesContent":["<template>\r\n  <div class=\"flex space-x-3 rtl:space-x-reverse py-3 border-t border-gray-200 dark:border-gray-700 first:border-t-0 first:pt-0 last:pb-0\">\r\n    <UserAvatar\r\n      :avatar-url=\"reply.profiles?.avatar_url\"\r\n      :name=\"reply.profiles?.full_name\"\r\n      size=\"sm\"\r\n      class=\"mt-1\"\r\n    />\r\n    <div class=\"flex-1 min-w-0\">\r\n      <div class=\"flex items-center justify-between gap-2\">\r\n        <span class=\"text-sm font-semibold text-gray-900 dark:text-white truncate\">\r\n          {{ reply.profiles?.full_name || 'مستخدم' }}\r\n        </span>\r\n        <!-- استخدم CommentActions هنا أيضاً -->\r\n        <CommentActions\r\n          :item=\"reply\"\r\n          item-type=\"reply\"\r\n          @edit=\"startEditing\"\r\n          @delete=\"requestDelete\"\r\n        />\r\n      </div>\r\n      <div class=\"text-xs text-gray-500 dark:text-gray-400 mb-1\">\r\n        <time :datetime=\"reply.created_at\" :title=\"fullTimestamp\">{{ formattedTimestamp }}</time>\r\n        <span v-if=\"isEdited\" class=\"mx-1\" title=\"تم تعديل هذا الرد\">(تم التعديل)</span>\r\n      </div>\r\n\r\n      <!-- وضع العرض -->\r\n      <p v-if=\"!isEditing\" class=\"text-sm text-gray-700 dark:text-gray-300 whitespace-pre-wrap break-words\">\r\n        {{ reply.content }}\r\n      </p>\r\n\r\n      <!-- وضع التعديل -->\r\n      <div v-else>\r\n        <textarea\r\n          ref=\"editInputRef\"\r\n          v-model=\"editedContent\"\r\n          rows=\"2\"\r\n          class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm dark:bg-gray-800 dark:border-gray-600 dark:text-white disabled:opacity-70\"\r\n          placeholder=\"تعديل الرد...\"\r\n          :disabled=\"isSavingEdit\"\r\n          @keydown.esc=\"cancelEdit\"\r\n          @keydown.enter.prevent.exact=\"saveEdit\"\r\n          aria-label=\"تعديل الرد\"\r\n        ></textarea>\r\n        <div class=\"mt-2 flex items-center justify-end space-x-2 rtl:space-x-reverse\">\r\n           <span v-if=\"editError\" class=\"text-xs text-red-500 flex-1 text-right\">{{ editError }}</span>\r\n           <button\r\n             @click=\"cancelEdit\"\r\n             type=\"button\"\r\n             :disabled=\"isSavingEdit\"\r\n             class=\"px-3 py-1 text-xs font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 dark:bg-gray-700 dark:text-gray-200 dark:border-gray-600 dark:hover:bg-gray-600 disabled:opacity-50\"\r\n           >\r\n             إلغاء\r\n           </button>\r\n           <button\r\n             @click=\"saveEdit\"\r\n             type=\"button\"\r\n             :disabled=\"isSavingEdit || !editedContent.trim()\"\r\n             class=\"inline-flex items-center justify-center px-3 py-1 text-xs font-medium text-white bg-primary-600 border border-transparent rounded-md shadow-sm hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50\"\r\n           >\r\n             <svg v-if=\"isSavingEdit\" class=\"animate-spin -ml-0.5 mr-1.5 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n                <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n              </svg>\r\n             <span>{{ isSavingEdit ? 'جاري الحفظ...' : 'حفظ' }}</span>\r\n           </button>\r\n         </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, computed, nextTick } from 'vue'\r\nimport type { Database } from '~/types/database.types' // تأكد من المسار الصحيح\r\nimport { formatDistanceToNowStrict } from 'date-fns'\r\nimport { ar } from 'date-fns/locale'\r\nimport UserAvatar from './UserAvatar.vue'\r\nimport CommentActions from './CommentActions.vue' // إعادة استخدام المكون\r\nimport type { PostgrestError } from '@supabase/supabase-js';\r\n\r\n// Define the type for a comment/reply with profile data\r\ntype CommentWithProfile = Database['public']['Tables']['comments']['Row'] & {\r\n  profiles: Pick<Database['public']['Tables']['profiles']['Row'], 'id' | 'full_name' | 'avatar_url'> | null\r\n}\r\n\r\n// Props definition\r\nconst props = defineProps<{\r\n  reply: CommentWithProfile\r\n}>()\r\n\r\n// Emits definition\r\nconst emit = defineEmits<{\r\n  (e: 'replyUpdated', updatedReply: CommentWithProfile): void\r\n  (e: 'replyDeleted', deletedReplyId: number): void\r\n}>()\r\n\r\n// Supabase & User context\r\nconst supabase = useSupabaseClient<Database>()\r\nconst user = useSupabaseUser()\r\n\r\n// Component state\r\nconst isEditing = ref(false)\r\nconst editedContent = ref('')\r\nconst isSavingEdit = ref(false)\r\nconst isDeleting = ref(false) // Optional: for delete loading state\r\nconst editError = ref<string | null>(null)\r\nconst editInputRef = ref<HTMLTextAreaElement | null>(null); // For focusing the edit input\r\n\r\n// Computed properties\r\nconst isOwner = computed(() => user.value && user.value.id === props.reply.user_id)\r\nconst isEdited = computed(() => props.reply.created_at !== props.reply.updated_at)\r\n\r\n// Format timestamp (relative)\r\nconst formattedTimestamp = computed(() => {\r\n  try {\r\n    return formatDistanceToNowStrict(new Date(props.reply.created_at), { addSuffix: true, locale: ar })\r\n  } catch (e) {\r\n    console.error(\"Error formatting date:\", e)\r\n    return props.reply.created_at?.toString() // Fallback\r\n  }\r\n})\r\n\r\n// Format timestamp (full)\r\nconst fullTimestamp = computed(() => {\r\n    try {\r\n        return new Date(props.reply.created_at).toLocaleString('ar-EG', {dateStyle: 'long', timeStyle: 'short'});\r\n    } catch {\r\n        return props.reply.created_at?.toString(); // Fallback\r\n    }\r\n})\r\n\r\n// --- Methods ---\r\n\r\n// Start editing mode\r\nconst startEditing = async () => {\r\n  if (!isOwner.value) return\r\n  isEditing.value = true\r\n  editedContent.value = props.reply.content // Initialize with current content\r\n  editError.value = null\r\n  await nextTick() // Wait for the textarea to be rendered\r\n  editInputRef.value?.focus() // Focus the input\r\n}\r\n\r\n// Cancel editing mode\r\nconst cancelEdit = () => {\r\n  isEditing.value = false\r\n  editedContent.value = '' // Clear potentially edited content\r\n  editError.value = null\r\n}\r\n\r\n// Save the edited reply\r\nconst saveEdit = async () => {\r\n  if (!isOwner.value || !editedContent.value.trim() || isSavingEdit.value) return\r\n\r\n  const contentToSave = editedContent.value.trim();\r\n  // Don't save if content hasn't changed\r\n  if (contentToSave === props.reply.content) {\r\n    cancelEdit();\r\n    return;\r\n  }\r\n\r\n  isSavingEdit.value = true\r\n  editError.value = null\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('comments')\r\n      .update({ content: contentToSave, updated_at: new Date().toISOString() })\r\n      .eq('id', props.reply.id)\r\n      .select('id, content, updated_at') // Select updated fields\r\n      .single()\r\n\r\n    if (error) throw error\r\n    if (!data) throw new Error('لم يتم إرجاع بيانات الرد المحدث.');\r\n\r\n    // Emit event with the updated reply data\r\n    // Merge existing props with updated fields for reactivity\r\n    emit('replyUpdated', {\r\n        ...props.reply,\r\n        content: data.content,\r\n        updated_at: data.updated_at\r\n     })\r\n    isEditing.value = false // Exit editing mode\r\n\r\n  } catch (err: any) {\r\n    console.error('Error updating reply:', err)\r\n    editError.value = `فشل حفظ التعديل: (${(err as PostgrestError).message || 'خطأ غير معروف'})`\r\n  } finally {\r\n    isSavingEdit.value = false\r\n  }\r\n}\r\n\r\n// Request to delete the reply\r\nconst requestDelete = async () => {\r\n  if (!isOwner.value || isDeleting.value) return\r\n\r\n  if (window.confirm('هل أنت متأكد من رغبتك في حذف هذا الرد؟')) {\r\n     isDeleting.value = true; // Optional: set deleting state\r\n     try {\r\n       const { error } = await supabase\r\n         .from('comments')\r\n         .delete()\r\n         .eq('id', props.reply.id)\r\n\r\n       if (error) throw error\r\n\r\n       // Emit event for deletion (parent component handles removal from list)\r\n       emit('replyDeleted', props.reply.id)\r\n       // No need to do anything else here, the parent will remove this component instance\r\n\r\n     } catch (err: any) {\r\n       console.error('Error deleting reply:', err)\r\n       alert(`فشل حذف الرد: (${(err as PostgrestError).message || 'خطأ غير معروف'})`)\r\n     } finally {\r\n         isDeleting.value = false; // Optional: unset deleting state\r\n     }\r\n   }\r\n}\r\n</script>"],"version":3}