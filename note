

أولاً: خطة العمل التفصيلية المحدثة (Revised Plan)

المرحلة 1: تأسيس قاعدة البيانات والبنية الأساسية

تصميم وإنشاء جداول قاعدة البيانات (SQL - Supabase): (سيتم تحديث قائمة الجداول أدناه) بناء جميع الجداول اللازمة للمستخدمين، المحتوى (دروس/يوتيوب، كتب/درايف، أبحاث، أسئلة للشيخ)، التصنيفات، الدورات الدراسية، التسجيل بالدورات، التعليقات، الاختبارات، الإشعارات، الرسائل الخاصة، إلخ.

إعداد سياسات الأمان (Row Level Security - RLS): لكل جدول، تحديد صلاحيات القراءة والكتابة والتعديل والحذف بناءً على حالة المستخدم (زائر، مسجل، صاحب التعليق، مسؤول).

المرحلة 2: بناء الواجهة الأساسية، الملاحة، والمحتوى العام

إنشاء التخطيط الافتراضي (Default Layout): بناء layouts/default.vue مع Header و Footer وتطبيق النمط المرئي المتفق عليه (الألوان، الخطوط).

بناء مكون الرأس (AppHeader): إنشاء components/AppHeader.vue مع الروابط المحدثة: (الرئيسية، الدروس، الكتب، الدراسة، اسأل الشيخ، عن الشيخ)، أيقونة البحث، وأزرار/روابط (تسجيل الدخول، إنشاء حساب، اسم المستخدم/الملف الشخصي) التي تتغير حسب حالة المصادقة.

بناء مكون التذييل (AppFooter): إنشاء components/AppFooter.vue.

بناء الصفحة الرئيسية (Homepage - pages/index.vue):

هيرو سيكشن: صورة الشيخ ونبذة (محتوى يُدار من الداش بورد).

آخر 4 أسئلة مجابة (تُجلب من جدول questions_to_sheikh العامة).

مقتطف من قائمة المتفوقين (أعلى 3-5 طلاب من leaderboard مع زر "عرض المزيد" يوجه لـ pages/leaderboard.vue).

قوائم عرض لمقتطفات من أحدث المحتوى (دروس، كتب، دراسة - تُدار من الداش بورد).

بناء صفحة "عن الشيخ" (pages/about.vue): صفحة لعرض السيرة الذاتية والصور بتصميم متناوب (صورة ثم نص، نص ثم صورة)، المحتوى يُدار من الداش بورد.

تفعيل البحث المبدئي: إضافة أيقونة البحث في الهيدر. عند النقر، يظهر حقل بحث. (المنطق الفعلي للبحث سيتم تنفيذه لاحقًا).

المرحلة 3: نظام المصادقة وإدارة المستخدم

إنشاء صفحة التسجيل الجديد (Signup - pages/signup.vue): نموذج (اسم، بريد، كلمة مرور)، ربط بـ Supabase signUp, التعامل مع الحالات.

إنشاء صفحة تسجيل الدخول (Login - pages/login.vue): نموذج (بريد، كلمة مرور)، ربط بـ Supabase signInWithPassword, التعامل مع الحالات والتوجيه.

إدارة حالة المستخدم (User State - Pinia stores/user.ts): تخزين بيانات المستخدم، توفير وظائف وحالة المصادقة.

تحديث الواجهة بناءً على المصادقة: تعديل AppHeader الديناميكي.

بناء صفحة الملف الشخصي (User Profile - pages/profile.vue):

محمية بـ Middleware (middleware/auth.ts).

عرض البيانات الحالية (الاسم، البريد، الصورة الرمزية).

نماذج لتعديل الاسم، كلمة المرور، البريد الإلكتروني (مع التأكيد).

إمكانية رفع/تغيير الصورة الرمزية (تُرفع لـ Supabase Storage).

عرض الدورات المسجل بها (مع زر لإلغاء التسجيل).

عرض التقدم الدراسي العام (سيتم تفصيله).

(لاحقًا) قسم للرسائل الخاصة الواردة من ردود "اسأل الشيخ".

زر تسجيل الخروج.

المرحلة 4: بناء أقسام المحتوى الرئيسية

قسم الدروس - صفحة القائمة (pages/lessons/index.vue):

عرض أحدث درس بشكل بارز.

عرض قائمة الدروس/قوائم التشغيل (Playlists) من YouTube (الروابط تُدار من الداش بورد)، مصنفة ربما.

استخدام بطاقات عرض متناسقة (components/LessonCard.vue).

قسم الدروس - صفحة التفاصيل (pages/lessons/[id].vue):

عرض الفيديو المضمن من YouTube.

عرض الوصف والتفاصيل (تُدار من الداش بورد).

قسم التعليقات: عرض التعليقات الحالية، نموذج لإضافة تعليق جديد (يتطلب تسجيل الدخول)، إمكانية الرد على التعليقات (للمستخدمين والمسؤول). (تُدار من الداش بورد).

قسم الكتب - صفحة القائمة (pages/books/index.vue):

عرض الكتب والأبحاث والتفريغات (ملفات PDF).

جلب المعلومات والروابط (Google Drive Links تدار من الداش بورد).

استخدام بطاقات عرض (components/BookCard.vue) مع زر للوصول للملف.

(اختياري) قسم تعليقات مشابه لقسم الدروس إذا أردت.

قسم الدراسة - صفحة القائمة (pages/study/index.vue):

عرض أحدث محاضرة/درس في قسم الدراسة.

عرض الدورات/المسارات التعليمية مصنفة (فقه، حديث، تفسير...) (تُدار من الداش بورد).

كل دورة تعرض قائمة الدروس/المحاضرات الخاصة بها (روابط يوتيوب).

زر "انتساب للدورة" (Enroll) بجانب كل دورة للمستخدم المسجل.

قسم الدراسة - صفحة تفاصيل الدورة/الدرس: (قد تكون نفس صفحة تفاصيل الدرس العادية pages/lessons/[id].vue لكن يتم الوصول لها من قسم الدراسة).

عرض الفيديو/المحتوى.

قسم التعليقات الخاص بالدورة.

(لاحقًا) روابط للاختبارات المرتبطة بهذا الدرس/الدورة.

قسم اسأل الشيخ - الواجهة العامة (pages/ask/index.vue):

عرض قائمة بالأسئلة التي تم الرد عليها بشكل عام (بدون اسم السائل).

إمكانية البحث أو الفلترة في الأسئلة المجابة.

قسم اسأل الشيخ - نموذج الإرسال (داخل pages/ask/index.vue أو صفحة فرعية):

يظهر فقط للمستخدم المسجل.

نموذج بسيط لإرسال السؤال (يُرسل لجدول questions_to_sheikh).

المرحلة 5: الميزات التفاعلية والتحفيزية

تفعيل "انتساب للدورة": عند الضغط على زر الانتساب في pages/study/index.vue, يتم إضافة سجل في جدول course_enrollments.

تتبع التقدم الدراسي: (يحتاج لتحديد أدق) يمكن أن يكون:

إكمال الدروس داخل الدورات المسجل بها (باستخدام lesson_completions).

عرض نسبة الإنجاز في كل دورة في صفحة الملف الشخصي.

نظام الاختبارات - الواجهة والعرض:

صفحة لعرض الاختبارات المتاحة للطالب (مرتبطة بالدورات المسجل بها) (pages/study/exams.vue أو مشابه).

واجهة عرض الاختبار (pages/quizzes/[id].vue) مع أنواع الأسئلة المختلفة (MCQ, T/F, Written).

نظام الاختبارات - المنطق والتصحيح:

حساب النتيجة للأسئلة الآلية (MCQ, T/F).

تحديد الأسئلة التي تحتاج مراجعة يدوية.

تسجيل المحاولة والنتيجة (المبدئية) والحالة في quiz_attempts.

عرض النتيجة (للجزء الآلي) للطالب.

قائمة الترتيب (Leaderboard - pages/leaderboard.vue):

حساب الترتيب بناءً على معايير محددة (عدد الدروس المكتملة، نتائج الاختبارات، النشاط في الدورات - تُحدد بدقة لاحقًا).

عرض القائمة الكاملة للطلاب الأوائل.

نظام الإشعارات (Notifications):

تفعيل إشعارات Realtime (عند إضافة رد على سؤالك، قرب موعد امتحان، إضافة درس جديد لدورة مسجل بها).

عرض الإشعارات في الهيدر وقائمة منسدلة.

نظام الرسائل الخاصة (لردود اسأل الشيخ):

إضافة قسم "الرسائل الواردة" في صفحة الملف الشخصي (pages/profile.vue).

عندما يرد المسؤول على سؤال في الداش بورد، يُضاف سجل في user_private_messages ويظهر إشعار للطالب.

المرحلة 6: بناء لوحة التحكم الشاملة (Admin Panel)

إعداد تخطيط ومسارات لوحة التحكم (layouts/admin.vue, pages/admin/, middleware/admin.ts):

لوحة التحكم الرئيسية (pages/admin/index.vue): عرض إحصائيات سريعة (عدد المسجلين، عدد الدروس، آخر الأسئلة، عدد المشاهدات [إذا تم تطبيق تتبع]).

إدارة المحتوى (دروس، كتب، دراسة، عن الشيخ، الصفحة الرئيسية): واجهات CRUD لإضافة وتعديل وحذف المحتوى النصي والمرئي (روابط يوتيوب، روابط جوجل درايف)، وتصنيف المحتوى. التحكم في ظهور العناصر في الصفحة الرئيسية.

إدارة المستخدمين والطلاب: عرض قائمة المستخدمين، البحث، تغيير الأدوار (admin/user)، عرض تفاصيل الطالب (الدورات المسجل بها، التقدم، محاولات الاختبار).

إدارة قسم "اسأل الشيخ": عرض الأسئلة الواردة، كتابة الردود، تحديد ما إذا كان الرد سيُنشر بشكل عام (بدون اسم) أم خاص فقط.

إدارة التعليقات: عرض جميع التعليقات، الموافقة عليها، حذفها، الرد عليها مباشرة.

إدارة الاختبارات والأسئلة:

إنشاء اختبارات وربطها بالدورات/الدروس وتحديد المواعيد.

إضافة أسئلة للاختبارات بأنواعها (MCQ, T/F, Written).

تحديد الإجابات الصحيحة للأسئلة الآلية.

واجهة لمراجعة وتصحيح الإجابات الكتابية يدويًا.

إدارة الإشعارات: إرسال إشعارات مخصصة لطلاب معينين أو لجميع المسجلين أو لمجموعات (مثل طلاب دورة معينة).

إدارة الترتيب: (اختياري) التحكم في معايير حساب الترتيب.

إدارة الإعدادات العامة: التحكم في رابط البث المباشر، تفعيل/تعطيل أقسام معينة مؤقتًا.

تتبع المشاهدات: (يتطلب حلًا إضافيًا) ربط Google Analytics أو خدمة مشابهة، أو بناء نظام تسجيل بسيط جدًا لمرات الدخول والزيارات (قد يكون أقل دقة).

المرحلة 7: التحسينات النهائية والنشر

التجاوب مع الشاشات (Responsiveness): مراجعة وتأكيد عمل التصميم على كل الأجهزة.

تفعيل البحث الشامل: تنفيذ منطق البحث ليشمل (الدروس، الكتب، الأسئلة المجابة، ربما الدورات). يمكن استخدام Supabase Full-Text Search أو خدمة بحث خارجية إذا كان الحجم كبيرًا.

تحسينات الأداء (Performance).

تحسين محركات البحث (SEO).

الاختبار الشامل (Testing).

إعداد النشر (Deployment) على Vercel/Netlify.

ثانياً: خارطة الموقع / دليل التعديل المستقبلي (Mapping Features to Structure)

هذا تصور لكيفية ربط الميزات ببنية مجلدات Nuxt لتسهيل التعديل:

المظهر العام (ألوان، خطوط، Header, Footer, Layout):

tailwind.config.js (الألوان)

assets/css/tailwind.css (الخطوط الأساسية)

layouts/default.vue (الهيكل العام للصفحات)

layouts/admin.vue (الهيكل العام للداش بورد)

components/AppHeader.vue, components/AppFooter.vue

الصفحات الرئيسية (محتوى كل صفحة):

pages/index.vue (الرئيسية)

pages/lessons/index.vue, pages/lessons/[id].vue (الدروس)

pages/books/index.vue (الكتب)

pages/study/index.vue (الدراسة)

pages/ask/index.vue (اسأل الشيخ)

pages/about.vue (عن الشيخ)

pages/profile.vue (الملف الشخصي)

pages/leaderboard.vue (قائمة الترتيب)

pages/login.vue, pages/signup.vue (المصادقة)

pages/quizzes/[id].vue (عرض الاختبار)

المكونات القابلة لإعادة الاستخدام (بطاقات، أزرار، نماذج):

components/ (مثل LessonCard.vue, BookCard.vue, CommentSection.vue, QuestionForm.vue)

منطق جلب البيانات والتفاعل مع Supabase (من جانب العميل):

داخل <script setup> في الصفحات (pages/) والمكونات (components/).

قد يتم تنظيمها في composables/ (مثل useLessons.ts, useAuth.ts) للمنطق المتكرر.

منطق إدارة الحالة المشتركة (المستخدم الحالي، الإشعارات):

stores/ (مثل user.ts, notifications.ts)

حماية المسارات والتحقق من الصلاحيات:

middleware/ (مثل auth.ts, admin.ts)

المنطق المعقد أو العمليات الحساسة (من جانب الخادم):

server/api/ (مثل leaderboard.get.ts, admin/users/updateRole.post.ts)

لوحة التحكم (Admin Panel):

كل الصفحات داخل pages/admin/

التخطيط في layouts/admin.vue

قد تستخدم مكونات خاصة بها في components/admin/

المنطق قد يكون في الصفحات مباشرة أو في server/api/admin/ للعمليات الحساسة.

قاعدة البيانات (هيكل الجداول، الصلاحيات):

Supabase Dashboard (SQL Editor, Policies) - التعديلات هنا تؤثر على كل مكان يتفاعل مع الجدول المعدل.

ثالثاً: قائمة الجداول المحدثة المقترحة

profiles: بيانات المستخدم الإضافية (id -> auth.users, full_name, avatar_url, role ['user', 'admin']).

categories: تصنيفات المحتوى (id, name, description, type ['lesson', 'study_course', 'sermon']).

lessons: الدروس (id, title, description, youtube_url, audio_url, pdf_transcript_url [Google Drive], category_id, course_id [nullable], created_at).

sermons: الخطب (مشابه لـ lessons إذا فصلناها, id, title, youtube_url, audio_url, pdf_transcript_url, category_id, date).

books: الكتب والأبحاث والتفريغات (id, title, description, google_drive_url, cover_image_url, is_research, is_transcript).

study_courses: الدورات الدراسية (id, title, description, category_id, youtube_playlist_url, image_url).

course_enrollments: تسجيل الطلاب في الدورات (user_id, course_id, enrolled_at).

lesson_completions: تتبع إكمال الدروس (user_id, lesson_id, completed_at).

comments: التعليقات (id, user_id, content, parent_comment_id [للردود], lesson_id [nullable], sermon_id [nullable], book_id [nullable], course_id [nullable], created_at, is_approved).

questions_to_sheikh: أسئلة المستخدمين للشيخ (id, user_id, question_text, submitted_at, answer_text, answered_at, is_public, is_answered).

user_private_messages: الرسائل الخاصة لردود الشيخ (id, user_id, title, content, created_at, is_read, source ['ask_sheikh_reply', 'admin_message']).

quizzes: الاختبارات (id, title, description, course_id, lesson_id [nullable], due_date [nullable]).

quiz_questions: أسئلة الاختبارات (id, quiz_id, question_text, type ['mcq', 'true_false', 'written'], order, points).

question_options: خيارات أسئلة MCQ (id, question_id, option_text, is_correct).

quiz_attempts: محاولات الطلاب في الاختبارات (id, user_id, quiz_id, submitted_at, score [auto-calculated], manual_score [nullable], grading_status ['auto_graded', 'pending_manual', 'graded'], attempt_data [JSON - لتخزين إجابات الطالب]).

notifications: الإشعارات العامة والخاصة (id, user_id [nullable - عام إذا null], message, link [nullable], created_at, is_read).

settings: إعدادات الموقع العامة (key [e.g., 'live_stream_url', 'show_leaderboard_snippet'], value).

site_stats: (اختياري، بسيط جدًا) لتتبع عدد مرات الدخول أو تسجيل المستخدمين (type ['login', 'register', 'visit'], user_id [nullable], timestamp). ملاحظة: لتتبع الزوار الفعليين، Google Analytics أفضل.

الآن، الكرة في ملعبك:

هل هذه الخطة المحدثة تغطي كل ما تريده؟

هل "خارطة الموقع" واضحة كدليل للتعديل؟

هل قائمة الجداول المحدثة تبدو منطقية وتغطي البيانات المطلوبة؟

هل هناك أي تعديلات أو إضافات أخرى قبل أن أبدأ في كتابة شيفرة SQL لهذه الجداول؟

📊 تتبع التقدم - موقع الشيخ بشندي

الخطوة المنجزة للتو: مراجعة وتوسيع خطة العمل بناءً على التفاصيل الجديدة، اقتراح خارطة للموقع، وتحديث قائمة جداول قاعدة البيانات المقترحة.

الملخص: تم دمج جميع متطلبات المستخدم في خطة عمل مفصلة، وتقديم دليل لربط الميزات بهيكل الكود، وتحديد بنية قاعدة البيانات بشكل أكثر تفصيلاً.

الحالة: تم بنجاح ✅ (تم تحديث الخطط والهياكل المقترحة)

الخطوة التالية المقترحة: الخطوة 3 (الجزء الرئيسي): تصميم جداول قاعدة بيانات Supabase (SQL) - البدء بإنشاء شيفرة SQL للجداول المحدثة.

المطلوب منك الآن: مراجعة الخطة المحدثة، خارطة الموقع، وقائمة الجداول. أعطني الضوء الأخضر أو اطلب أي تعديلات إضافية قبل البدء في كتابة SQL.

(عند بدء جلسة جديدة، يرجى نسخ هذا القسم الأخير وإرساله لي لنعرف من أين نبدأ)


const { $toast } = useNuxtApp();
ConfirmationModal.vue

SELECT 
  table_name,
  column_name,
  data_type
FROM 
  information_schema.columns
WHERE 
  table_schema = 'public'
ORDER BY 
  table_name, ordinal_position;
